<><><><><><><><><><><><><><><><><>
starting	/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic16/ralloc.c:pic16_assignRegisters
ebbs before optimizing:

----------------------------------------------------------------
Basic Block _entry : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 1 : bbnum = 0 1st iCode = 1 , last iCode = 4
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 6 bSize = 1
Bits on { }

local defines bitVector :
pointers Set bitvector :bitvector Size = 6 bSize = 1
Bits on { (0) }

in pointers Set bitvector :
inDefs Set bitvector :
outDefs Set bitvector :bitvector Size = 6 bSize = 1
Bits on { }

usesDefs Set bitvector :bitvector Size = 6 bSize = 1
Bits on { }

----------------------------------------------------------------
led.c(l6:s1:k0:d0:s0)	 _entry($2) :
led.c(l6:s2:k1:d0:s0)		proc _configled [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}
led.c(l7:s3:k2:d0:s0)		0xf95 {unsigned-char near* literal} := 0x0 {const-unsigned-char literal}
led.c(l8:s4:k3:d0:s0)		0xf83 {unsigned-char near* literal} := 0xff {const-unsigned-char literal}

----------------------------------------------------------------
Basic Block _return : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 2 : bbnum = 1 1st iCode = 5 , last iCode = 6
visited 1 : hasFcall = 0

defines bitVector :bitvector Size = 6 bSize = 1
Bits on { }

local defines bitVector :
pointers Set bitvector :bitvector Size = 6 bSize = 1
Bits on { (0) }

in pointers Set bitvector :bitvector Size = 6 bSize = 1
Bits on { (0) }

inDefs Set bitvector :bitvector Size = 6 bSize = 1
Bits on { }

outDefs Set bitvector :bitvector Size = 6 bSize = 1
Bits on { }

usesDefs Set bitvector :bitvector Size = 6 bSize = 1
Bits on { }

----------------------------------------------------------------
led.c(l8:s5:k4:d0:s0)	 _return($1) :
led.c(l8:s6:k5:d0:s0)		eproc _configled [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}
pic16_freeAllRegs
pic16_packRegisters
pointer is set
  result:0xf95 {unsigned-char near* literal}
  left:
  right:0x0 {const-unsigned-char literal}
pointer is set
  result:0xf83 {unsigned-char near* literal}
  left:
  right:0xff {const-unsigned-char literal}
 4213
x  left:_configled [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}
    c   Symbol type: void function ( ) fixed
 4213
  4014 - Pointer set
  4191 - pointer reg req = 0
 4213
  4014 - Pointer set
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
 4213
x  left:_configled [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}
    c   Symbol type: void function ( ) fixed
 4213
regTypeNum
serialRegAssign
  op: LABEL
deassignLRs
  op: FUNCTION
pic16_allocDirReg:815 symbol name _configled
  827  storage class 0 
 838  specifier
_configled [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}
pic16_allocDirReg:861 sym: configled in codespace
deassignLRs
  op: =
pic16_allocDirReg BAD, op is NULL
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: =
pic16_allocDirReg BAD, op is NULL
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: LABEL
deassignLRs
  op: ENDFUNCTION
pic16_allocDirReg:815 symbol name _configled
  827  storage class 0 
 838  specifier
_configled [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}
pic16_allocDirReg:861 sym: configled in codespace
deassignLRs
createRegMask
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
ebbs after optimizing:

----------------------------------------------------------------
Basic Block _entry : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 1 : bbnum = 0 1st iCode = 1 , last iCode = 4
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 6 bSize = 1
Bits on { }

local defines bitVector :
pointers Set bitvector :bitvector Size = 6 bSize = 1
Bits on { (0) }

in pointers Set bitvector :
inDefs Set bitvector :
outDefs Set bitvector :bitvector Size = 6 bSize = 1
Bits on { }

usesDefs Set bitvector :bitvector Size = 6 bSize = 1
Bits on { }

----------------------------------------------------------------
led.c(l6:s1:k0:d0:s0)	 _entry($2) :
led.c(l6:s2:k1:d0:s0)		proc _configled [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}
led.c(l7:s3:k2:d0:s0)		0xf95 {unsigned-char near* literal} := 0x0 {const-unsigned-char literal}
led.c(l8:s4:k3:d0:s0)		0xf83 {unsigned-char near* literal} := 0xff {const-unsigned-char literal}
led.c(l8:s5:k4:d0:s0)	 _return($1) :
led.c(l8:s6:k5:d0:s0)		eproc _configled [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}

----------------------------------------------------------------
Basic Block _return : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 2 : bbnum = 1 1st iCode = 5 , last iCode = 6
visited 1 : hasFcall = 0

defines bitVector :bitvector Size = 6 bSize = 1
Bits on { }

local defines bitVector :
pointers Set bitvector :bitvector Size = 6 bSize = 1
Bits on { (0) }

in pointers Set bitvector :bitvector Size = 6 bSize = 1
Bits on { (0) }

inDefs Set bitvector :bitvector Size = 6 bSize = 1
Bits on { }

outDefs Set bitvector :bitvector Size = 6 bSize = 1
Bits on { }

usesDefs Set bitvector :bitvector Size = 6 bSize = 1
Bits on { }

----------------------------------------------------------------
led.c(l8:s5:k4:d0:s0)	 _return($1) :
led.c(l8:s6:k5:d0:s0)		eproc _configled [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}
pic16_freeAllRegs
leaving
<><><><><><><><><><><><><><><><><>
<><><><><><><><><><><><><><><><><>
starting	/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic16/ralloc.c:pic16_assignRegisters
ebbs before optimizing:

----------------------------------------------------------------
Basic Block _entry : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 1 : bbnum = 0 1st iCode = 1 , last iCode = 8
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 10 bSize = 2
Bits on { (2) (3) (4) (5) (6) }

local defines bitVector :bitvector Size = 10 bSize = 2
Bits on { (2) (3) (4) (5) (6) }

pointers Set bitvector :bitvector Size = 10 bSize = 2
Bits on { (0) }

in pointers Set bitvector :
inDefs Set bitvector :
outDefs Set bitvector :bitvector Size = 10 bSize = 2
Bits on { (2) (3) (4) (5) (6) }

usesDefs Set bitvector :bitvector Size = 10 bSize = 2
Bits on { (2) (3) (4) (5) (6) }

----------------------------------------------------------------
led.c(l11:s1:k0:d0:s0)	 _entry($2) :
led.c(l11:s2:k1:d0:s0)		proc _ligaled [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l11:s3:k2:d0:s0)	iTemp0 [k2 lr3:5 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _ligaled_num_1_3} = recv _ligaled [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l12:s4:k3:d0:s0)		iTemp1 [k4 lr4:7 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register} = @[0xf83 {volatile-unsigned-char near* literal} + 0x0 {const-unsigned-char literal}]
led.c(l12:s5:k4:d0:s0)		iTemp2 [k5 lr5:6 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = 0x1 {const-unsigned-char literal} << iTemp0 [k2 lr3:5 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _ligaled_num_1_3}
led.c(l12:s6:k5:d0:s0)		iTemp3 [k6 lr6:7 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} = ~ iTemp2 [k5 lr5:6 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
led.c(l12:s7:k6:d0:s0)		iTemp4 [k7 lr7:8 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} = iTemp1 [k4 lr4:7 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register} & iTemp3 [k6 lr6:7 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}
led.c(l12:s8:k7:d0:s0)		0xf83 {unsigned-char near* literal} := iTemp4 [k7 lr7:8 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}

----------------------------------------------------------------
Basic Block _return : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 2 : bbnum = 1 1st iCode = 9 , last iCode = 10
visited 1 : hasFcall = 0

defines bitVector :bitvector Size = 10 bSize = 2
Bits on { }

local defines bitVector :
pointers Set bitvector :bitvector Size = 10 bSize = 2
Bits on { (0) }

in pointers Set bitvector :bitvector Size = 10 bSize = 2
Bits on { (0) }

inDefs Set bitvector :bitvector Size = 10 bSize = 2
Bits on { (2) (3) (4) (5) (6) }

outDefs Set bitvector :bitvector Size = 10 bSize = 2
Bits on { (2) (3) (4) (5) (6) }

usesDefs Set bitvector :bitvector Size = 10 bSize = 2
Bits on { }

----------------------------------------------------------------
led.c(l12:s9:k8:d0:s0)	 _return($1) :
led.c(l12:s10:k9:d0:s0)		eproc _ligaled [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
pic16_freeAllRegs
pic16_packRegisters
pointer is set
  result:0xf83 {unsigned-char near* literal}
  left:
  right:iTemp4 [k7 lr7:8 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}
 4213
x  left:_ligaled [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
    c   Symbol type: void function ( char fixed) fixed
 4213
x  left:_ligaled [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
    c   Symbol type: void function ( char fixed) fixed
  result:iTemp0 [k2 lr3:5 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _ligaled_num_1_3}
          Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
packForReceive
  result:iTemp0 [k2 lr3:5 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _ligaled_num_1_3}
  left:_ligaled [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
  right:
    used on right
  hey we can remove this unnecessary assign
  result:iTemp1 [k4 lr4:7 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}
          Symbol type: unsigned-char register
  4191 - pointer reg req = 0
 4213
  right:iTemp0 [k2 lr3:5 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _ligaled_num_1_3}
         Symbol type: char fixed
  result:iTemp2 [k5 lr5:6 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
          Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp2 [k5 lr5:6 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
    c   Symbol type: char fixed
  result:iTemp3 [k6 lr6:7 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}
          Symbol type: unsigned-char fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp1 [k4 lr4:7 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}
    c   Symbol type: unsigned-char register
  right:iTemp3 [k6 lr6:7 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}
         Symbol type: unsigned-char fixed
  result:iTemp4 [k7 lr7:8 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}
          Symbol type: unsigned-char fixed
  4191 - pointer reg req = 0
isBitwiseOptimizable
 4213
  right:iTemp4 [k7 lr7:8 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}
         Symbol type: unsigned-char fixed
  4014 - Pointer set
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
 4213
x  left:_ligaled [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
    c   Symbol type: void function ( char fixed) fixed
 4213
regTypeNum
  2754 - iTemp0
  2765 - itemp register
  reg name iTemp0,  reg type REG_GPR
  2754 - iTemp1
  2765 - itemp register
  reg name iTemp1,  reg type REG_GPR
  2754 - iTemp2
  2765 - itemp register
  reg name iTemp2,  reg type REG_GPR
  2754 - iTemp3
  2765 - itemp register
  reg name iTemp3,  reg type REG_GPR
  2754 - iTemp4
  2765 - itemp register
  reg name iTemp4,  reg type REG_GPR
serialRegAssign
  op: LABEL
deassignLRs
  op: FUNCTION
pic16_allocDirReg:815 symbol name _ligaled
  827  storage class 0 
 838  specifier
_ligaled [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
pic16_allocDirReg:861 sym: ligaled in codespace
deassignLRs
  op: RECEIVE
pic16_allocDirReg:815 symbol name _ligaled
  827  storage class 0 
 838  specifier
_ligaled [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
pic16_allocDirReg:861 sym: ligaled in codespace
deassignLRs
willCauseSpill
computeSpillable
When I get clever, I'll optimize the receive logic
bitvector Size = 10 bSize = 2
Bits on { (2) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 0 (0x0)
  2457 - 
  2471 - 
  op: GET_VALUE_AT_ADDRESS
pic16_allocDirReg BAD, op is NULL
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 10 bSize = 2
Bits on { (2) (4) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 1 (0x1)
  2457 - 
  2471 - 
  op: LEFT_OP
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 10 bSize = 2
Bits on { (2) (4) (5) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 2 (0x2)
  2457 - 
positionRegs
  2471 - 
  op: ~
deassignLRs
nfreeRegsType
freeReg
  op: BITWISEAND
deassignLRs
nfreeRegsType
freeReg
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
freeReg
  op: LABEL
deassignLRs
  op: ENDFUNCTION
pic16_allocDirReg:815 symbol name _ligaled
  827  storage class 0 
 838  specifier
_ligaled [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
pic16_allocDirReg:861 sym: ligaled in codespace
deassignLRs
createRegMask
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
ebbs after optimizing:

----------------------------------------------------------------
Basic Block _entry : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 1 : bbnum = 0 1st iCode = 1 , last iCode = 8
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 10 bSize = 2
Bits on { (2) (3) (4) (5) (6) }

local defines bitVector :bitvector Size = 10 bSize = 2
Bits on { (2) (3) (4) (5) (6) }

pointers Set bitvector :bitvector Size = 10 bSize = 2
Bits on { (0) }

in pointers Set bitvector :
inDefs Set bitvector :
outDefs Set bitvector :bitvector Size = 10 bSize = 2
Bits on { (2) (3) (4) (5) (6) }

usesDefs Set bitvector :bitvector Size = 10 bSize = 2
Bits on { (2) (3) (4) (5) (6) }

----------------------------------------------------------------
led.c(l11:s1:k0:d0:s0)	 _entry($2) :
led.c(l11:s2:k1:d0:s0)		proc _ligaled [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l11:s3:k2:d0:s0)	iTemp0 [k2 lr3:5 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _ligaled_num_1_3}[r0x00 ] = recv _ligaled [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l12:s4:k3:d0:s0)		iTemp1 [k4 lr4:7 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x01 ] = @[0xf83 {volatile-unsigned-char near* literal} + 0x0 {const-unsigned-char literal}]
led.c(l12:s5:k4:d0:s0)		iTemp2 [k5 lr5:6 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x02 ] = 0x1 {const-unsigned-char literal} << iTemp0 [k2 lr3:5 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _ligaled_num_1_3}[r0x00 ]
led.c(l12:s6:k5:d0:s0)		iTemp3 [k6 lr6:7 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}[r0x00 ] = ~ iTemp2 [k5 lr5:6 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x02 ]
led.c(l12:s7:k6:d0:s0)		iTemp4 [k7 lr7:8 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}[r0x01 ] = iTemp1 [k4 lr4:7 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x01 ] & iTemp3 [k6 lr6:7 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}[r0x00 ]
led.c(l12:s8:k7:d0:s0)		0xf83 {unsigned-char near* literal} := iTemp4 [k7 lr7:8 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}[r0x01 ]
led.c(l12:s9:k8:d0:s0)	 _return($1) :
led.c(l12:s10:k9:d0:s0)		eproc _ligaled [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}

----------------------------------------------------------------
Basic Block _return : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 2 : bbnum = 1 1st iCode = 9 , last iCode = 10
visited 1 : hasFcall = 0

defines bitVector :bitvector Size = 10 bSize = 2
Bits on { }

local defines bitVector :
pointers Set bitvector :bitvector Size = 10 bSize = 2
Bits on { (0) }

in pointers Set bitvector :bitvector Size = 10 bSize = 2
Bits on { (0) }

inDefs Set bitvector :bitvector Size = 10 bSize = 2
Bits on { (2) (3) (4) (5) (6) }

outDefs Set bitvector :bitvector Size = 10 bSize = 2
Bits on { (2) (3) (4) (5) (6) }

usesDefs Set bitvector :bitvector Size = 10 bSize = 2
Bits on { }

----------------------------------------------------------------
led.c(l12:s9:k8:d0:s0)	 _return($1) :
led.c(l12:s10:k9:d0:s0)		eproc _ligaled [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x0
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x1
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x2
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x0
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x2
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x2
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x2
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x0
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x0
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x1
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_freeAllRegs
leaving
<><><><><><><><><><><><><><><><><>
<><><><><><><><><><><><><><><><><>
starting	/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic16/ralloc.c:pic16_assignRegisters
ebbs before optimizing:

----------------------------------------------------------------
Basic Block _entry : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 1 : bbnum = 0 1st iCode = 1 , last iCode = 8
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 10 bSize = 2
Bits on { (2) (3) (4) (5) (6) }

local defines bitVector :bitvector Size = 10 bSize = 2
Bits on { (2) (3) (4) (5) (6) }

pointers Set bitvector :bitvector Size = 10 bSize = 2
Bits on { (0) }

in pointers Set bitvector :
inDefs Set bitvector :
outDefs Set bitvector :bitvector Size = 10 bSize = 2
Bits on { (2) (3) (4) (5) (6) }

usesDefs Set bitvector :bitvector Size = 10 bSize = 2
Bits on { (2) (3) (4) (5) (6) }

----------------------------------------------------------------
led.c(l15:s1:k0:d0:s0)	 _entry($2) :
led.c(l15:s2:k1:d0:s0)		proc _desligaled [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l15:s3:k2:d0:s0)	iTemp0 [k2 lr3:5 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _desligaled_num_1_5} = recv _desligaled [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l16:s4:k3:d0:s0)		iTemp1 [k4 lr4:7 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register} = @[0xf83 {volatile-unsigned-char near* literal} + 0x0 {const-unsigned-char literal}]
led.c(l16:s5:k4:d0:s0)		iTemp2 [k5 lr5:6 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = 0x1 {const-unsigned-char literal} << iTemp0 [k2 lr3:5 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _desligaled_num_1_5}
led.c(l16:s6:k5:d0:s0)		iTemp3 [k6 lr6:7 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} = (unsigned-char register)iTemp2 [k5 lr5:6 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
led.c(l16:s7:k6:d0:s0)		iTemp4 [k7 lr7:8 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} = iTemp1 [k4 lr4:7 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register} | iTemp3 [k6 lr6:7 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}
led.c(l16:s8:k7:d0:s0)		0xf83 {unsigned-char near* literal} := iTemp4 [k7 lr7:8 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}

----------------------------------------------------------------
Basic Block _return : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 2 : bbnum = 1 1st iCode = 9 , last iCode = 10
visited 1 : hasFcall = 0

defines bitVector :bitvector Size = 10 bSize = 2
Bits on { }

local defines bitVector :
pointers Set bitvector :bitvector Size = 10 bSize = 2
Bits on { (0) }

in pointers Set bitvector :bitvector Size = 10 bSize = 2
Bits on { (0) }

inDefs Set bitvector :bitvector Size = 10 bSize = 2
Bits on { (2) (3) (4) (5) (6) }

outDefs Set bitvector :bitvector Size = 10 bSize = 2
Bits on { (2) (3) (4) (5) (6) }

usesDefs Set bitvector :bitvector Size = 10 bSize = 2
Bits on { }

----------------------------------------------------------------
led.c(l16:s9:k8:d0:s0)	 _return($1) :
led.c(l16:s10:k9:d0:s0)		eproc _desligaled [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
pic16_freeAllRegs
pic16_packRegisters
pointer is set
  result:0xf83 {unsigned-char near* literal}
  left:
  right:iTemp4 [k7 lr7:8 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}
 4213
x  left:_desligaled [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
    c   Symbol type: void function ( char fixed) fixed
 4213
x  left:_desligaled [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
    c   Symbol type: void function ( char fixed) fixed
  result:iTemp0 [k2 lr3:5 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _desligaled_num_1_5}
          Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
packForReceive
  result:iTemp0 [k2 lr3:5 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _desligaled_num_1_5}
  left:_desligaled [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
  right:
    used on right
  hey we can remove this unnecessary assign
  result:iTemp1 [k4 lr4:7 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}
          Symbol type: unsigned-char register
  4191 - pointer reg req = 0
 4213
  right:iTemp0 [k2 lr3:5 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _desligaled_num_1_5}
         Symbol type: char fixed
  result:iTemp2 [k5 lr5:6 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
          Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
  right:iTemp2 [k5 lr5:6 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
         Symbol type: char fixed
  result:iTemp3 [k6 lr6:7 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}
          Symbol type: unsigned-char fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp1 [k4 lr4:7 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}
    c   Symbol type: unsigned-char register
  right:iTemp3 [k6 lr6:7 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}
         Symbol type: unsigned-char fixed
  result:iTemp4 [k7 lr7:8 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}
          Symbol type: unsigned-char fixed
  4191 - pointer reg req = 0
isBitwiseOptimizable
 4213
  right:iTemp4 [k7 lr7:8 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}
         Symbol type: unsigned-char fixed
  4014 - Pointer set
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
 4213
x  left:_desligaled [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
    c   Symbol type: void function ( char fixed) fixed
 4213
regTypeNum
  2754 - iTemp0
  2765 - itemp register
  reg name iTemp0,  reg type REG_GPR
  2754 - iTemp1
  2765 - itemp register
  reg name iTemp1,  reg type REG_GPR
  2754 - iTemp2
  2765 - itemp register
  reg name iTemp2,  reg type REG_GPR
  2754 - iTemp3
  2765 - itemp register
  reg name iTemp3,  reg type REG_GPR
  2754 - iTemp4
  2765 - itemp register
  reg name iTemp4,  reg type REG_GPR
serialRegAssign
  op: LABEL
deassignLRs
  op: FUNCTION
pic16_allocDirReg:815 symbol name _desligaled
  827  storage class 0 
 838  specifier
_desligaled [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
pic16_allocDirReg:861 sym: desligaled in codespace
deassignLRs
  op: RECEIVE
pic16_allocDirReg:815 symbol name _desligaled
  827  storage class 0 
 838  specifier
_desligaled [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
pic16_allocDirReg:861 sym: desligaled in codespace
deassignLRs
willCauseSpill
computeSpillable
When I get clever, I'll optimize the receive logic
bitvector Size = 10 bSize = 2
Bits on { (2) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 2 (0x2)
  2457 - 
  2471 - 
  op: GET_VALUE_AT_ADDRESS
pic16_allocDirReg BAD, op is NULL
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 10 bSize = 2
Bits on { (2) (4) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 2 (0x2)
  2457 - 
  2471 - 
  op: LEFT_OP
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 10 bSize = 2
Bits on { (2) (4) (5) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 2 (0x2)
  2457 - 
positionRegs
  2471 - 
  op: CAST
pic16_allocDirReg BAD, op is NULL
deassignLRs
nfreeRegsType
freeReg
  op: |
deassignLRs
nfreeRegsType
freeReg
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
freeReg
  op: LABEL
deassignLRs
  op: ENDFUNCTION
pic16_allocDirReg:815 symbol name _desligaled
  827  storage class 0 
 838  specifier
_desligaled [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
pic16_allocDirReg:861 sym: desligaled in codespace
deassignLRs
createRegMask
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
ebbs after optimizing:

----------------------------------------------------------------
Basic Block _entry : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 1 : bbnum = 0 1st iCode = 1 , last iCode = 8
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 10 bSize = 2
Bits on { (2) (3) (4) (5) (6) }

local defines bitVector :bitvector Size = 10 bSize = 2
Bits on { (2) (3) (4) (5) (6) }

pointers Set bitvector :bitvector Size = 10 bSize = 2
Bits on { (0) }

in pointers Set bitvector :
inDefs Set bitvector :
outDefs Set bitvector :bitvector Size = 10 bSize = 2
Bits on { (2) (3) (4) (5) (6) }

usesDefs Set bitvector :bitvector Size = 10 bSize = 2
Bits on { (2) (3) (4) (5) (6) }

----------------------------------------------------------------
led.c(l15:s1:k0:d0:s0)	 _entry($2) :
led.c(l15:s2:k1:d0:s0)		proc _desligaled [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l15:s3:k2:d0:s0)	iTemp0 [k2 lr3:5 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _desligaled_num_1_5}[r0x00 ] = recv _desligaled [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l16:s4:k3:d0:s0)		iTemp1 [k4 lr4:7 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x01 ] = @[0xf83 {volatile-unsigned-char near* literal} + 0x0 {const-unsigned-char literal}]
led.c(l16:s5:k4:d0:s0)		iTemp2 [k5 lr5:6 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x02 ] = 0x1 {const-unsigned-char literal} << iTemp0 [k2 lr3:5 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _desligaled_num_1_5}[r0x00 ]
led.c(l16:s6:k5:d0:s0)		iTemp3 [k6 lr6:7 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}[r0x00 ] = (unsigned-char register)iTemp2 [k5 lr5:6 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x02 ]
led.c(l16:s7:k6:d0:s0)		iTemp4 [k7 lr7:8 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}[r0x01 ] = iTemp1 [k4 lr4:7 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x01 ] | iTemp3 [k6 lr6:7 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}[r0x00 ]
led.c(l16:s8:k7:d0:s0)		0xf83 {unsigned-char near* literal} := iTemp4 [k7 lr7:8 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}[r0x01 ]
led.c(l16:s9:k8:d0:s0)	 _return($1) :
led.c(l16:s10:k9:d0:s0)		eproc _desligaled [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}

----------------------------------------------------------------
Basic Block _return : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 2 : bbnum = 1 1st iCode = 9 , last iCode = 10
visited 1 : hasFcall = 0

defines bitVector :bitvector Size = 10 bSize = 2
Bits on { }

local defines bitVector :
pointers Set bitvector :bitvector Size = 10 bSize = 2
Bits on { (0) }

in pointers Set bitvector :bitvector Size = 10 bSize = 2
Bits on { (0) }

inDefs Set bitvector :bitvector Size = 10 bSize = 2
Bits on { (2) (3) (4) (5) (6) }

outDefs Set bitvector :bitvector Size = 10 bSize = 2
Bits on { (2) (3) (4) (5) (6) }

usesDefs Set bitvector :bitvector Size = 10 bSize = 2
Bits on { }

----------------------------------------------------------------
led.c(l16:s9:k8:d0:s0)	 _return($1) :
led.c(l16:s10:k9:d0:s0)		eproc _desligaled [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x0
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x1
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x2
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x0
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x2
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x2
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x2
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x0
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x0
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x1
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_freeAllRegs
leaving
<><><><><><><><><><><><><><><><><>
<><><><><><><><><><><><><><><><><>
starting	/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic16/ralloc.c:pic16_assignRegisters
ebbs before optimizing:

----------------------------------------------------------------
Basic Block _entry : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 1 : bbnum = 0 1st iCode = 1 , last iCode = 6
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (2) (5) }

local defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (5) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :
outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (5) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) }

----------------------------------------------------------------
led.c(l19:s1:k0:d0:s0)	 _entry($66) :
led.c(l19:s2:k1:d0:s0)		proc _sequencial [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}
led.c(l19:s3:k2:d0:s0)	iTemp0 [k2 lr3:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7} = recv _sequencial [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}
led.c(l21:s4:k3:d0:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
led.c(l21:s5:k4:d0:s0)		iTemp1 [k6 lr5:5 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l22:s6:k5:d0:s0)		iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8} := 0 {float literal}

----------------------------------------------------------------
Basic Block preHeaderLbl32 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 2 : bbnum = 1 1st iCode = 7 , last iCode = 7
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { }

local defines bitVector :
pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (5) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (5) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { }

----------------------------------------------------------------
led.c(l22:s7:k261:d0:s0)	 preHeaderLbl32($132) :

----------------------------------------------------------------
Basic Block _forcond_0 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 3 : bbnum = 2 1st iCode = 8 , last iCode = 12
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (7) }

local defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (7) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (5) (7) (13) (14) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (5) (7) (13) (14) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (5) (7) (14) }

----------------------------------------------------------------
led.c(l22:s8:k6:d1:s0)	 _forcond_0($18) :
led.c(l22:s9:k277:d1:s0)		send iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}{argreg = 1}
led.c(l22:s10:k278:d1:s0)		send iTemp0 [k2 lr3:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}{argreg = 2}
led.c(l22:s11:k279:d1:s0)		iTemp3 [k9 lr11:12 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l22:s12:k8:d1:s0)		if iTemp3 [k9 lr11:12 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _forbreak_0($1)

----------------------------------------------------------------
Basic Block _eBBlock32 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 4 : bbnum = 3 1st iCode = 13 , last iCode = 17
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (13) (14) }

local defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (13) (14) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (5) (7) (13) (14) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (14) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (5) (13) (14) }

----------------------------------------------------------------
led.c(l22:s13:k280:d1:s0)		send iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}{argreg = 1}
led.c(l22:s14:k281:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l22:s15:k282:d1:s0)		iTemp5 [k11 lr15:16 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float fixed} = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l22:s16:k14:d1:s0)		iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8} := iTemp5 [k11 lr15:16 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float fixed}
led.c(l22:s17:k15:d1:s0)		 goto _forcond_0($18)

----------------------------------------------------------------
Basic Block _forbreak_0 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 5 : bbnum = 4 1st iCode = 18 , last iCode = 21
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (19) }

local defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (18) (19) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (5) (7) (13) (14) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (19) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (18) }

----------------------------------------------------------------
led.c(l22:s18:k16:d0:s0)	 _forbreak_0($1) :
led.c(l23:s19:k17:d0:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
led.c(l23:s20:k18:d0:s0)		iTemp6 [k12 lr20:20 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l24:s21:k19:d0:s0)		iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8} := 0 {float literal}

----------------------------------------------------------------
Basic Block preHeaderLbl33 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 6 : bbnum = 5 1st iCode = 22 , last iCode = 22
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { }

local defines bitVector :
pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (19) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (19) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { }

----------------------------------------------------------------
led.c(l24:s22:k262:d0:s0)	 preHeaderLbl33($134) :

----------------------------------------------------------------
Basic Block _forcond_1 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 7 : bbnum = 6 1st iCode = 23 , last iCode = 27
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (21) }

local defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (21) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (19) (21) (27) (28) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (19) (21) (27) (28) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (19) (21) (28) }

----------------------------------------------------------------
led.c(l24:s23:k20:d1:s0)	 _forcond_1($21) :
led.c(l24:s24:k283:d1:s0)		send iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}{argreg = 1}
led.c(l24:s25:k284:d1:s0)		send iTemp0 [k2 lr3:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}{argreg = 2}
led.c(l24:s26:k285:d1:s0)		iTemp7 [k13 lr26:27 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l24:s27:k22:d1:s0)		if iTemp7 [k13 lr26:27 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _forbreak_1($2)

----------------------------------------------------------------
Basic Block _eBBlock33 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 8 : bbnum = 7 1st iCode = 28 , last iCode = 32
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (27) (28) }

local defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (27) (28) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (19) (21) (27) (28) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (28) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (19) (27) (28) }

----------------------------------------------------------------
led.c(l24:s28:k286:d1:s0)		send iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}{argreg = 1}
led.c(l24:s29:k287:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l24:s30:k288:d1:s0)		iTemp9 [k15 lr30:31 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float fixed} = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l24:s31:k28:d1:s0)		iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8} := iTemp9 [k15 lr30:31 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float fixed}
led.c(l24:s32:k29:d1:s0)		 goto _forcond_1($21)

----------------------------------------------------------------
Basic Block _forbreak_1 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 9 : bbnum = 8 1st iCode = 33 , last iCode = 36
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (33) }

local defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (32) (33) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (19) (21) (27) (28) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (33) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (32) }

----------------------------------------------------------------
led.c(l24:s33:k30:d0:s0)	 _forbreak_1($2) :
led.c(l25:s34:k31:d0:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
led.c(l25:s35:k32:d0:s0)		iTemp10 [k16 lr35:35 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l26:s36:k33:d0:s0)		iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8} := 0 {float literal}

----------------------------------------------------------------
Basic Block preHeaderLbl34 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 10 : bbnum = 9 1st iCode = 37 , last iCode = 37
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { }

local defines bitVector :
pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (33) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (33) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { }

----------------------------------------------------------------
led.c(l26:s37:k263:d0:s0)	 preHeaderLbl34($136) :

----------------------------------------------------------------
Basic Block _forcond_2 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 11 : bbnum = 10 1st iCode = 38 , last iCode = 42
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (35) }

local defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (35) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (33) (35) (41) (42) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (33) (35) (41) (42) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (33) (35) (42) }

----------------------------------------------------------------
led.c(l26:s38:k34:d1:s0)	 _forcond_2($24) :
led.c(l26:s39:k289:d1:s0)		send iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}{argreg = 1}
led.c(l26:s40:k290:d1:s0)		send iTemp0 [k2 lr3:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}{argreg = 2}
led.c(l26:s41:k291:d1:s0)		iTemp11 [k17 lr41:42 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l26:s42:k36:d1:s0)		if iTemp11 [k17 lr41:42 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _forbreak_2($3)

----------------------------------------------------------------
Basic Block _eBBlock34 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 12 : bbnum = 11 1st iCode = 43 , last iCode = 47
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (41) (42) }

local defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (41) (42) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (33) (35) (41) (42) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (42) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (33) (41) (42) }

----------------------------------------------------------------
led.c(l26:s43:k292:d1:s0)		send iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}{argreg = 1}
led.c(l26:s44:k293:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l26:s45:k294:d1:s0)		iTemp13 [k19 lr45:46 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float fixed} = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l26:s46:k42:d1:s0)		iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8} := iTemp13 [k19 lr45:46 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float fixed}
led.c(l26:s47:k43:d1:s0)		 goto _forcond_2($24)

----------------------------------------------------------------
Basic Block _forbreak_2 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 13 : bbnum = 12 1st iCode = 48 , last iCode = 51
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (47) }

local defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (46) (47) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (33) (35) (41) (42) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (47) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (46) }

----------------------------------------------------------------
led.c(l26:s48:k44:d0:s0)	 _forbreak_2($3) :
led.c(l27:s49:k45:d0:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
led.c(l27:s50:k46:d0:s0)		iTemp14 [k20 lr50:50 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l28:s51:k47:d0:s0)		iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8} := 0 {float literal}

----------------------------------------------------------------
Basic Block preHeaderLbl35 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 14 : bbnum = 13 1st iCode = 52 , last iCode = 52
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { }

local defines bitVector :
pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (47) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (47) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { }

----------------------------------------------------------------
led.c(l28:s52:k264:d0:s0)	 preHeaderLbl35($138) :

----------------------------------------------------------------
Basic Block _forcond_3 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 15 : bbnum = 14 1st iCode = 53 , last iCode = 57
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (49) }

local defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (49) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (47) (49) (55) (56) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (47) (49) (55) (56) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (47) (49) (56) }

----------------------------------------------------------------
led.c(l28:s53:k48:d1:s0)	 _forcond_3($27) :
led.c(l28:s54:k295:d1:s0)		send iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}{argreg = 1}
led.c(l28:s55:k296:d1:s0)		send iTemp0 [k2 lr3:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}{argreg = 2}
led.c(l28:s56:k297:d1:s0)		iTemp15 [k21 lr56:57 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l28:s57:k50:d1:s0)		if iTemp15 [k21 lr56:57 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _forbreak_3($4)

----------------------------------------------------------------
Basic Block _eBBlock35 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 16 : bbnum = 15 1st iCode = 58 , last iCode = 62
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (55) (56) }

local defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (55) (56) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (47) (49) (55) (56) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (56) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (47) (55) (56) }

----------------------------------------------------------------
led.c(l28:s58:k298:d1:s0)		send iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}{argreg = 1}
led.c(l28:s59:k299:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l28:s60:k300:d1:s0)		iTemp17 [k23 lr60:61 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float fixed} = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l28:s61:k56:d1:s0)		iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8} := iTemp17 [k23 lr60:61 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float fixed}
led.c(l28:s62:k57:d1:s0)		 goto _forcond_3($27)

----------------------------------------------------------------
Basic Block _forbreak_3 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 17 : bbnum = 16 1st iCode = 63 , last iCode = 66
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (61) }

local defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (60) (61) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (47) (49) (55) (56) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (61) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (60) }

----------------------------------------------------------------
led.c(l28:s63:k58:d0:s0)	 _forbreak_3($4) :
led.c(l29:s64:k59:d0:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
led.c(l29:s65:k60:d0:s0)		iTemp18 [k24 lr65:65 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l30:s66:k61:d0:s0)		iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8} := 0 {float literal}

----------------------------------------------------------------
Basic Block preHeaderLbl36 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 18 : bbnum = 17 1st iCode = 67 , last iCode = 67
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { }

local defines bitVector :
pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (61) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (61) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { }

----------------------------------------------------------------
led.c(l30:s67:k265:d0:s0)	 preHeaderLbl36($140) :

----------------------------------------------------------------
Basic Block _forcond_4 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 19 : bbnum = 18 1st iCode = 68 , last iCode = 72
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (63) }

local defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (63) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (61) (63) (69) (70) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (61) (63) (69) (70) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (61) (63) (70) }

----------------------------------------------------------------
led.c(l30:s68:k62:d1:s0)	 _forcond_4($30) :
led.c(l30:s69:k301:d1:s0)		send iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}{argreg = 1}
led.c(l30:s70:k302:d1:s0)		send iTemp0 [k2 lr3:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}{argreg = 2}
led.c(l30:s71:k303:d1:s0)		iTemp19 [k25 lr71:72 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l30:s72:k64:d1:s0)		if iTemp19 [k25 lr71:72 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _forbreak_4($5)

----------------------------------------------------------------
Basic Block _eBBlock36 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 20 : bbnum = 19 1st iCode = 73 , last iCode = 77
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (69) (70) }

local defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (69) (70) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (61) (63) (69) (70) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (70) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (61) (69) (70) }

----------------------------------------------------------------
led.c(l30:s73:k304:d1:s0)		send iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}{argreg = 1}
led.c(l30:s74:k305:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l30:s75:k306:d1:s0)		iTemp21 [k27 lr75:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float fixed} = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l30:s76:k70:d1:s0)		iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8} := iTemp21 [k27 lr75:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float fixed}
led.c(l30:s77:k71:d1:s0)		 goto _forcond_4($30)

----------------------------------------------------------------
Basic Block _forbreak_4 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 21 : bbnum = 20 1st iCode = 78 , last iCode = 81
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (75) }

local defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (74) (75) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (61) (63) (69) (70) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (75) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (74) }

----------------------------------------------------------------
led.c(l30:s78:k72:d0:s0)	 _forbreak_4($5) :
led.c(l31:s79:k73:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l31:s80:k74:d0:s0)		iTemp22 [k28 lr80:80 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l32:s81:k75:d0:s0)		iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8} := 0 {float literal}

----------------------------------------------------------------
Basic Block preHeaderLbl37 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 22 : bbnum = 21 1st iCode = 82 , last iCode = 82
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { }

local defines bitVector :
pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (75) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (75) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { }

----------------------------------------------------------------
led.c(l32:s82:k266:d0:s0)	 preHeaderLbl37($142) :

----------------------------------------------------------------
Basic Block _forcond_5 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 23 : bbnum = 22 1st iCode = 83 , last iCode = 87
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (77) }

local defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (77) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (75) (77) (83) (84) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (75) (77) (83) (84) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (75) (77) (84) }

----------------------------------------------------------------
led.c(l32:s83:k76:d1:s0)	 _forcond_5($33) :
led.c(l32:s84:k307:d1:s0)		send iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}{argreg = 1}
led.c(l32:s85:k308:d1:s0)		send iTemp0 [k2 lr3:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}{argreg = 2}
led.c(l32:s86:k309:d1:s0)		iTemp23 [k29 lr86:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l32:s87:k78:d1:s0)		if iTemp23 [k29 lr86:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _forbreak_5($6)

----------------------------------------------------------------
Basic Block _eBBlock37 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 24 : bbnum = 23 1st iCode = 88 , last iCode = 92
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (83) (84) }

local defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (83) (84) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (75) (77) (83) (84) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (84) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (75) (83) (84) }

----------------------------------------------------------------
led.c(l32:s88:k310:d1:s0)		send iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}{argreg = 1}
led.c(l32:s89:k311:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l32:s90:k312:d1:s0)		iTemp25 [k31 lr90:91 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float fixed} = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l32:s91:k84:d1:s0)		iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8} := iTemp25 [k31 lr90:91 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float fixed}
led.c(l32:s92:k85:d1:s0)		 goto _forcond_5($33)

----------------------------------------------------------------
Basic Block _forbreak_5 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 25 : bbnum = 24 1st iCode = 93 , last iCode = 96
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (89) }

local defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (88) (89) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (75) (77) (83) (84) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (89) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (88) }

----------------------------------------------------------------
led.c(l32:s93:k86:d0:s0)	 _forbreak_5($6) :
led.c(l33:s94:k87:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l33:s95:k88:d0:s0)		iTemp26 [k32 lr95:95 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l34:s96:k89:d0:s0)		iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8} := 0 {float literal}

----------------------------------------------------------------
Basic Block preHeaderLbl38 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 26 : bbnum = 25 1st iCode = 97 , last iCode = 97
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { }

local defines bitVector :
pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (89) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (89) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { }

----------------------------------------------------------------
led.c(l34:s97:k267:d0:s0)	 preHeaderLbl38($144) :

----------------------------------------------------------------
Basic Block _forcond_6 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 27 : bbnum = 26 1st iCode = 98 , last iCode = 102
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (91) }

local defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (91) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (89) (91) (97) (98) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (89) (91) (97) (98) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (89) (91) (98) }

----------------------------------------------------------------
led.c(l34:s98:k90:d1:s0)	 _forcond_6($36) :
led.c(l34:s99:k313:d1:s0)		send iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}{argreg = 1}
led.c(l34:s100:k314:d1:s0)		send iTemp0 [k2 lr3:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}{argreg = 2}
led.c(l34:s101:k315:d1:s0)		iTemp27 [k33 lr101:102 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l34:s102:k92:d1:s0)		if iTemp27 [k33 lr101:102 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _forbreak_6($7)

----------------------------------------------------------------
Basic Block _eBBlock38 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 28 : bbnum = 27 1st iCode = 103 , last iCode = 107
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (97) (98) }

local defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (97) (98) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (89) (91) (97) (98) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (98) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (89) (97) (98) }

----------------------------------------------------------------
led.c(l34:s103:k316:d1:s0)		send iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}{argreg = 1}
led.c(l34:s104:k317:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l34:s105:k318:d1:s0)		iTemp29 [k35 lr105:106 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float fixed} = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l34:s106:k98:d1:s0)		iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8} := iTemp29 [k35 lr105:106 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float fixed}
led.c(l34:s107:k99:d1:s0)		 goto _forcond_6($36)

----------------------------------------------------------------
Basic Block _forbreak_6 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 29 : bbnum = 28 1st iCode = 108 , last iCode = 111
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (103) }

local defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (102) (103) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (89) (91) (97) (98) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (103) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (102) }

----------------------------------------------------------------
led.c(l34:s108:k100:d0:s0)	 _forbreak_6($7) :
led.c(l35:s109:k101:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l35:s110:k102:d0:s0)		iTemp30 [k36 lr110:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l36:s111:k103:d0:s0)		iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8} := 0 {float literal}

----------------------------------------------------------------
Basic Block preHeaderLbl39 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 30 : bbnum = 29 1st iCode = 112 , last iCode = 112
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { }

local defines bitVector :
pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (103) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (103) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { }

----------------------------------------------------------------
led.c(l36:s112:k268:d0:s0)	 preHeaderLbl39($146) :

----------------------------------------------------------------
Basic Block _forcond_7 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 31 : bbnum = 30 1st iCode = 113 , last iCode = 117
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (105) }

local defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (105) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (103) (105) (111) (112) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (103) (105) (111) (112) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (103) (105) (112) }

----------------------------------------------------------------
led.c(l36:s113:k104:d1:s0)	 _forcond_7($39) :
led.c(l36:s114:k319:d1:s0)		send iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}{argreg = 1}
led.c(l36:s115:k320:d1:s0)		send iTemp0 [k2 lr3:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}{argreg = 2}
led.c(l36:s116:k321:d1:s0)		iTemp31 [k37 lr116:117 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l36:s117:k106:d1:s0)		if iTemp31 [k37 lr116:117 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _forbreak_7($8)

----------------------------------------------------------------
Basic Block _eBBlock39 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 32 : bbnum = 31 1st iCode = 118 , last iCode = 122
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (111) (112) }

local defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (111) (112) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (103) (105) (111) (112) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (112) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (103) (111) (112) }

----------------------------------------------------------------
led.c(l36:s118:k322:d1:s0)		send iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}{argreg = 1}
led.c(l36:s119:k323:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l36:s120:k324:d1:s0)		iTemp33 [k39 lr120:121 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float fixed} = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l36:s121:k112:d1:s0)		iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8} := iTemp33 [k39 lr120:121 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float fixed}
led.c(l36:s122:k113:d1:s0)		 goto _forcond_7($39)

----------------------------------------------------------------
Basic Block _forbreak_7 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 33 : bbnum = 32 1st iCode = 123 , last iCode = 126
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (117) }

local defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (116) (117) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (103) (105) (111) (112) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (117) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (116) }

----------------------------------------------------------------
led.c(l36:s123:k114:d0:s0)	 _forbreak_7($8) :
led.c(l37:s124:k115:d0:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
led.c(l37:s125:k116:d0:s0)		iTemp34 [k42 lr125:125 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l38:s126:k117:d0:s0)		iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8} := 0 {float literal}

----------------------------------------------------------------
Basic Block preHeaderLbl40 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 34 : bbnum = 33 1st iCode = 127 , last iCode = 127
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { }

local defines bitVector :
pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (117) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (117) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { }

----------------------------------------------------------------
led.c(l38:s127:k269:d0:s0)	 preHeaderLbl40($148) :

----------------------------------------------------------------
Basic Block _forcond_8 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 35 : bbnum = 34 1st iCode = 128 , last iCode = 132
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (119) }

local defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (119) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (117) (119) (125) (126) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (117) (119) (125) (126) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (117) (119) (126) }

----------------------------------------------------------------
led.c(l38:s128:k118:d1:s0)	 _forcond_8($42) :
led.c(l38:s129:k325:d1:s0)		send iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}{argreg = 1}
led.c(l38:s130:k326:d1:s0)		send iTemp0 [k2 lr3:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}{argreg = 2}
led.c(l38:s131:k327:d1:s0)		iTemp35 [k43 lr131:132 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l38:s132:k120:d1:s0)		if iTemp35 [k43 lr131:132 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _forbreak_8($9)

----------------------------------------------------------------
Basic Block _eBBlock40 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 36 : bbnum = 35 1st iCode = 133 , last iCode = 137
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (125) (126) }

local defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (125) (126) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (117) (119) (125) (126) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (126) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (117) (125) (126) }

----------------------------------------------------------------
led.c(l38:s133:k328:d1:s0)		send iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}{argreg = 1}
led.c(l38:s134:k329:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l38:s135:k330:d1:s0)		iTemp37 [k45 lr135:136 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float fixed} = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l38:s136:k126:d1:s0)		iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8} := iTemp37 [k45 lr135:136 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float fixed}
led.c(l38:s137:k127:d1:s0)		 goto _forcond_8($42)

----------------------------------------------------------------
Basic Block _forbreak_8 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 37 : bbnum = 36 1st iCode = 138 , last iCode = 141
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (131) }

local defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (130) (131) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (117) (119) (125) (126) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (131) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (130) }

----------------------------------------------------------------
led.c(l38:s138:k128:d0:s0)	 _forbreak_8($9) :
led.c(l39:s139:k129:d0:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
led.c(l39:s140:k130:d0:s0)		iTemp38 [k46 lr140:140 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l40:s141:k131:d0:s0)		iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8} := 0 {float literal}

----------------------------------------------------------------
Basic Block preHeaderLbl41 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 38 : bbnum = 37 1st iCode = 142 , last iCode = 142
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { }

local defines bitVector :
pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (131) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (131) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { }

----------------------------------------------------------------
led.c(l40:s142:k270:d0:s0)	 preHeaderLbl41($150) :

----------------------------------------------------------------
Basic Block _forcond_9 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 39 : bbnum = 38 1st iCode = 143 , last iCode = 147
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (133) }

local defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (133) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (131) (133) (139) (140) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (131) (133) (139) (140) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (131) (133) (140) }

----------------------------------------------------------------
led.c(l40:s143:k132:d1:s0)	 _forcond_9($45) :
led.c(l40:s144:k331:d1:s0)		send iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}{argreg = 1}
led.c(l40:s145:k332:d1:s0)		send iTemp0 [k2 lr3:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}{argreg = 2}
led.c(l40:s146:k333:d1:s0)		iTemp39 [k47 lr146:147 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l40:s147:k134:d1:s0)		if iTemp39 [k47 lr146:147 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _forbreak_9($10)

----------------------------------------------------------------
Basic Block _eBBlock41 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 40 : bbnum = 39 1st iCode = 148 , last iCode = 152
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (139) (140) }

local defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (139) (140) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (131) (133) (139) (140) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (133) (139) (140) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (131) (139) (140) }

----------------------------------------------------------------
led.c(l40:s148:k334:d1:s0)		send iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}{argreg = 1}
led.c(l40:s149:k335:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l40:s150:k336:d1:s0)		iTemp41 [k49 lr150:151 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float fixed} = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l40:s151:k140:d1:s0)		iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8} := iTemp41 [k49 lr150:151 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float fixed}
led.c(l40:s152:k141:d1:s0)		 goto _forcond_9($45)

----------------------------------------------------------------
Basic Block _forbreak_9 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 41 : bbnum = 40 1st iCode = 153 , last iCode = 156
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (145) }

local defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (144) (145) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (131) (133) (139) (140) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (133) (139) (144) (145) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (144) }

----------------------------------------------------------------
led.c(l40:s153:k142:d0:s0)	 _forbreak_9($10) :
led.c(l41:s154:k143:d0:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
led.c(l41:s155:k144:d0:s0)		iTemp42 [k50 lr155:155 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l42:s156:k145:d0:s0)		iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8} := 0 {float literal}

----------------------------------------------------------------
Basic Block preHeaderLbl42 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 42 : bbnum = 41 1st iCode = 157 , last iCode = 157
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { }

local defines bitVector :
pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (133) (139) (144) (145) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (133) (139) (144) (145) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { }

----------------------------------------------------------------
led.c(l42:s157:k271:d0:s0)	 preHeaderLbl42($152) :

----------------------------------------------------------------
Basic Block _forcond_10 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 43 : bbnum = 42 1st iCode = 158 , last iCode = 162
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (147) }

local defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (147) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (133) (139) (144) (145) (147) (153) (154) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (133) (139) (144) (145) (147) (153) (154) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (145) (147) (154) }

----------------------------------------------------------------
led.c(l42:s158:k146:d1:s0)	 _forcond_10($48) :
led.c(l42:s159:k337:d1:s0)		send iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}{argreg = 1}
led.c(l42:s160:k338:d1:s0)		send iTemp0 [k2 lr3:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}{argreg = 2}
led.c(l42:s161:k339:d1:s0)		iTemp43 [k51 lr161:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l42:s162:k148:d1:s0)		if iTemp43 [k51 lr161:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _forbreak_10($11)

----------------------------------------------------------------
Basic Block _eBBlock42 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 44 : bbnum = 43 1st iCode = 163 , last iCode = 167
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (153) (154) }

local defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (153) (154) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (133) (139) (144) (145) (147) (153) (154) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (133) (139) (144) (147) (153) (154) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (145) (153) (154) }

----------------------------------------------------------------
led.c(l42:s163:k340:d1:s0)		send iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}{argreg = 1}
led.c(l42:s164:k341:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l42:s165:k342:d1:s0)		iTemp45 [k53 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float fixed} = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l42:s166:k154:d1:s0)		iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8} := iTemp45 [k53 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float fixed}
led.c(l42:s167:k155:d1:s0)		 goto _forcond_10($48)

----------------------------------------------------------------
Basic Block _forbreak_10 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 45 : bbnum = 44 1st iCode = 168 , last iCode = 171
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (159) }

local defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (158) (159) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (133) (139) (144) (145) (147) (153) (154) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (133) (139) (144) (147) (153) (158) (159) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (158) }

----------------------------------------------------------------
led.c(l42:s168:k156:d0:s0)	 _forbreak_10($11) :
led.c(l43:s169:k157:d0:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
led.c(l43:s170:k158:d0:s0)		iTemp46 [k54 lr170:170 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l44:s171:k159:d0:s0)		iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8} := 0 {float literal}

----------------------------------------------------------------
Basic Block preHeaderLbl43 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 46 : bbnum = 45 1st iCode = 172 , last iCode = 172
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { }

local defines bitVector :
pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (133) (139) (144) (147) (153) (158) (159) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (133) (139) (144) (147) (153) (158) (159) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { }

----------------------------------------------------------------
led.c(l44:s172:k272:d0:s0)	 preHeaderLbl43($154) :

----------------------------------------------------------------
Basic Block _forcond_11 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 47 : bbnum = 46 1st iCode = 173 , last iCode = 177
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (161) }

local defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (161) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (133) (139) (144) (147) (153) (158) (159) (161) (167) (168) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (133) (139) (144) (147) (153) (158) (159) (161) (167) (168) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (159) (161) (168) }

----------------------------------------------------------------
led.c(l44:s173:k160:d1:s0)	 _forcond_11($51) :
led.c(l44:s174:k343:d1:s0)		send iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}{argreg = 1}
led.c(l44:s175:k344:d1:s0)		send iTemp0 [k2 lr3:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}{argreg = 2}
led.c(l44:s176:k345:d1:s0)		iTemp47 [k55 lr176:177 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l44:s177:k162:d1:s0)		if iTemp47 [k55 lr176:177 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _forbreak_11($12)

----------------------------------------------------------------
Basic Block _eBBlock43 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 48 : bbnum = 47 1st iCode = 178 , last iCode = 182
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (167) (168) }

local defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (167) (168) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (133) (139) (144) (147) (153) (158) (159) (161) (167) (168) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (133) (139) (144) (147) (153) (158) (161) (167) (168) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (159) (167) (168) }

----------------------------------------------------------------
led.c(l44:s178:k346:d1:s0)		send iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}{argreg = 1}
led.c(l44:s179:k347:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l44:s180:k348:d1:s0)		iTemp49 [k57 lr180:181 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float fixed} = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l44:s181:k168:d1:s0)		iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8} := iTemp49 [k57 lr180:181 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float fixed}
led.c(l44:s182:k169:d1:s0)		 goto _forcond_11($51)

----------------------------------------------------------------
Basic Block _forbreak_11 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 49 : bbnum = 48 1st iCode = 183 , last iCode = 186
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (173) }

local defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (172) (173) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (133) (139) (144) (147) (153) (158) (159) (161) (167) (168) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (133) (139) (144) (147) (153) (158) (161) (167) (172) (173) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (172) }

----------------------------------------------------------------
led.c(l44:s183:k170:d0:s0)	 _forbreak_11($12) :
led.c(l45:s184:k171:d0:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
led.c(l45:s185:k172:d0:s0)		iTemp50 [k58 lr185:185 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l46:s186:k173:d0:s0)		iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8} := 0 {float literal}

----------------------------------------------------------------
Basic Block preHeaderLbl44 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 50 : bbnum = 49 1st iCode = 187 , last iCode = 187
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { }

local defines bitVector :
pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (133) (139) (144) (147) (153) (158) (161) (167) (172) (173) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (133) (139) (144) (147) (153) (158) (161) (167) (172) (173) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { }

----------------------------------------------------------------
led.c(l46:s187:k273:d0:s0)	 preHeaderLbl44($156) :

----------------------------------------------------------------
Basic Block _forcond_12 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 51 : bbnum = 50 1st iCode = 188 , last iCode = 192
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (175) }

local defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (175) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (133) (139) (144) (147) (153) (158) (161) (167) (172) (173) (175) (181) (182) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (133) (139) (144) (147) (153) (158) (161) (167) (172) (173) (175) (181) (182) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (173) (175) (182) }

----------------------------------------------------------------
led.c(l46:s188:k174:d1:s0)	 _forcond_12($54) :
led.c(l46:s189:k349:d1:s0)		send iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}{argreg = 1}
led.c(l46:s190:k350:d1:s0)		send iTemp0 [k2 lr3:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}{argreg = 2}
led.c(l46:s191:k351:d1:s0)		iTemp51 [k59 lr191:192 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l46:s192:k176:d1:s0)		if iTemp51 [k59 lr191:192 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _forbreak_12($13)

----------------------------------------------------------------
Basic Block _eBBlock44 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 52 : bbnum = 51 1st iCode = 193 , last iCode = 197
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (181) (182) }

local defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (181) (182) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (133) (139) (144) (147) (153) (158) (161) (167) (172) (173) (175) (181) (182) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (133) (139) (144) (147) (153) (158) (161) (167) (172) (175) (181) (182) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (173) (181) (182) }

----------------------------------------------------------------
led.c(l46:s193:k352:d1:s0)		send iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}{argreg = 1}
led.c(l46:s194:k353:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l46:s195:k354:d1:s0)		iTemp53 [k61 lr195:196 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float fixed} = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l46:s196:k182:d1:s0)		iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8} := iTemp53 [k61 lr195:196 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float fixed}
led.c(l46:s197:k183:d1:s0)		 goto _forcond_12($54)

----------------------------------------------------------------
Basic Block _forbreak_12 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 53 : bbnum = 52 1st iCode = 198 , last iCode = 201
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (187) }

local defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (186) (187) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (133) (139) (144) (147) (153) (158) (161) (167) (172) (173) (175) (181) (182) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (133) (139) (144) (147) (153) (158) (161) (167) (172) (175) (181) (186) (187) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (186) }

----------------------------------------------------------------
led.c(l46:s198:k184:d0:s0)	 _forbreak_12($13) :
led.c(l47:s199:k185:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l47:s200:k186:d0:s0)		iTemp54 [k62 lr200:200 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l48:s201:k187:d0:s0)		iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8} := 0 {float literal}

----------------------------------------------------------------
Basic Block preHeaderLbl45 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 54 : bbnum = 53 1st iCode = 202 , last iCode = 202
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { }

local defines bitVector :
pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (133) (139) (144) (147) (153) (158) (161) (167) (172) (175) (181) (186) (187) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (133) (139) (144) (147) (153) (158) (161) (167) (172) (175) (181) (186) (187) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { }

----------------------------------------------------------------
led.c(l48:s202:k274:d0:s0)	 preHeaderLbl45($158) :

----------------------------------------------------------------
Basic Block _forcond_13 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 55 : bbnum = 54 1st iCode = 203 , last iCode = 207
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (189) }

local defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (189) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (133) (139) (144) (147) (153) (158) (161) (167) (172) (175) (181) (186) (187) (189) (195) (196) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (133) (139) (144) (147) (153) (158) (161) (167) (172) (175) (181) (186) (187) (189) (195) (196) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (187) (189) (196) }

----------------------------------------------------------------
led.c(l48:s203:k188:d1:s0)	 _forcond_13($57) :
led.c(l48:s204:k355:d1:s0)		send iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}{argreg = 1}
led.c(l48:s205:k356:d1:s0)		send iTemp0 [k2 lr3:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}{argreg = 2}
led.c(l48:s206:k357:d1:s0)		iTemp55 [k63 lr206:207 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l48:s207:k190:d1:s0)		if iTemp55 [k63 lr206:207 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _forbreak_13($14)

----------------------------------------------------------------
Basic Block _eBBlock45 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 56 : bbnum = 55 1st iCode = 208 , last iCode = 212
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (195) (196) }

local defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (195) (196) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (133) (139) (144) (147) (153) (158) (161) (167) (172) (175) (181) (186) (187) (189) (195) (196) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (133) (139) (144) (147) (153) (158) (161) (167) (172) (175) (181) (186) (189) (195) (196) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (187) (195) (196) }

----------------------------------------------------------------
led.c(l48:s208:k358:d1:s0)		send iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}{argreg = 1}
led.c(l48:s209:k359:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l48:s210:k360:d1:s0)		iTemp57 [k65 lr210:211 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float fixed} = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l48:s211:k196:d1:s0)		iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8} := iTemp57 [k65 lr210:211 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float fixed}
led.c(l48:s212:k197:d1:s0)		 goto _forcond_13($57)

----------------------------------------------------------------
Basic Block _forbreak_13 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 57 : bbnum = 56 1st iCode = 213 , last iCode = 216
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (201) }

local defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (200) (201) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (133) (139) (144) (147) (153) (158) (161) (167) (172) (175) (181) (186) (187) (189) (195) (196) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (133) (139) (144) (147) (153) (158) (161) (167) (172) (175) (181) (186) (189) (195) (200) (201) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (200) }

----------------------------------------------------------------
led.c(l48:s213:k198:d0:s0)	 _forbreak_13($14) :
led.c(l49:s214:k199:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l49:s215:k200:d0:s0)		iTemp58 [k66 lr215:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l50:s216:k201:d0:s0)		iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8} := 0 {float literal}

----------------------------------------------------------------
Basic Block preHeaderLbl46 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 58 : bbnum = 57 1st iCode = 217 , last iCode = 217
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { }

local defines bitVector :
pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (133) (139) (144) (147) (153) (158) (161) (167) (172) (175) (181) (186) (189) (195) (200) (201) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (133) (139) (144) (147) (153) (158) (161) (167) (172) (175) (181) (186) (189) (195) (200) (201) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { }

----------------------------------------------------------------
led.c(l50:s217:k275:d0:s0)	 preHeaderLbl46($160) :

----------------------------------------------------------------
Basic Block _forcond_14 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 59 : bbnum = 58 1st iCode = 218 , last iCode = 222
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (203) }

local defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (203) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (133) (139) (144) (147) (153) (158) (161) (167) (172) (175) (181) (186) (189) (195) (200) (201) (203) (209) (210) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (133) (139) (144) (147) (153) (158) (161) (167) (172) (175) (181) (186) (189) (195) (200) (201) (203) (209) (210) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (201) (203) (210) }

----------------------------------------------------------------
led.c(l50:s218:k202:d1:s0)	 _forcond_14($60) :
led.c(l50:s219:k361:d1:s0)		send iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}{argreg = 1}
led.c(l50:s220:k362:d1:s0)		send iTemp0 [k2 lr3:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}{argreg = 2}
led.c(l50:s221:k363:d1:s0)		iTemp59 [k67 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l50:s222:k204:d1:s0)		if iTemp59 [k67 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _forbreak_14($15)

----------------------------------------------------------------
Basic Block _eBBlock46 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 60 : bbnum = 59 1st iCode = 223 , last iCode = 227
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (209) (210) }

local defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (209) (210) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (133) (139) (144) (147) (153) (158) (161) (167) (172) (175) (181) (186) (189) (195) (200) (201) (203) (209) (210) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (133) (139) (144) (147) (153) (158) (161) (167) (172) (175) (181) (186) (189) (195) (200) (203) (209) (210) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (201) (209) (210) }

----------------------------------------------------------------
led.c(l50:s223:k364:d1:s0)		send iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}{argreg = 1}
led.c(l50:s224:k365:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l50:s225:k366:d1:s0)		iTemp61 [k69 lr225:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float fixed} = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l50:s226:k210:d1:s0)		iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8} := iTemp61 [k69 lr225:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float fixed}
led.c(l50:s227:k211:d1:s0)		 goto _forcond_14($60)

----------------------------------------------------------------
Basic Block _forbreak_14 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 61 : bbnum = 60 1st iCode = 228 , last iCode = 231
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (215) }

local defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (214) (215) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (133) (139) (144) (147) (153) (158) (161) (167) (172) (175) (181) (186) (189) (195) (200) (201) (203) (209) (210) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (133) (139) (144) (147) (153) (158) (161) (167) (172) (175) (181) (186) (189) (195) (200) (203) (209) (214) (215) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (214) }

----------------------------------------------------------------
led.c(l50:s228:k212:d0:s0)	 _forbreak_14($15) :
led.c(l51:s229:k213:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l51:s230:k214:d0:s0)		iTemp62 [k70 lr230:230 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l52:s231:k215:d0:s0)		iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8} := 0 {float literal}

----------------------------------------------------------------
Basic Block preHeaderLbl47 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 62 : bbnum = 61 1st iCode = 232 , last iCode = 232
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { }

local defines bitVector :
pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (133) (139) (144) (147) (153) (158) (161) (167) (172) (175) (181) (186) (189) (195) (200) (203) (209) (214) (215) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (133) (139) (144) (147) (153) (158) (161) (167) (172) (175) (181) (186) (189) (195) (200) (203) (209) (214) (215) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { }

----------------------------------------------------------------
led.c(l52:s232:k276:d0:s0)	 preHeaderLbl47($162) :

----------------------------------------------------------------
Basic Block _forcond_15 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 63 : bbnum = 62 1st iCode = 233 , last iCode = 237
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (217) }

local defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (217) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (133) (139) (144) (147) (153) (158) (161) (167) (172) (175) (181) (186) (189) (195) (200) (203) (209) (214) (215) (217) (223) (224) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (133) (139) (144) (147) (153) (158) (161) (167) (172) (175) (181) (186) (189) (195) (200) (203) (209) (214) (215) (217) (223) (224) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (215) (217) (224) }

----------------------------------------------------------------
led.c(l52:s233:k216:d1:s0)	 _forcond_15($63) :
led.c(l52:s234:k367:d1:s0)		send iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}{argreg = 1}
led.c(l52:s235:k368:d1:s0)		send iTemp0 [k2 lr3:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}{argreg = 2}
led.c(l52:s236:k369:d1:s0)		iTemp63 [k71 lr236:237 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l52:s237:k218:d1:s0)		if iTemp63 [k71 lr236:237 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _return($65)

----------------------------------------------------------------
Basic Block _eBBlock47 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 64 : bbnum = 63 1st iCode = 238 , last iCode = 242
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (223) (224) }

local defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (223) (224) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (133) (139) (144) (147) (153) (158) (161) (167) (172) (175) (181) (186) (189) (195) (200) (203) (209) (214) (215) (217) (223) (224) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (133) (139) (144) (147) (153) (158) (161) (167) (172) (175) (181) (186) (189) (195) (200) (203) (209) (214) (217) (223) (224) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (215) (223) (224) }

----------------------------------------------------------------
led.c(l52:s238:k370:d1:s0)		send iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}{argreg = 1}
led.c(l52:s239:k371:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l52:s240:k372:d1:s0)		iTemp65 [k73 lr240:241 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float fixed} = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l52:s241:k224:d1:s0)		iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8} := iTemp65 [k73 lr240:241 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float fixed}
led.c(l52:s242:k225:d1:s0)		 goto _forcond_15($63)

----------------------------------------------------------------
Basic Block _return : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 65 : bbnum = 64 1st iCode = 243 , last iCode = 244
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { }

local defines bitVector :
pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (133) (139) (144) (147) (153) (158) (161) (167) (172) (175) (181) (186) (189) (195) (200) (203) (209) (214) (215) (217) (223) (224) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (133) (139) (144) (147) (153) (158) (161) (167) (172) (175) (181) (186) (189) (195) (200) (203) (209) (214) (215) (217) (223) (224) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { }

----------------------------------------------------------------
led.c(l52:s243:k227:d0:s0)	 _return($65) :
led.c(l52:s244:k228:d0:s0)		eproc _sequencial [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}
pic16_freeAllRegs
pic16_packRegisters
3007	packRegsForAssign
ic->op = =
  result:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
  left:
  right:0 {float literal}
 3015 - actuall processing
  3027 - not packing - right is not temp
pic16_allocDirReg BAD, op is NULL
  result:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
  left:
  right:0 {float literal}
 4213
x  left:_sequencial [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}
    c   Symbol type: void function ( float fixed) fixed
 4213
x  left:_sequencial [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}
    c   Symbol type: void function ( float fixed) fixed
  result:iTemp0 [k2 lr3:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}
          Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
packForReceive
  result:iTemp0 [k2 lr3:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}
  left:_sequencial [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}
  right:
  hey we can remove this unnecessary assign
  4191 - pointer reg req = 0
 4213
x  left:_ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
    c   Symbol type: void function ( char fixed) fixed
  result:iTemp1 [k6 lr5:5 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed}
          Symbol type: void fixed
  4191 - pointer reg req = 0
 4213
  result:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
          Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
 4213
pic16_packRegisters
 4213
x  left:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
    c   Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp0 [k2 lr3:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}
    c   Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
x  left:___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
    c   Symbol type: char function ( float fixed, float fixed) fixed
  result:iTemp3 [k9 lr11:12 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
          Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp3 [k9 lr11:12 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
    c   Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
3007	packRegsForAssign
ic->op = =
  result:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
  left:
  right:iTemp5 [k11 lr15:16 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float fixed}
 3015 - actuall processing
3072	Searching for iTempNN
  3097 - dic result key == ic right key -- pointer set=N
  packing. removing iTemp5
  replacing with iTemp5
  3199
  result:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
  left:
  right:iTemp5 [k11 lr15:16 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float fixed}
x  left:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
    c   Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
  4191 - pointer reg req = 0
 4213
x  left:___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
    c   Symbol type: float function ( float fixed, float fixed) fixed
  result:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
          Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
 4213
pic16_packRegisters
3007	packRegsForAssign
ic->op = =
  result:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
  left:
  right:0 {float literal}
 3015 - actuall processing
  3027 - not packing - right is not temp
pic16_allocDirReg BAD, op is NULL
  result:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
  left:
  right:0 {float literal}
 4213
  4191 - pointer reg req = 0
 4213
x  left:_ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
    c   Symbol type: void function ( char fixed) fixed
  result:iTemp6 [k12 lr20:20 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed}
          Symbol type: void fixed
  4191 - pointer reg req = 0
 4213
  result:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
          Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
 4213
pic16_packRegisters
 4213
x  left:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
    c   Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp0 [k2 lr3:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}
    c   Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
x  left:___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
    c   Symbol type: char function ( float fixed, float fixed) fixed
  result:iTemp7 [k13 lr26:27 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
          Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp7 [k13 lr26:27 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
    c   Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
3007	packRegsForAssign
ic->op = =
  result:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
  left:
  right:iTemp9 [k15 lr30:31 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float fixed}
 3015 - actuall processing
3072	Searching for iTempNN
  3097 - dic result key == ic right key -- pointer set=N
  packing. removing iTemp9
  replacing with iTemp9
  3199
  result:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
  left:
  right:iTemp9 [k15 lr30:31 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float fixed}
x  left:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
    c   Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
  4191 - pointer reg req = 0
 4213
x  left:___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
    c   Symbol type: float function ( float fixed, float fixed) fixed
  result:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
          Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
 4213
pic16_packRegisters
3007	packRegsForAssign
ic->op = =
  result:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
  left:
  right:0 {float literal}
 3015 - actuall processing
  3027 - not packing - right is not temp
pic16_allocDirReg BAD, op is NULL
  result:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
  left:
  right:0 {float literal}
 4213
  4191 - pointer reg req = 0
 4213
x  left:_ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
    c   Symbol type: void function ( char fixed) fixed
  result:iTemp10 [k16 lr35:35 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed}
          Symbol type: void fixed
  4191 - pointer reg req = 0
 4213
  result:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
          Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
 4213
pic16_packRegisters
 4213
x  left:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
    c   Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp0 [k2 lr3:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}
    c   Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
x  left:___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
    c   Symbol type: char function ( float fixed, float fixed) fixed
  result:iTemp11 [k17 lr41:42 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
          Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp11 [k17 lr41:42 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
    c   Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
3007	packRegsForAssign
ic->op = =
  result:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
  left:
  right:iTemp13 [k19 lr45:46 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float fixed}
 3015 - actuall processing
3072	Searching for iTempNN
  3097 - dic result key == ic right key -- pointer set=N
  packing. removing iTemp13
  replacing with iTemp13
  3199
  result:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
  left:
  right:iTemp13 [k19 lr45:46 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float fixed}
x  left:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
    c   Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
  4191 - pointer reg req = 0
 4213
x  left:___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
    c   Symbol type: float function ( float fixed, float fixed) fixed
  result:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
          Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
 4213
pic16_packRegisters
3007	packRegsForAssign
ic->op = =
  result:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
  left:
  right:0 {float literal}
 3015 - actuall processing
  3027 - not packing - right is not temp
pic16_allocDirReg BAD, op is NULL
  result:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
  left:
  right:0 {float literal}
 4213
  4191 - pointer reg req = 0
 4213
x  left:_ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
    c   Symbol type: void function ( char fixed) fixed
  result:iTemp14 [k20 lr50:50 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed}
          Symbol type: void fixed
  4191 - pointer reg req = 0
 4213
  result:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
          Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
 4213
pic16_packRegisters
 4213
x  left:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
    c   Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp0 [k2 lr3:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}
    c   Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
x  left:___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
    c   Symbol type: char function ( float fixed, float fixed) fixed
  result:iTemp15 [k21 lr56:57 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
          Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp15 [k21 lr56:57 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
    c   Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
3007	packRegsForAssign
ic->op = =
  result:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
  left:
  right:iTemp17 [k23 lr60:61 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float fixed}
 3015 - actuall processing
3072	Searching for iTempNN
  3097 - dic result key == ic right key -- pointer set=N
  packing. removing iTemp17
  replacing with iTemp17
  3199
  result:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
  left:
  right:iTemp17 [k23 lr60:61 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float fixed}
x  left:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
    c   Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
  4191 - pointer reg req = 0
 4213
x  left:___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
    c   Symbol type: float function ( float fixed, float fixed) fixed
  result:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
          Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
 4213
pic16_packRegisters
3007	packRegsForAssign
ic->op = =
  result:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
  left:
  right:0 {float literal}
 3015 - actuall processing
  3027 - not packing - right is not temp
pic16_allocDirReg BAD, op is NULL
  result:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
  left:
  right:0 {float literal}
 4213
  4191 - pointer reg req = 0
 4213
x  left:_ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
    c   Symbol type: void function ( char fixed) fixed
  result:iTemp18 [k24 lr65:65 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed}
          Symbol type: void fixed
  4191 - pointer reg req = 0
 4213
  result:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
          Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
 4213
pic16_packRegisters
 4213
x  left:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
    c   Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp0 [k2 lr3:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}
    c   Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
x  left:___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
    c   Symbol type: char function ( float fixed, float fixed) fixed
  result:iTemp19 [k25 lr71:72 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
          Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp19 [k25 lr71:72 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
    c   Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
3007	packRegsForAssign
ic->op = =
  result:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
  left:
  right:iTemp21 [k27 lr75:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float fixed}
 3015 - actuall processing
3072	Searching for iTempNN
  3097 - dic result key == ic right key -- pointer set=N
  packing. removing iTemp21
  replacing with iTemp21
  3199
  result:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
  left:
  right:iTemp21 [k27 lr75:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float fixed}
x  left:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
    c   Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
  4191 - pointer reg req = 0
 4213
x  left:___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
    c   Symbol type: float function ( float fixed, float fixed) fixed
  result:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
          Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
 4213
pic16_packRegisters
3007	packRegsForAssign
ic->op = =
  result:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
  left:
  right:0 {float literal}
 3015 - actuall processing
  3027 - not packing - right is not temp
pic16_allocDirReg BAD, op is NULL
  result:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
  left:
  right:0 {float literal}
 4213
  4191 - pointer reg req = 0
 4213
x  left:_ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
    c   Symbol type: void function ( char fixed) fixed
  result:iTemp22 [k28 lr80:80 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed}
          Symbol type: void fixed
  4191 - pointer reg req = 0
 4213
  result:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
          Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
 4213
pic16_packRegisters
 4213
x  left:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
    c   Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp0 [k2 lr3:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}
    c   Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
x  left:___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
    c   Symbol type: char function ( float fixed, float fixed) fixed
  result:iTemp23 [k29 lr86:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
          Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp23 [k29 lr86:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
    c   Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
3007	packRegsForAssign
ic->op = =
  result:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
  left:
  right:iTemp25 [k31 lr90:91 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float fixed}
 3015 - actuall processing
3072	Searching for iTempNN
  3097 - dic result key == ic right key -- pointer set=N
  packing. removing iTemp25
  replacing with iTemp25
  3199
  result:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
  left:
  right:iTemp25 [k31 lr90:91 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float fixed}
x  left:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
    c   Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
  4191 - pointer reg req = 0
 4213
x  left:___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
    c   Symbol type: float function ( float fixed, float fixed) fixed
  result:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
          Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
 4213
pic16_packRegisters
3007	packRegsForAssign
ic->op = =
  result:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
  left:
  right:0 {float literal}
 3015 - actuall processing
  3027 - not packing - right is not temp
pic16_allocDirReg BAD, op is NULL
  result:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
  left:
  right:0 {float literal}
 4213
  4191 - pointer reg req = 0
 4213
x  left:_ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
    c   Symbol type: void function ( char fixed) fixed
  result:iTemp26 [k32 lr95:95 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed}
          Symbol type: void fixed
  4191 - pointer reg req = 0
 4213
  result:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
          Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
 4213
pic16_packRegisters
 4213
x  left:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
    c   Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp0 [k2 lr3:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}
    c   Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
x  left:___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
    c   Symbol type: char function ( float fixed, float fixed) fixed
  result:iTemp27 [k33 lr101:102 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
          Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp27 [k33 lr101:102 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
    c   Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
3007	packRegsForAssign
ic->op = =
  result:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
  left:
  right:iTemp29 [k35 lr105:106 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float fixed}
 3015 - actuall processing
3072	Searching for iTempNN
  3097 - dic result key == ic right key -- pointer set=N
  packing. removing iTemp29
  replacing with iTemp29
  3199
  result:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
  left:
  right:iTemp29 [k35 lr105:106 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float fixed}
x  left:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
    c   Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
  4191 - pointer reg req = 0
 4213
x  left:___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
    c   Symbol type: float function ( float fixed, float fixed) fixed
  result:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
          Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
 4213
pic16_packRegisters
3007	packRegsForAssign
ic->op = =
  result:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
  left:
  right:0 {float literal}
 3015 - actuall processing
  3027 - not packing - right is not temp
pic16_allocDirReg BAD, op is NULL
  result:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
  left:
  right:0 {float literal}
 4213
  4191 - pointer reg req = 0
 4213
x  left:_ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
    c   Symbol type: void function ( char fixed) fixed
  result:iTemp30 [k36 lr110:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed}
          Symbol type: void fixed
  4191 - pointer reg req = 0
 4213
  result:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
          Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
 4213
pic16_packRegisters
 4213
x  left:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
    c   Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp0 [k2 lr3:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}
    c   Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
x  left:___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
    c   Symbol type: char function ( float fixed, float fixed) fixed
  result:iTemp31 [k37 lr116:117 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
          Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp31 [k37 lr116:117 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
    c   Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
3007	packRegsForAssign
ic->op = =
  result:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
  left:
  right:iTemp33 [k39 lr120:121 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float fixed}
 3015 - actuall processing
3072	Searching for iTempNN
  3097 - dic result key == ic right key -- pointer set=N
  packing. removing iTemp33
  replacing with iTemp33
  3199
  result:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
  left:
  right:iTemp33 [k39 lr120:121 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float fixed}
x  left:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
    c   Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
  4191 - pointer reg req = 0
 4213
x  left:___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
    c   Symbol type: float function ( float fixed, float fixed) fixed
  result:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
          Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
 4213
pic16_packRegisters
3007	packRegsForAssign
ic->op = =
  result:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
  left:
  right:0 {float literal}
 3015 - actuall processing
  3027 - not packing - right is not temp
pic16_allocDirReg BAD, op is NULL
  result:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
  left:
  right:0 {float literal}
 4213
  4191 - pointer reg req = 0
 4213
x  left:_desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
    c   Symbol type: void function ( char fixed) fixed
  result:iTemp34 [k42 lr125:125 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed}
          Symbol type: void fixed
  4191 - pointer reg req = 0
 4213
  result:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
          Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
 4213
pic16_packRegisters
 4213
x  left:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
    c   Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp0 [k2 lr3:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}
    c   Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
x  left:___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
    c   Symbol type: char function ( float fixed, float fixed) fixed
  result:iTemp35 [k43 lr131:132 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
          Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp35 [k43 lr131:132 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
    c   Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
3007	packRegsForAssign
ic->op = =
  result:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
  left:
  right:iTemp37 [k45 lr135:136 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float fixed}
 3015 - actuall processing
3072	Searching for iTempNN
  3097 - dic result key == ic right key -- pointer set=N
  packing. removing iTemp37
  replacing with iTemp37
  3199
  result:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
  left:
  right:iTemp37 [k45 lr135:136 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float fixed}
x  left:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
    c   Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
  4191 - pointer reg req = 0
 4213
x  left:___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
    c   Symbol type: float function ( float fixed, float fixed) fixed
  result:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
          Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
 4213
pic16_packRegisters
3007	packRegsForAssign
ic->op = =
  result:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
  left:
  right:0 {float literal}
 3015 - actuall processing
  3027 - not packing - right is not temp
pic16_allocDirReg BAD, op is NULL
  result:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
  left:
  right:0 {float literal}
 4213
  4191 - pointer reg req = 0
 4213
x  left:_desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
    c   Symbol type: void function ( char fixed) fixed
  result:iTemp38 [k46 lr140:140 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed}
          Symbol type: void fixed
  4191 - pointer reg req = 0
 4213
  result:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
          Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
 4213
pic16_packRegisters
 4213
x  left:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
    c   Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp0 [k2 lr3:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}
    c   Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
x  left:___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
    c   Symbol type: char function ( float fixed, float fixed) fixed
  result:iTemp39 [k47 lr146:147 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
          Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp39 [k47 lr146:147 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
    c   Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
3007	packRegsForAssign
ic->op = =
  result:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
  left:
  right:iTemp41 [k49 lr150:151 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float fixed}
 3015 - actuall processing
3072	Searching for iTempNN
  3097 - dic result key == ic right key -- pointer set=N
  packing. removing iTemp41
  replacing with iTemp41
  3199
  result:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
  left:
  right:iTemp41 [k49 lr150:151 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float fixed}
x  left:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
    c   Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
  4191 - pointer reg req = 0
 4213
x  left:___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
    c   Symbol type: float function ( float fixed, float fixed) fixed
  result:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
          Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
 4213
pic16_packRegisters
3007	packRegsForAssign
ic->op = =
  result:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
  left:
  right:0 {float literal}
 3015 - actuall processing
  3027 - not packing - right is not temp
pic16_allocDirReg BAD, op is NULL
  result:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
  left:
  right:0 {float literal}
 4213
  4191 - pointer reg req = 0
 4213
x  left:_desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
    c   Symbol type: void function ( char fixed) fixed
  result:iTemp42 [k50 lr155:155 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed}
          Symbol type: void fixed
  4191 - pointer reg req = 0
 4213
  result:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
          Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
 4213
pic16_packRegisters
 4213
x  left:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
    c   Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp0 [k2 lr3:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}
    c   Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
x  left:___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
    c   Symbol type: char function ( float fixed, float fixed) fixed
  result:iTemp43 [k51 lr161:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
          Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp43 [k51 lr161:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
    c   Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
3007	packRegsForAssign
ic->op = =
  result:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
  left:
  right:iTemp45 [k53 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float fixed}
 3015 - actuall processing
3072	Searching for iTempNN
  3097 - dic result key == ic right key -- pointer set=N
  packing. removing iTemp45
  replacing with iTemp45
  3199
  result:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
  left:
  right:iTemp45 [k53 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float fixed}
x  left:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
    c   Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
  4191 - pointer reg req = 0
 4213
x  left:___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
    c   Symbol type: float function ( float fixed, float fixed) fixed
  result:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
          Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
 4213
pic16_packRegisters
3007	packRegsForAssign
ic->op = =
  result:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
  left:
  right:0 {float literal}
 3015 - actuall processing
  3027 - not packing - right is not temp
pic16_allocDirReg BAD, op is NULL
  result:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
  left:
  right:0 {float literal}
 4213
  4191 - pointer reg req = 0
 4213
x  left:_desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
    c   Symbol type: void function ( char fixed) fixed
  result:iTemp46 [k54 lr170:170 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed}
          Symbol type: void fixed
  4191 - pointer reg req = 0
 4213
  result:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
          Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
 4213
pic16_packRegisters
 4213
x  left:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
    c   Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp0 [k2 lr3:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}
    c   Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
x  left:___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
    c   Symbol type: char function ( float fixed, float fixed) fixed
  result:iTemp47 [k55 lr176:177 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
          Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp47 [k55 lr176:177 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
    c   Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
3007	packRegsForAssign
ic->op = =
  result:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
  left:
  right:iTemp49 [k57 lr180:181 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float fixed}
 3015 - actuall processing
3072	Searching for iTempNN
  3097 - dic result key == ic right key -- pointer set=N
  packing. removing iTemp49
  replacing with iTemp49
  3199
  result:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
  left:
  right:iTemp49 [k57 lr180:181 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float fixed}
x  left:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
    c   Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
  4191 - pointer reg req = 0
 4213
x  left:___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
    c   Symbol type: float function ( float fixed, float fixed) fixed
  result:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
          Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
 4213
pic16_packRegisters
3007	packRegsForAssign
ic->op = =
  result:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
  left:
  right:0 {float literal}
 3015 - actuall processing
  3027 - not packing - right is not temp
pic16_allocDirReg BAD, op is NULL
  result:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
  left:
  right:0 {float literal}
 4213
  4191 - pointer reg req = 0
 4213
x  left:_desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
    c   Symbol type: void function ( char fixed) fixed
  result:iTemp50 [k58 lr185:185 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed}
          Symbol type: void fixed
  4191 - pointer reg req = 0
 4213
  result:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
          Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
 4213
pic16_packRegisters
 4213
x  left:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
    c   Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp0 [k2 lr3:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}
    c   Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
x  left:___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
    c   Symbol type: char function ( float fixed, float fixed) fixed
  result:iTemp51 [k59 lr191:192 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
          Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp51 [k59 lr191:192 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
    c   Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
3007	packRegsForAssign
ic->op = =
  result:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
  left:
  right:iTemp53 [k61 lr195:196 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float fixed}
 3015 - actuall processing
3072	Searching for iTempNN
  3097 - dic result key == ic right key -- pointer set=N
  packing. removing iTemp53
  replacing with iTemp53
  3199
  result:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
  left:
  right:iTemp53 [k61 lr195:196 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float fixed}
x  left:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
    c   Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
  4191 - pointer reg req = 0
 4213
x  left:___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
    c   Symbol type: float function ( float fixed, float fixed) fixed
  result:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
          Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
 4213
pic16_packRegisters
3007	packRegsForAssign
ic->op = =
  result:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
  left:
  right:0 {float literal}
 3015 - actuall processing
  3027 - not packing - right is not temp
pic16_allocDirReg BAD, op is NULL
  result:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
  left:
  right:0 {float literal}
 4213
  4191 - pointer reg req = 0
 4213
x  left:_desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
    c   Symbol type: void function ( char fixed) fixed
  result:iTemp54 [k62 lr200:200 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed}
          Symbol type: void fixed
  4191 - pointer reg req = 0
 4213
  result:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
          Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
 4213
pic16_packRegisters
 4213
x  left:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
    c   Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp0 [k2 lr3:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}
    c   Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
x  left:___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
    c   Symbol type: char function ( float fixed, float fixed) fixed
  result:iTemp55 [k63 lr206:207 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
          Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp55 [k63 lr206:207 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
    c   Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
3007	packRegsForAssign
ic->op = =
  result:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
  left:
  right:iTemp57 [k65 lr210:211 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float fixed}
 3015 - actuall processing
3072	Searching for iTempNN
  3097 - dic result key == ic right key -- pointer set=N
  packing. removing iTemp57
  replacing with iTemp57
  3199
  result:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
  left:
  right:iTemp57 [k65 lr210:211 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float fixed}
x  left:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
    c   Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
  4191 - pointer reg req = 0
 4213
x  left:___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
    c   Symbol type: float function ( float fixed, float fixed) fixed
  result:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
          Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
 4213
pic16_packRegisters
3007	packRegsForAssign
ic->op = =
  result:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
  left:
  right:0 {float literal}
 3015 - actuall processing
  3027 - not packing - right is not temp
pic16_allocDirReg BAD, op is NULL
  result:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
  left:
  right:0 {float literal}
 4213
  4191 - pointer reg req = 0
 4213
x  left:_desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
    c   Symbol type: void function ( char fixed) fixed
  result:iTemp58 [k66 lr215:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed}
          Symbol type: void fixed
  4191 - pointer reg req = 0
 4213
  result:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
          Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
 4213
pic16_packRegisters
 4213
x  left:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
    c   Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp0 [k2 lr3:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}
    c   Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
x  left:___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
    c   Symbol type: char function ( float fixed, float fixed) fixed
  result:iTemp59 [k67 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
          Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp59 [k67 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
    c   Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
3007	packRegsForAssign
ic->op = =
  result:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
  left:
  right:iTemp61 [k69 lr225:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float fixed}
 3015 - actuall processing
3072	Searching for iTempNN
  3097 - dic result key == ic right key -- pointer set=N
  packing. removing iTemp61
  replacing with iTemp61
  3199
  result:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
  left:
  right:iTemp61 [k69 lr225:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float fixed}
x  left:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
    c   Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
  4191 - pointer reg req = 0
 4213
x  left:___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
    c   Symbol type: float function ( float fixed, float fixed) fixed
  result:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
          Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
 4213
pic16_packRegisters
3007	packRegsForAssign
ic->op = =
  result:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
  left:
  right:0 {float literal}
 3015 - actuall processing
  3027 - not packing - right is not temp
pic16_allocDirReg BAD, op is NULL
  result:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
  left:
  right:0 {float literal}
 4213
  4191 - pointer reg req = 0
 4213
x  left:_desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
    c   Symbol type: void function ( char fixed) fixed
  result:iTemp62 [k70 lr230:230 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed}
          Symbol type: void fixed
  4191 - pointer reg req = 0
 4213
  result:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
          Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
 4213
pic16_packRegisters
 4213
x  left:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
    c   Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp0 [k2 lr3:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}
    c   Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
x  left:___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
    c   Symbol type: char function ( float fixed, float fixed) fixed
  result:iTemp63 [k71 lr236:237 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
          Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp63 [k71 lr236:237 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
    c   Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
3007	packRegsForAssign
ic->op = =
  result:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
  left:
  right:iTemp65 [k73 lr240:241 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float fixed}
 3015 - actuall processing
3072	Searching for iTempNN
  3097 - dic result key == ic right key -- pointer set=N
  packing. removing iTemp65
  replacing with iTemp65
  3199
  result:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
  left:
  right:iTemp65 [k73 lr240:241 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float fixed}
x  left:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
    c   Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
  4191 - pointer reg req = 0
 4213
x  left:___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
    c   Symbol type: float function ( float fixed, float fixed) fixed
  result:iTemp2 [k7 lr6:242 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}
          Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
 4213
pic16_packRegisters
 4213
x  left:_sequencial [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}
    c   Symbol type: void function ( float fixed) fixed
 4213
regTypeNum
  2754 - iTemp0
  2765 - itemp register
  reg name iTemp0,  reg type REG_GPR
  2754 - iTemp1
  2754 - iTemp2
  2765 - itemp register
  reg name iTemp2,  reg type REG_GPR
  2754 - iTemp3
  2765 - itemp register
  reg name iTemp3,  reg type REG_GPR
  2754 - iTemp6
  2754 - iTemp7
  2765 - itemp register
  reg name iTemp7,  reg type REG_GPR
  2754 - iTemp10
  2754 - iTemp11
  2765 - itemp register
  reg name iTemp11,  reg type REG_GPR
  2754 - iTemp14
  2754 - iTemp15
  2765 - itemp register
  reg name iTemp15,  reg type REG_GPR
  2754 - iTemp18
  2754 - iTemp19
  2765 - itemp register
  reg name iTemp19,  reg type REG_GPR
  2754 - iTemp22
  2754 - iTemp23
  2765 - itemp register
  reg name iTemp23,  reg type REG_GPR
  2754 - iTemp26
  2754 - iTemp27
  2765 - itemp register
  reg name iTemp27,  reg type REG_GPR
  2754 - iTemp30
  2754 - iTemp31
  2765 - itemp register
  reg name iTemp31,  reg type REG_GPR
  2754 - iTemp34
  2754 - iTemp35
  2765 - itemp register
  reg name iTemp35,  reg type REG_GPR
  2754 - iTemp38
  2754 - iTemp39
  2765 - itemp register
  reg name iTemp39,  reg type REG_GPR
  2754 - iTemp42
  2754 - iTemp43
  2765 - itemp register
  reg name iTemp43,  reg type REG_GPR
  2754 - iTemp46
  2754 - iTemp47
  2765 - itemp register
  reg name iTemp47,  reg type REG_GPR
  2754 - iTemp50
  2754 - iTemp51
  2765 - itemp register
  reg name iTemp51,  reg type REG_GPR
  2754 - iTemp54
  2754 - iTemp55
  2765 - itemp register
  reg name iTemp55,  reg type REG_GPR
  2754 - iTemp58
  2754 - iTemp59
  2765 - itemp register
  reg name iTemp59,  reg type REG_GPR
  2754 - iTemp62
  2754 - iTemp63
  2765 - itemp register
  reg name iTemp63,  reg type REG_GPR
serialRegAssign
  op: LABEL
deassignLRs
  op: FUNCTION
pic16_allocDirReg:815 symbol name _sequencial
  827  storage class 0 
 838  specifier
_sequencial [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}
pic16_allocDirReg:861 sym: sequencial in codespace
deassignLRs
  op: RECEIVE
pic16_allocDirReg:815 symbol name _sequencial
  827  storage class 0 
 838  specifier
_sequencial [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}
pic16_allocDirReg:861 sym: sequencial in codespace
deassignLRs
willCauseSpill
computeSpillable
When I get clever, I'll optimize the receive logic
bitvector Size = 75 bSize = 10
Bits on { (2) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 2 (0x2)
getRegGpr
allocReg of type REG_GPR for register rIdx: 2 (0x2)
getRegGpr
allocReg of type REG_GPR for register rIdx: 2 (0x2)
getRegGpr
allocReg of type REG_GPR for register rIdx: 3 (0x3)
  2457 - 
  2471 - 
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name _ligaled
  827  storage class 0 
 838  specifier
_ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
pic16_allocDirReg:861 sym: ligaled in codespace
deassignLRs
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 277 bSize = 35
Bits on { (2) (7) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 4 (0x4)
getRegGpr
allocReg of type REG_GPR for register rIdx: 5 (0x5)
getRegGpr
allocReg of type REG_GPR for register rIdx: 6 (0x6)
getRegGpr
allocReg of type REG_GPR for register rIdx: 7 (0x7)
  2457 - 
  2471 - 
  op: LABEL
deassignLRs
  op: LABEL
deassignLRs
  op: SEND
deassignLRs
  op: SEND
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name ___fslt
  827  storage class 0 
 832  integral
 838  specifier
___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
pic16_allocDirReg:861 sym: __fslt in codespace
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 277 bSize = 35
Bits on { (2) (7) (9) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 8 (0x8)
  2457 - 
  2471 - 
  op: IFX
pic16_allocDirReg BAD, op is NULL
deassignLRs
freeReg
  op: SEND
deassignLRs
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name ___fsadd
  827  storage class 0 
 838  specifier
___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
pic16_allocDirReg:861 sym: __fsadd in codespace
deassignLRs
  op: GOTO
deassignLRs
  op: LABEL
deassignLRs
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name _ligaled
  827  storage class 0 
 838  specifier
_ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
pic16_allocDirReg:861 sym: ligaled in codespace
deassignLRs
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: LABEL
deassignLRs
  op: LABEL
deassignLRs
  op: SEND
deassignLRs
  op: SEND
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name ___fslt
  827  storage class 0 
 832  integral
 838  specifier
___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
pic16_allocDirReg:861 sym: __fslt in codespace
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 277 bSize = 35
Bits on { (2) (7) (13) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 8 (0x8)
  2457 - 
  2471 - 
  op: IFX
pic16_allocDirReg BAD, op is NULL
deassignLRs
freeReg
  op: SEND
deassignLRs
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name ___fsadd
  827  storage class 0 
 838  specifier
___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
pic16_allocDirReg:861 sym: __fsadd in codespace
deassignLRs
  op: GOTO
deassignLRs
  op: LABEL
deassignLRs
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name _ligaled
  827  storage class 0 
 838  specifier
_ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
pic16_allocDirReg:861 sym: ligaled in codespace
deassignLRs
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: LABEL
deassignLRs
  op: LABEL
deassignLRs
  op: SEND
deassignLRs
  op: SEND
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name ___fslt
  827  storage class 0 
 832  integral
 838  specifier
___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
pic16_allocDirReg:861 sym: __fslt in codespace
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 277 bSize = 35
Bits on { (2) (7) (17) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 8 (0x8)
  2457 - 
  2471 - 
  op: IFX
pic16_allocDirReg BAD, op is NULL
deassignLRs
freeReg
  op: SEND
deassignLRs
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name ___fsadd
  827  storage class 0 
 838  specifier
___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
pic16_allocDirReg:861 sym: __fsadd in codespace
deassignLRs
  op: GOTO
deassignLRs
  op: LABEL
deassignLRs
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name _ligaled
  827  storage class 0 
 838  specifier
_ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
pic16_allocDirReg:861 sym: ligaled in codespace
deassignLRs
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: LABEL
deassignLRs
  op: LABEL
deassignLRs
  op: SEND
deassignLRs
  op: SEND
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name ___fslt
  827  storage class 0 
 832  integral
 838  specifier
___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
pic16_allocDirReg:861 sym: __fslt in codespace
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 277 bSize = 35
Bits on { (2) (7) (21) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 8 (0x8)
  2457 - 
  2471 - 
  op: IFX
pic16_allocDirReg BAD, op is NULL
deassignLRs
freeReg
  op: SEND
deassignLRs
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name ___fsadd
  827  storage class 0 
 838  specifier
___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
pic16_allocDirReg:861 sym: __fsadd in codespace
deassignLRs
  op: GOTO
deassignLRs
  op: LABEL
deassignLRs
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name _ligaled
  827  storage class 0 
 838  specifier
_ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
pic16_allocDirReg:861 sym: ligaled in codespace
deassignLRs
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: LABEL
deassignLRs
  op: LABEL
deassignLRs
  op: SEND
deassignLRs
  op: SEND
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name ___fslt
  827  storage class 0 
 832  integral
 838  specifier
___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
pic16_allocDirReg:861 sym: __fslt in codespace
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 277 bSize = 35
Bits on { (2) (7) (25) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 8 (0x8)
  2457 - 
  2471 - 
  op: IFX
pic16_allocDirReg BAD, op is NULL
deassignLRs
freeReg
  op: SEND
deassignLRs
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name ___fsadd
  827  storage class 0 
 838  specifier
___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
pic16_allocDirReg:861 sym: __fsadd in codespace
deassignLRs
  op: GOTO
deassignLRs
  op: LABEL
deassignLRs
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name _ligaled
  827  storage class 0 
 838  specifier
_ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
pic16_allocDirReg:861 sym: ligaled in codespace
deassignLRs
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: LABEL
deassignLRs
  op: LABEL
deassignLRs
  op: SEND
deassignLRs
  op: SEND
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name ___fslt
  827  storage class 0 
 832  integral
 838  specifier
___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
pic16_allocDirReg:861 sym: __fslt in codespace
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 277 bSize = 35
Bits on { (2) (7) (29) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 8 (0x8)
  2457 - 
  2471 - 
  op: IFX
pic16_allocDirReg BAD, op is NULL
deassignLRs
freeReg
  op: SEND
deassignLRs
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name ___fsadd
  827  storage class 0 
 838  specifier
___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
pic16_allocDirReg:861 sym: __fsadd in codespace
deassignLRs
  op: GOTO
deassignLRs
  op: LABEL
deassignLRs
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name _ligaled
  827  storage class 0 
 838  specifier
_ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
pic16_allocDirReg:861 sym: ligaled in codespace
deassignLRs
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: LABEL
deassignLRs
  op: LABEL
deassignLRs
  op: SEND
deassignLRs
  op: SEND
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name ___fslt
  827  storage class 0 
 832  integral
 838  specifier
___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
pic16_allocDirReg:861 sym: __fslt in codespace
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 277 bSize = 35
Bits on { (2) (7) (33) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 8 (0x8)
  2457 - 
  2471 - 
  op: IFX
pic16_allocDirReg BAD, op is NULL
deassignLRs
freeReg
  op: SEND
deassignLRs
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name ___fsadd
  827  storage class 0 
 838  specifier
___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
pic16_allocDirReg:861 sym: __fsadd in codespace
deassignLRs
  op: GOTO
deassignLRs
  op: LABEL
deassignLRs
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name _ligaled
  827  storage class 0 
 838  specifier
_ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
pic16_allocDirReg:861 sym: ligaled in codespace
deassignLRs
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: LABEL
deassignLRs
  op: LABEL
deassignLRs
  op: SEND
deassignLRs
  op: SEND
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name ___fslt
  827  storage class 0 
 832  integral
 838  specifier
___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
pic16_allocDirReg:861 sym: __fslt in codespace
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 277 bSize = 35
Bits on { (2) (7) (37) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 8 (0x8)
  2457 - 
  2471 - 
  op: IFX
pic16_allocDirReg BAD, op is NULL
deassignLRs
freeReg
  op: SEND
deassignLRs
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name ___fsadd
  827  storage class 0 
 838  specifier
___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
pic16_allocDirReg:861 sym: __fsadd in codespace
deassignLRs
  op: GOTO
deassignLRs
  op: LABEL
deassignLRs
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name _desligaled
  827  storage class 0 
 838  specifier
_desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
pic16_allocDirReg:861 sym: desligaled in codespace
deassignLRs
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: LABEL
deassignLRs
  op: LABEL
deassignLRs
  op: SEND
deassignLRs
  op: SEND
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name ___fslt
  827  storage class 0 
 832  integral
 838  specifier
___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
pic16_allocDirReg:861 sym: __fslt in codespace
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 277 bSize = 35
Bits on { (2) (7) (43) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 8 (0x8)
  2457 - 
  2471 - 
  op: IFX
pic16_allocDirReg BAD, op is NULL
deassignLRs
freeReg
  op: SEND
deassignLRs
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name ___fsadd
  827  storage class 0 
 838  specifier
___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
pic16_allocDirReg:861 sym: __fsadd in codespace
deassignLRs
  op: GOTO
deassignLRs
  op: LABEL
deassignLRs
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name _desligaled
  827  storage class 0 
 838  specifier
_desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
pic16_allocDirReg:861 sym: desligaled in codespace
deassignLRs
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: LABEL
deassignLRs
  op: LABEL
deassignLRs
  op: SEND
deassignLRs
  op: SEND
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name ___fslt
  827  storage class 0 
 832  integral
 838  specifier
___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
pic16_allocDirReg:861 sym: __fslt in codespace
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 277 bSize = 35
Bits on { (2) (7) (47) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 8 (0x8)
  2457 - 
  2471 - 
  op: IFX
pic16_allocDirReg BAD, op is NULL
deassignLRs
freeReg
  op: SEND
deassignLRs
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name ___fsadd
  827  storage class 0 
 838  specifier
___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
pic16_allocDirReg:861 sym: __fsadd in codespace
deassignLRs
  op: GOTO
deassignLRs
  op: LABEL
deassignLRs
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name _desligaled
  827  storage class 0 
 838  specifier
_desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
pic16_allocDirReg:861 sym: desligaled in codespace
deassignLRs
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: LABEL
deassignLRs
  op: LABEL
deassignLRs
  op: SEND
deassignLRs
  op: SEND
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name ___fslt
  827  storage class 0 
 832  integral
 838  specifier
___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
pic16_allocDirReg:861 sym: __fslt in codespace
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 277 bSize = 35
Bits on { (2) (7) (51) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 8 (0x8)
  2457 - 
  2471 - 
  op: IFX
pic16_allocDirReg BAD, op is NULL
deassignLRs
freeReg
  op: SEND
deassignLRs
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name ___fsadd
  827  storage class 0 
 838  specifier
___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
pic16_allocDirReg:861 sym: __fsadd in codespace
deassignLRs
  op: GOTO
deassignLRs
  op: LABEL
deassignLRs
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name _desligaled
  827  storage class 0 
 838  specifier
_desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
pic16_allocDirReg:861 sym: desligaled in codespace
deassignLRs
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: LABEL
deassignLRs
  op: LABEL
deassignLRs
  op: SEND
deassignLRs
  op: SEND
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name ___fslt
  827  storage class 0 
 832  integral
 838  specifier
___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
pic16_allocDirReg:861 sym: __fslt in codespace
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 277 bSize = 35
Bits on { (2) (7) (55) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 8 (0x8)
  2457 - 
  2471 - 
  op: IFX
pic16_allocDirReg BAD, op is NULL
deassignLRs
freeReg
  op: SEND
deassignLRs
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name ___fsadd
  827  storage class 0 
 838  specifier
___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
pic16_allocDirReg:861 sym: __fsadd in codespace
deassignLRs
  op: GOTO
deassignLRs
  op: LABEL
deassignLRs
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name _desligaled
  827  storage class 0 
 838  specifier
_desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
pic16_allocDirReg:861 sym: desligaled in codespace
deassignLRs
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: LABEL
deassignLRs
  op: LABEL
deassignLRs
  op: SEND
deassignLRs
  op: SEND
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name ___fslt
  827  storage class 0 
 832  integral
 838  specifier
___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
pic16_allocDirReg:861 sym: __fslt in codespace
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 277 bSize = 35
Bits on { (2) (7) (59) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 8 (0x8)
  2457 - 
  2471 - 
  op: IFX
pic16_allocDirReg BAD, op is NULL
deassignLRs
freeReg
  op: SEND
deassignLRs
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name ___fsadd
  827  storage class 0 
 838  specifier
___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
pic16_allocDirReg:861 sym: __fsadd in codespace
deassignLRs
  op: GOTO
deassignLRs
  op: LABEL
deassignLRs
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name _desligaled
  827  storage class 0 
 838  specifier
_desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
pic16_allocDirReg:861 sym: desligaled in codespace
deassignLRs
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: LABEL
deassignLRs
  op: LABEL
deassignLRs
  op: SEND
deassignLRs
  op: SEND
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name ___fslt
  827  storage class 0 
 832  integral
 838  specifier
___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
pic16_allocDirReg:861 sym: __fslt in codespace
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 277 bSize = 35
Bits on { (2) (7) (63) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 8 (0x8)
  2457 - 
  2471 - 
  op: IFX
pic16_allocDirReg BAD, op is NULL
deassignLRs
freeReg
  op: SEND
deassignLRs
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name ___fsadd
  827  storage class 0 
 838  specifier
___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
pic16_allocDirReg:861 sym: __fsadd in codespace
deassignLRs
  op: GOTO
deassignLRs
  op: LABEL
deassignLRs
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name _desligaled
  827  storage class 0 
 838  specifier
_desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
pic16_allocDirReg:861 sym: desligaled in codespace
deassignLRs
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: LABEL
deassignLRs
  op: LABEL
deassignLRs
  op: SEND
deassignLRs
  op: SEND
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name ___fslt
  827  storage class 0 
 832  integral
 838  specifier
___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
pic16_allocDirReg:861 sym: __fslt in codespace
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 277 bSize = 35
Bits on { (2) (7) (67) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 8 (0x8)
  2457 - 
  2471 - 
  op: IFX
pic16_allocDirReg BAD, op is NULL
deassignLRs
freeReg
  op: SEND
deassignLRs
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name ___fsadd
  827  storage class 0 
 838  specifier
___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
pic16_allocDirReg:861 sym: __fsadd in codespace
deassignLRs
  op: GOTO
deassignLRs
  op: LABEL
deassignLRs
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name _desligaled
  827  storage class 0 
 838  specifier
_desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
pic16_allocDirReg:861 sym: desligaled in codespace
deassignLRs
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: LABEL
deassignLRs
  op: LABEL
deassignLRs
  op: SEND
deassignLRs
  op: SEND
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name ___fslt
  827  storage class 0 
 832  integral
 838  specifier
___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
pic16_allocDirReg:861 sym: __fslt in codespace
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 277 bSize = 35
Bits on { (2) (7) (71) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 8 (0x8)
  2457 - 
  2471 - 
  op: IFX
pic16_allocDirReg BAD, op is NULL
deassignLRs
freeReg
  op: SEND
deassignLRs
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name ___fsadd
  827  storage class 0 
 838  specifier
___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
pic16_allocDirReg:861 sym: __fsadd in codespace
deassignLRs
  op: GOTO
deassignLRs
freeReg
freeReg
freeReg
freeReg
freeReg
freeReg
freeReg
freeReg
  op: LABEL
deassignLRs
  op: ENDFUNCTION
pic16_allocDirReg:815 symbol name _sequencial
  827  storage class 0 
 838  specifier
_sequencial [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}
pic16_allocDirReg:861 sym: sequencial in codespace
deassignLRs
createRegMask
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
ebbs after optimizing:

----------------------------------------------------------------
Basic Block _entry : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 1 : bbnum = 0 1st iCode = 1 , last iCode = 6
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (2) (5) }

local defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (5) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :
outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (5) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) }

----------------------------------------------------------------
led.c(l19:s1:k0:d0:s0)	 _entry($66) :
led.c(l19:s2:k1:d0:s0)		proc _sequencial [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}
led.c(l19:s3:k2:d0:s0)	iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ] = recv _sequencial [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}
led.c(l21:s4:k3:d0:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
led.c(l21:s5:k4:d0:s0)		iTemp1 [k6 lr5:5 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l22:s6:k5:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l22:s8:k6:d1:s0)	 _forcond_0($18) :
led.c(l22:s9:k277:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l22:s10:k278:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l22:s11:k279:d1:s0)		iTemp3 [k9 lr11:12 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l22:s12:k8:d1:s0)		if iTemp3 [k9 lr11:12 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_0($1)
led.c(l22:s13:k280:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l22:s14:k281:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l22:s15:k282:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l22:s16:k15:d1:s0)		 goto _forcond_0($18)
led.c(l22:s17:k16:d0:s0)	 _forbreak_0($1) :
led.c(l23:s18:k17:d0:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
led.c(l23:s19:k18:d0:s0)		iTemp6 [k12 lr19:19 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l24:s20:k19:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l24:s22:k20:d1:s0)	 _forcond_1($21) :
led.c(l24:s23:k283:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l24:s24:k284:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l24:s25:k285:d1:s0)		iTemp7 [k13 lr25:26 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l24:s26:k22:d1:s0)		if iTemp7 [k13 lr25:26 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_1($2)
led.c(l24:s27:k286:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l24:s28:k287:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l24:s29:k288:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l24:s30:k29:d1:s0)		 goto _forcond_1($21)
led.c(l24:s31:k30:d0:s0)	 _forbreak_1($2) :
led.c(l25:s32:k31:d0:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
led.c(l25:s33:k32:d0:s0)		iTemp10 [k16 lr33:33 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l26:s34:k33:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l26:s36:k34:d1:s0)	 _forcond_2($24) :
led.c(l26:s37:k289:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l26:s38:k290:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l26:s39:k291:d1:s0)		iTemp11 [k17 lr39:40 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l26:s40:k36:d1:s0)		if iTemp11 [k17 lr39:40 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_2($3)
led.c(l26:s41:k292:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l26:s42:k293:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l26:s43:k294:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l26:s44:k43:d1:s0)		 goto _forcond_2($24)
led.c(l26:s45:k44:d0:s0)	 _forbreak_2($3) :
led.c(l27:s46:k45:d0:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
led.c(l27:s47:k46:d0:s0)		iTemp14 [k20 lr47:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l28:s48:k47:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l28:s50:k48:d1:s0)	 _forcond_3($27) :
led.c(l28:s51:k295:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l28:s52:k296:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l28:s53:k297:d1:s0)		iTemp15 [k21 lr53:54 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l28:s54:k50:d1:s0)		if iTemp15 [k21 lr53:54 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_3($4)
led.c(l28:s55:k298:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l28:s56:k299:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l28:s57:k300:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l28:s58:k57:d1:s0)		 goto _forcond_3($27)
led.c(l28:s59:k58:d0:s0)	 _forbreak_3($4) :
led.c(l29:s60:k59:d0:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
led.c(l29:s61:k60:d0:s0)		iTemp18 [k24 lr61:61 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l30:s62:k61:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l30:s64:k62:d1:s0)	 _forcond_4($30) :
led.c(l30:s65:k301:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l30:s66:k302:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l30:s67:k303:d1:s0)		iTemp19 [k25 lr67:68 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l30:s68:k64:d1:s0)		if iTemp19 [k25 lr67:68 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_4($5)
led.c(l30:s69:k304:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l30:s70:k305:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l30:s71:k306:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l30:s72:k71:d1:s0)		 goto _forcond_4($30)
led.c(l30:s73:k72:d0:s0)	 _forbreak_4($5) :
led.c(l31:s74:k73:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l31:s75:k74:d0:s0)		iTemp22 [k28 lr75:75 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l32:s76:k75:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l32:s78:k76:d1:s0)	 _forcond_5($33) :
led.c(l32:s79:k307:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l32:s80:k308:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l32:s81:k309:d1:s0)		iTemp23 [k29 lr81:82 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l32:s82:k78:d1:s0)		if iTemp23 [k29 lr81:82 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_5($6)
led.c(l32:s83:k310:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l32:s84:k311:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l32:s85:k312:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l32:s86:k85:d1:s0)		 goto _forcond_5($33)
led.c(l32:s87:k86:d0:s0)	 _forbreak_5($6) :
led.c(l33:s88:k87:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l33:s89:k88:d0:s0)		iTemp26 [k32 lr89:89 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l34:s90:k89:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l34:s92:k90:d1:s0)	 _forcond_6($36) :
led.c(l34:s93:k313:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l34:s94:k314:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l34:s95:k315:d1:s0)		iTemp27 [k33 lr95:96 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l34:s96:k92:d1:s0)		if iTemp27 [k33 lr95:96 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_6($7)
led.c(l34:s97:k316:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l34:s98:k317:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l34:s99:k318:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l34:s100:k99:d1:s0)		 goto _forcond_6($36)
led.c(l34:s101:k100:d0:s0)	 _forbreak_6($7) :
led.c(l35:s102:k101:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l35:s103:k102:d0:s0)		iTemp30 [k36 lr103:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l36:s104:k103:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l36:s106:k104:d1:s0)	 _forcond_7($39) :
led.c(l36:s107:k319:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l36:s108:k320:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l36:s109:k321:d1:s0)		iTemp31 [k37 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l36:s110:k106:d1:s0)		if iTemp31 [k37 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_7($8)
led.c(l36:s111:k322:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l36:s112:k323:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l36:s113:k324:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l36:s114:k113:d1:s0)		 goto _forcond_7($39)
led.c(l36:s115:k114:d0:s0)	 _forbreak_7($8) :
led.c(l37:s116:k115:d0:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
led.c(l37:s117:k116:d0:s0)		iTemp34 [k42 lr117:117 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l38:s118:k117:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l38:s120:k118:d1:s0)	 _forcond_8($42) :
led.c(l38:s121:k325:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l38:s122:k326:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l38:s123:k327:d1:s0)		iTemp35 [k43 lr123:124 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l38:s124:k120:d1:s0)		if iTemp35 [k43 lr123:124 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_8($9)
led.c(l38:s125:k328:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l38:s126:k329:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l38:s127:k330:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l38:s128:k127:d1:s0)		 goto _forcond_8($42)
led.c(l38:s129:k128:d0:s0)	 _forbreak_8($9) :
led.c(l39:s130:k129:d0:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
led.c(l39:s131:k130:d0:s0)		iTemp38 [k46 lr131:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l40:s132:k131:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l40:s134:k132:d1:s0)	 _forcond_9($45) :
led.c(l40:s135:k331:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l40:s136:k332:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l40:s137:k333:d1:s0)		iTemp39 [k47 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l40:s138:k134:d1:s0)		if iTemp39 [k47 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_9($10)
led.c(l40:s139:k334:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l40:s140:k335:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l40:s141:k336:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l40:s142:k141:d1:s0)		 goto _forcond_9($45)
led.c(l40:s143:k142:d0:s0)	 _forbreak_9($10) :
led.c(l41:s144:k143:d0:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
led.c(l41:s145:k144:d0:s0)		iTemp42 [k50 lr145:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l42:s146:k145:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l42:s148:k146:d1:s0)	 _forcond_10($48) :
led.c(l42:s149:k337:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l42:s150:k338:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l42:s151:k339:d1:s0)		iTemp43 [k51 lr151:152 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l42:s152:k148:d1:s0)		if iTemp43 [k51 lr151:152 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_10($11)
led.c(l42:s153:k340:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l42:s154:k341:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l42:s155:k342:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l42:s156:k155:d1:s0)		 goto _forcond_10($48)
led.c(l42:s157:k156:d0:s0)	 _forbreak_10($11) :
led.c(l43:s158:k157:d0:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
led.c(l43:s159:k158:d0:s0)		iTemp46 [k54 lr159:159 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l44:s160:k159:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l44:s162:k160:d1:s0)	 _forcond_11($51) :
led.c(l44:s163:k343:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l44:s164:k344:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l44:s165:k345:d1:s0)		iTemp47 [k55 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l44:s166:k162:d1:s0)		if iTemp47 [k55 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_11($12)
led.c(l44:s167:k346:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l44:s168:k347:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l44:s169:k348:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l44:s170:k169:d1:s0)		 goto _forcond_11($51)
led.c(l44:s171:k170:d0:s0)	 _forbreak_11($12) :
led.c(l45:s172:k171:d0:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
led.c(l45:s173:k172:d0:s0)		iTemp50 [k58 lr173:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l46:s174:k173:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l46:s176:k174:d1:s0)	 _forcond_12($54) :
led.c(l46:s177:k349:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s178:k350:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l46:s179:k351:d1:s0)		iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l46:s180:k176:d1:s0)		if iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_12($13)
led.c(l46:s181:k352:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s182:k353:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l46:s183:k354:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l46:s184:k183:d1:s0)		 goto _forcond_12($54)
led.c(l46:s185:k184:d0:s0)	 _forbreak_12($13) :
led.c(l47:s186:k185:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l47:s187:k186:d0:s0)		iTemp54 [k62 lr187:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l48:s188:k187:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l48:s190:k188:d1:s0)	 _forcond_13($57) :
led.c(l48:s191:k355:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s192:k356:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l48:s193:k357:d1:s0)		iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l48:s194:k190:d1:s0)		if iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_13($14)
led.c(l48:s195:k358:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s196:k359:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l48:s197:k360:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l48:s198:k197:d1:s0)		 goto _forcond_13($57)
led.c(l48:s199:k198:d0:s0)	 _forbreak_13($14) :
led.c(l49:s200:k199:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l49:s201:k200:d0:s0)		iTemp58 [k66 lr201:201 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l50:s202:k201:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l50:s204:k202:d1:s0)	 _forcond_14($60) :
led.c(l50:s205:k361:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s206:k362:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l50:s207:k363:d1:s0)		iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l50:s208:k204:d1:s0)		if iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_14($15)
led.c(l50:s209:k364:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s210:k365:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l50:s211:k366:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l50:s212:k211:d1:s0)		 goto _forcond_14($60)
led.c(l50:s213:k212:d0:s0)	 _forbreak_14($15) :
led.c(l51:s214:k213:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l51:s215:k214:d0:s0)		iTemp62 [k70 lr215:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l52:s216:k215:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l52:s218:k216:d1:s0)	 _forcond_15($63) :
led.c(l52:s219:k367:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s220:k368:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l52:s221:k369:d1:s0)		iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l52:s222:k218:d1:s0)		if iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _return($65)
led.c(l52:s223:k370:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s224:k371:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l52:s225:k372:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l52:s226:k225:d1:s0)		 goto _forcond_15($63)
led.c(l52:s227:k227:d0:s0)	 _return($65) :
led.c(l52:s228:k228:d0:s0)		eproc _sequencial [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}

----------------------------------------------------------------
Basic Block preHeaderLbl32 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 2 : bbnum = 1 1st iCode = 7 , last iCode = 7
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { }

local defines bitVector :
pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (5) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (5) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { }

----------------------------------------------------------------
led.c(l22:s7:k261:d0:s0)	 preHeaderLbl32($132) :
led.c(l22:s8:k6:d1:s0)	 _forcond_0($18) :
led.c(l22:s9:k277:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l22:s10:k278:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l22:s11:k279:d1:s0)		iTemp3 [k9 lr11:12 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l22:s12:k8:d1:s0)		if iTemp3 [k9 lr11:12 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_0($1)
led.c(l22:s13:k280:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l22:s14:k281:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l22:s15:k282:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l22:s16:k15:d1:s0)		 goto _forcond_0($18)
led.c(l22:s17:k16:d0:s0)	 _forbreak_0($1) :
led.c(l23:s18:k17:d0:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
led.c(l23:s19:k18:d0:s0)		iTemp6 [k12 lr19:19 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l24:s20:k19:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l24:s22:k20:d1:s0)	 _forcond_1($21) :
led.c(l24:s23:k283:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l24:s24:k284:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l24:s25:k285:d1:s0)		iTemp7 [k13 lr25:26 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l24:s26:k22:d1:s0)		if iTemp7 [k13 lr25:26 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_1($2)
led.c(l24:s27:k286:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l24:s28:k287:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l24:s29:k288:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l24:s30:k29:d1:s0)		 goto _forcond_1($21)
led.c(l24:s31:k30:d0:s0)	 _forbreak_1($2) :
led.c(l25:s32:k31:d0:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
led.c(l25:s33:k32:d0:s0)		iTemp10 [k16 lr33:33 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l26:s34:k33:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l26:s36:k34:d1:s0)	 _forcond_2($24) :
led.c(l26:s37:k289:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l26:s38:k290:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l26:s39:k291:d1:s0)		iTemp11 [k17 lr39:40 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l26:s40:k36:d1:s0)		if iTemp11 [k17 lr39:40 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_2($3)
led.c(l26:s41:k292:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l26:s42:k293:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l26:s43:k294:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l26:s44:k43:d1:s0)		 goto _forcond_2($24)
led.c(l26:s45:k44:d0:s0)	 _forbreak_2($3) :
led.c(l27:s46:k45:d0:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
led.c(l27:s47:k46:d0:s0)		iTemp14 [k20 lr47:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l28:s48:k47:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l28:s50:k48:d1:s0)	 _forcond_3($27) :
led.c(l28:s51:k295:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l28:s52:k296:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l28:s53:k297:d1:s0)		iTemp15 [k21 lr53:54 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l28:s54:k50:d1:s0)		if iTemp15 [k21 lr53:54 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_3($4)
led.c(l28:s55:k298:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l28:s56:k299:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l28:s57:k300:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l28:s58:k57:d1:s0)		 goto _forcond_3($27)
led.c(l28:s59:k58:d0:s0)	 _forbreak_3($4) :
led.c(l29:s60:k59:d0:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
led.c(l29:s61:k60:d0:s0)		iTemp18 [k24 lr61:61 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l30:s62:k61:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l30:s64:k62:d1:s0)	 _forcond_4($30) :
led.c(l30:s65:k301:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l30:s66:k302:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l30:s67:k303:d1:s0)		iTemp19 [k25 lr67:68 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l30:s68:k64:d1:s0)		if iTemp19 [k25 lr67:68 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_4($5)
led.c(l30:s69:k304:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l30:s70:k305:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l30:s71:k306:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l30:s72:k71:d1:s0)		 goto _forcond_4($30)
led.c(l30:s73:k72:d0:s0)	 _forbreak_4($5) :
led.c(l31:s74:k73:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l31:s75:k74:d0:s0)		iTemp22 [k28 lr75:75 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l32:s76:k75:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l32:s78:k76:d1:s0)	 _forcond_5($33) :
led.c(l32:s79:k307:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l32:s80:k308:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l32:s81:k309:d1:s0)		iTemp23 [k29 lr81:82 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l32:s82:k78:d1:s0)		if iTemp23 [k29 lr81:82 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_5($6)
led.c(l32:s83:k310:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l32:s84:k311:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l32:s85:k312:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l32:s86:k85:d1:s0)		 goto _forcond_5($33)
led.c(l32:s87:k86:d0:s0)	 _forbreak_5($6) :
led.c(l33:s88:k87:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l33:s89:k88:d0:s0)		iTemp26 [k32 lr89:89 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l34:s90:k89:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l34:s92:k90:d1:s0)	 _forcond_6($36) :
led.c(l34:s93:k313:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l34:s94:k314:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l34:s95:k315:d1:s0)		iTemp27 [k33 lr95:96 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l34:s96:k92:d1:s0)		if iTemp27 [k33 lr95:96 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_6($7)
led.c(l34:s97:k316:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l34:s98:k317:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l34:s99:k318:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l34:s100:k99:d1:s0)		 goto _forcond_6($36)
led.c(l34:s101:k100:d0:s0)	 _forbreak_6($7) :
led.c(l35:s102:k101:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l35:s103:k102:d0:s0)		iTemp30 [k36 lr103:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l36:s104:k103:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l36:s106:k104:d1:s0)	 _forcond_7($39) :
led.c(l36:s107:k319:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l36:s108:k320:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l36:s109:k321:d1:s0)		iTemp31 [k37 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l36:s110:k106:d1:s0)		if iTemp31 [k37 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_7($8)
led.c(l36:s111:k322:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l36:s112:k323:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l36:s113:k324:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l36:s114:k113:d1:s0)		 goto _forcond_7($39)
led.c(l36:s115:k114:d0:s0)	 _forbreak_7($8) :
led.c(l37:s116:k115:d0:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
led.c(l37:s117:k116:d0:s0)		iTemp34 [k42 lr117:117 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l38:s118:k117:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l38:s120:k118:d1:s0)	 _forcond_8($42) :
led.c(l38:s121:k325:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l38:s122:k326:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l38:s123:k327:d1:s0)		iTemp35 [k43 lr123:124 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l38:s124:k120:d1:s0)		if iTemp35 [k43 lr123:124 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_8($9)
led.c(l38:s125:k328:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l38:s126:k329:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l38:s127:k330:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l38:s128:k127:d1:s0)		 goto _forcond_8($42)
led.c(l38:s129:k128:d0:s0)	 _forbreak_8($9) :
led.c(l39:s130:k129:d0:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
led.c(l39:s131:k130:d0:s0)		iTemp38 [k46 lr131:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l40:s132:k131:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l40:s134:k132:d1:s0)	 _forcond_9($45) :
led.c(l40:s135:k331:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l40:s136:k332:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l40:s137:k333:d1:s0)		iTemp39 [k47 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l40:s138:k134:d1:s0)		if iTemp39 [k47 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_9($10)
led.c(l40:s139:k334:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l40:s140:k335:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l40:s141:k336:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l40:s142:k141:d1:s0)		 goto _forcond_9($45)
led.c(l40:s143:k142:d0:s0)	 _forbreak_9($10) :
led.c(l41:s144:k143:d0:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
led.c(l41:s145:k144:d0:s0)		iTemp42 [k50 lr145:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l42:s146:k145:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l42:s148:k146:d1:s0)	 _forcond_10($48) :
led.c(l42:s149:k337:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l42:s150:k338:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l42:s151:k339:d1:s0)		iTemp43 [k51 lr151:152 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l42:s152:k148:d1:s0)		if iTemp43 [k51 lr151:152 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_10($11)
led.c(l42:s153:k340:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l42:s154:k341:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l42:s155:k342:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l42:s156:k155:d1:s0)		 goto _forcond_10($48)
led.c(l42:s157:k156:d0:s0)	 _forbreak_10($11) :
led.c(l43:s158:k157:d0:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
led.c(l43:s159:k158:d0:s0)		iTemp46 [k54 lr159:159 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l44:s160:k159:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l44:s162:k160:d1:s0)	 _forcond_11($51) :
led.c(l44:s163:k343:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l44:s164:k344:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l44:s165:k345:d1:s0)		iTemp47 [k55 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l44:s166:k162:d1:s0)		if iTemp47 [k55 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_11($12)
led.c(l44:s167:k346:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l44:s168:k347:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l44:s169:k348:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l44:s170:k169:d1:s0)		 goto _forcond_11($51)
led.c(l44:s171:k170:d0:s0)	 _forbreak_11($12) :
led.c(l45:s172:k171:d0:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
led.c(l45:s173:k172:d0:s0)		iTemp50 [k58 lr173:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l46:s174:k173:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l46:s176:k174:d1:s0)	 _forcond_12($54) :
led.c(l46:s177:k349:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s178:k350:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l46:s179:k351:d1:s0)		iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l46:s180:k176:d1:s0)		if iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_12($13)
led.c(l46:s181:k352:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s182:k353:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l46:s183:k354:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l46:s184:k183:d1:s0)		 goto _forcond_12($54)
led.c(l46:s185:k184:d0:s0)	 _forbreak_12($13) :
led.c(l47:s186:k185:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l47:s187:k186:d0:s0)		iTemp54 [k62 lr187:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l48:s188:k187:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l48:s190:k188:d1:s0)	 _forcond_13($57) :
led.c(l48:s191:k355:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s192:k356:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l48:s193:k357:d1:s0)		iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l48:s194:k190:d1:s0)		if iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_13($14)
led.c(l48:s195:k358:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s196:k359:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l48:s197:k360:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l48:s198:k197:d1:s0)		 goto _forcond_13($57)
led.c(l48:s199:k198:d0:s0)	 _forbreak_13($14) :
led.c(l49:s200:k199:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l49:s201:k200:d0:s0)		iTemp58 [k66 lr201:201 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l50:s202:k201:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l50:s204:k202:d1:s0)	 _forcond_14($60) :
led.c(l50:s205:k361:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s206:k362:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l50:s207:k363:d1:s0)		iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l50:s208:k204:d1:s0)		if iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_14($15)
led.c(l50:s209:k364:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s210:k365:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l50:s211:k366:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l50:s212:k211:d1:s0)		 goto _forcond_14($60)
led.c(l50:s213:k212:d0:s0)	 _forbreak_14($15) :
led.c(l51:s214:k213:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l51:s215:k214:d0:s0)		iTemp62 [k70 lr215:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l52:s216:k215:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l52:s218:k216:d1:s0)	 _forcond_15($63) :
led.c(l52:s219:k367:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s220:k368:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l52:s221:k369:d1:s0)		iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l52:s222:k218:d1:s0)		if iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _return($65)
led.c(l52:s223:k370:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s224:k371:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l52:s225:k372:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l52:s226:k225:d1:s0)		 goto _forcond_15($63)
led.c(l52:s227:k227:d0:s0)	 _return($65) :
led.c(l52:s228:k228:d0:s0)		eproc _sequencial [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}

----------------------------------------------------------------
Basic Block _forcond_0 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 3 : bbnum = 2 1st iCode = 8 , last iCode = 12
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (7) }

local defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (7) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (5) (7) (13) (14) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (5) (7) (13) (14) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (5) (7) (14) }

----------------------------------------------------------------
led.c(l22:s8:k6:d1:s0)	 _forcond_0($18) :
led.c(l22:s9:k277:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l22:s10:k278:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l22:s11:k279:d1:s0)		iTemp3 [k9 lr11:12 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l22:s12:k8:d1:s0)		if iTemp3 [k9 lr11:12 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_0($1)
led.c(l22:s13:k280:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l22:s14:k281:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l22:s15:k282:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l22:s16:k15:d1:s0)		 goto _forcond_0($18)
led.c(l22:s17:k16:d0:s0)	 _forbreak_0($1) :
led.c(l23:s18:k17:d0:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
led.c(l23:s19:k18:d0:s0)		iTemp6 [k12 lr19:19 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l24:s20:k19:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l24:s22:k20:d1:s0)	 _forcond_1($21) :
led.c(l24:s23:k283:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l24:s24:k284:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l24:s25:k285:d1:s0)		iTemp7 [k13 lr25:26 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l24:s26:k22:d1:s0)		if iTemp7 [k13 lr25:26 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_1($2)
led.c(l24:s27:k286:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l24:s28:k287:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l24:s29:k288:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l24:s30:k29:d1:s0)		 goto _forcond_1($21)
led.c(l24:s31:k30:d0:s0)	 _forbreak_1($2) :
led.c(l25:s32:k31:d0:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
led.c(l25:s33:k32:d0:s0)		iTemp10 [k16 lr33:33 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l26:s34:k33:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l26:s36:k34:d1:s0)	 _forcond_2($24) :
led.c(l26:s37:k289:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l26:s38:k290:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l26:s39:k291:d1:s0)		iTemp11 [k17 lr39:40 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l26:s40:k36:d1:s0)		if iTemp11 [k17 lr39:40 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_2($3)
led.c(l26:s41:k292:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l26:s42:k293:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l26:s43:k294:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l26:s44:k43:d1:s0)		 goto _forcond_2($24)
led.c(l26:s45:k44:d0:s0)	 _forbreak_2($3) :
led.c(l27:s46:k45:d0:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
led.c(l27:s47:k46:d0:s0)		iTemp14 [k20 lr47:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l28:s48:k47:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l28:s50:k48:d1:s0)	 _forcond_3($27) :
led.c(l28:s51:k295:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l28:s52:k296:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l28:s53:k297:d1:s0)		iTemp15 [k21 lr53:54 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l28:s54:k50:d1:s0)		if iTemp15 [k21 lr53:54 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_3($4)
led.c(l28:s55:k298:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l28:s56:k299:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l28:s57:k300:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l28:s58:k57:d1:s0)		 goto _forcond_3($27)
led.c(l28:s59:k58:d0:s0)	 _forbreak_3($4) :
led.c(l29:s60:k59:d0:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
led.c(l29:s61:k60:d0:s0)		iTemp18 [k24 lr61:61 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l30:s62:k61:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l30:s64:k62:d1:s0)	 _forcond_4($30) :
led.c(l30:s65:k301:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l30:s66:k302:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l30:s67:k303:d1:s0)		iTemp19 [k25 lr67:68 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l30:s68:k64:d1:s0)		if iTemp19 [k25 lr67:68 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_4($5)
led.c(l30:s69:k304:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l30:s70:k305:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l30:s71:k306:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l30:s72:k71:d1:s0)		 goto _forcond_4($30)
led.c(l30:s73:k72:d0:s0)	 _forbreak_4($5) :
led.c(l31:s74:k73:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l31:s75:k74:d0:s0)		iTemp22 [k28 lr75:75 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l32:s76:k75:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l32:s78:k76:d1:s0)	 _forcond_5($33) :
led.c(l32:s79:k307:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l32:s80:k308:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l32:s81:k309:d1:s0)		iTemp23 [k29 lr81:82 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l32:s82:k78:d1:s0)		if iTemp23 [k29 lr81:82 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_5($6)
led.c(l32:s83:k310:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l32:s84:k311:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l32:s85:k312:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l32:s86:k85:d1:s0)		 goto _forcond_5($33)
led.c(l32:s87:k86:d0:s0)	 _forbreak_5($6) :
led.c(l33:s88:k87:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l33:s89:k88:d0:s0)		iTemp26 [k32 lr89:89 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l34:s90:k89:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l34:s92:k90:d1:s0)	 _forcond_6($36) :
led.c(l34:s93:k313:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l34:s94:k314:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l34:s95:k315:d1:s0)		iTemp27 [k33 lr95:96 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l34:s96:k92:d1:s0)		if iTemp27 [k33 lr95:96 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_6($7)
led.c(l34:s97:k316:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l34:s98:k317:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l34:s99:k318:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l34:s100:k99:d1:s0)		 goto _forcond_6($36)
led.c(l34:s101:k100:d0:s0)	 _forbreak_6($7) :
led.c(l35:s102:k101:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l35:s103:k102:d0:s0)		iTemp30 [k36 lr103:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l36:s104:k103:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l36:s106:k104:d1:s0)	 _forcond_7($39) :
led.c(l36:s107:k319:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l36:s108:k320:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l36:s109:k321:d1:s0)		iTemp31 [k37 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l36:s110:k106:d1:s0)		if iTemp31 [k37 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_7($8)
led.c(l36:s111:k322:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l36:s112:k323:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l36:s113:k324:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l36:s114:k113:d1:s0)		 goto _forcond_7($39)
led.c(l36:s115:k114:d0:s0)	 _forbreak_7($8) :
led.c(l37:s116:k115:d0:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
led.c(l37:s117:k116:d0:s0)		iTemp34 [k42 lr117:117 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l38:s118:k117:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l38:s120:k118:d1:s0)	 _forcond_8($42) :
led.c(l38:s121:k325:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l38:s122:k326:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l38:s123:k327:d1:s0)		iTemp35 [k43 lr123:124 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l38:s124:k120:d1:s0)		if iTemp35 [k43 lr123:124 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_8($9)
led.c(l38:s125:k328:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l38:s126:k329:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l38:s127:k330:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l38:s128:k127:d1:s0)		 goto _forcond_8($42)
led.c(l38:s129:k128:d0:s0)	 _forbreak_8($9) :
led.c(l39:s130:k129:d0:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
led.c(l39:s131:k130:d0:s0)		iTemp38 [k46 lr131:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l40:s132:k131:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l40:s134:k132:d1:s0)	 _forcond_9($45) :
led.c(l40:s135:k331:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l40:s136:k332:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l40:s137:k333:d1:s0)		iTemp39 [k47 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l40:s138:k134:d1:s0)		if iTemp39 [k47 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_9($10)
led.c(l40:s139:k334:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l40:s140:k335:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l40:s141:k336:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l40:s142:k141:d1:s0)		 goto _forcond_9($45)
led.c(l40:s143:k142:d0:s0)	 _forbreak_9($10) :
led.c(l41:s144:k143:d0:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
led.c(l41:s145:k144:d0:s0)		iTemp42 [k50 lr145:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l42:s146:k145:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l42:s148:k146:d1:s0)	 _forcond_10($48) :
led.c(l42:s149:k337:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l42:s150:k338:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l42:s151:k339:d1:s0)		iTemp43 [k51 lr151:152 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l42:s152:k148:d1:s0)		if iTemp43 [k51 lr151:152 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_10($11)
led.c(l42:s153:k340:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l42:s154:k341:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l42:s155:k342:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l42:s156:k155:d1:s0)		 goto _forcond_10($48)
led.c(l42:s157:k156:d0:s0)	 _forbreak_10($11) :
led.c(l43:s158:k157:d0:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
led.c(l43:s159:k158:d0:s0)		iTemp46 [k54 lr159:159 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l44:s160:k159:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l44:s162:k160:d1:s0)	 _forcond_11($51) :
led.c(l44:s163:k343:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l44:s164:k344:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l44:s165:k345:d1:s0)		iTemp47 [k55 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l44:s166:k162:d1:s0)		if iTemp47 [k55 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_11($12)
led.c(l44:s167:k346:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l44:s168:k347:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l44:s169:k348:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l44:s170:k169:d1:s0)		 goto _forcond_11($51)
led.c(l44:s171:k170:d0:s0)	 _forbreak_11($12) :
led.c(l45:s172:k171:d0:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
led.c(l45:s173:k172:d0:s0)		iTemp50 [k58 lr173:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l46:s174:k173:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l46:s176:k174:d1:s0)	 _forcond_12($54) :
led.c(l46:s177:k349:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s178:k350:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l46:s179:k351:d1:s0)		iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l46:s180:k176:d1:s0)		if iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_12($13)
led.c(l46:s181:k352:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s182:k353:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l46:s183:k354:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l46:s184:k183:d1:s0)		 goto _forcond_12($54)
led.c(l46:s185:k184:d0:s0)	 _forbreak_12($13) :
led.c(l47:s186:k185:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l47:s187:k186:d0:s0)		iTemp54 [k62 lr187:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l48:s188:k187:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l48:s190:k188:d1:s0)	 _forcond_13($57) :
led.c(l48:s191:k355:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s192:k356:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l48:s193:k357:d1:s0)		iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l48:s194:k190:d1:s0)		if iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_13($14)
led.c(l48:s195:k358:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s196:k359:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l48:s197:k360:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l48:s198:k197:d1:s0)		 goto _forcond_13($57)
led.c(l48:s199:k198:d0:s0)	 _forbreak_13($14) :
led.c(l49:s200:k199:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l49:s201:k200:d0:s0)		iTemp58 [k66 lr201:201 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l50:s202:k201:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l50:s204:k202:d1:s0)	 _forcond_14($60) :
led.c(l50:s205:k361:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s206:k362:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l50:s207:k363:d1:s0)		iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l50:s208:k204:d1:s0)		if iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_14($15)
led.c(l50:s209:k364:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s210:k365:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l50:s211:k366:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l50:s212:k211:d1:s0)		 goto _forcond_14($60)
led.c(l50:s213:k212:d0:s0)	 _forbreak_14($15) :
led.c(l51:s214:k213:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l51:s215:k214:d0:s0)		iTemp62 [k70 lr215:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l52:s216:k215:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l52:s218:k216:d1:s0)	 _forcond_15($63) :
led.c(l52:s219:k367:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s220:k368:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l52:s221:k369:d1:s0)		iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l52:s222:k218:d1:s0)		if iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _return($65)
led.c(l52:s223:k370:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s224:k371:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l52:s225:k372:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l52:s226:k225:d1:s0)		 goto _forcond_15($63)
led.c(l52:s227:k227:d0:s0)	 _return($65) :
led.c(l52:s228:k228:d0:s0)		eproc _sequencial [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}

----------------------------------------------------------------
Basic Block _eBBlock32 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 4 : bbnum = 3 1st iCode = 13 , last iCode = 16
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (13) (14) }

local defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (13) (14) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (5) (7) (13) (14) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (14) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (5) (13) (14) }

----------------------------------------------------------------
led.c(l22:s13:k280:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l22:s14:k281:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l22:s15:k282:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l22:s16:k15:d1:s0)		 goto _forcond_0($18)
led.c(l22:s17:k16:d0:s0)	 _forbreak_0($1) :
led.c(l23:s18:k17:d0:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
led.c(l23:s19:k18:d0:s0)		iTemp6 [k12 lr19:19 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l24:s20:k19:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l24:s22:k20:d1:s0)	 _forcond_1($21) :
led.c(l24:s23:k283:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l24:s24:k284:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l24:s25:k285:d1:s0)		iTemp7 [k13 lr25:26 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l24:s26:k22:d1:s0)		if iTemp7 [k13 lr25:26 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_1($2)
led.c(l24:s27:k286:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l24:s28:k287:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l24:s29:k288:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l24:s30:k29:d1:s0)		 goto _forcond_1($21)
led.c(l24:s31:k30:d0:s0)	 _forbreak_1($2) :
led.c(l25:s32:k31:d0:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
led.c(l25:s33:k32:d0:s0)		iTemp10 [k16 lr33:33 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l26:s34:k33:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l26:s36:k34:d1:s0)	 _forcond_2($24) :
led.c(l26:s37:k289:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l26:s38:k290:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l26:s39:k291:d1:s0)		iTemp11 [k17 lr39:40 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l26:s40:k36:d1:s0)		if iTemp11 [k17 lr39:40 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_2($3)
led.c(l26:s41:k292:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l26:s42:k293:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l26:s43:k294:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l26:s44:k43:d1:s0)		 goto _forcond_2($24)
led.c(l26:s45:k44:d0:s0)	 _forbreak_2($3) :
led.c(l27:s46:k45:d0:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
led.c(l27:s47:k46:d0:s0)		iTemp14 [k20 lr47:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l28:s48:k47:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l28:s50:k48:d1:s0)	 _forcond_3($27) :
led.c(l28:s51:k295:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l28:s52:k296:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l28:s53:k297:d1:s0)		iTemp15 [k21 lr53:54 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l28:s54:k50:d1:s0)		if iTemp15 [k21 lr53:54 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_3($4)
led.c(l28:s55:k298:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l28:s56:k299:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l28:s57:k300:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l28:s58:k57:d1:s0)		 goto _forcond_3($27)
led.c(l28:s59:k58:d0:s0)	 _forbreak_3($4) :
led.c(l29:s60:k59:d0:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
led.c(l29:s61:k60:d0:s0)		iTemp18 [k24 lr61:61 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l30:s62:k61:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l30:s64:k62:d1:s0)	 _forcond_4($30) :
led.c(l30:s65:k301:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l30:s66:k302:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l30:s67:k303:d1:s0)		iTemp19 [k25 lr67:68 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l30:s68:k64:d1:s0)		if iTemp19 [k25 lr67:68 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_4($5)
led.c(l30:s69:k304:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l30:s70:k305:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l30:s71:k306:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l30:s72:k71:d1:s0)		 goto _forcond_4($30)
led.c(l30:s73:k72:d0:s0)	 _forbreak_4($5) :
led.c(l31:s74:k73:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l31:s75:k74:d0:s0)		iTemp22 [k28 lr75:75 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l32:s76:k75:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l32:s78:k76:d1:s0)	 _forcond_5($33) :
led.c(l32:s79:k307:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l32:s80:k308:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l32:s81:k309:d1:s0)		iTemp23 [k29 lr81:82 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l32:s82:k78:d1:s0)		if iTemp23 [k29 lr81:82 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_5($6)
led.c(l32:s83:k310:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l32:s84:k311:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l32:s85:k312:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l32:s86:k85:d1:s0)		 goto _forcond_5($33)
led.c(l32:s87:k86:d0:s0)	 _forbreak_5($6) :
led.c(l33:s88:k87:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l33:s89:k88:d0:s0)		iTemp26 [k32 lr89:89 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l34:s90:k89:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l34:s92:k90:d1:s0)	 _forcond_6($36) :
led.c(l34:s93:k313:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l34:s94:k314:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l34:s95:k315:d1:s0)		iTemp27 [k33 lr95:96 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l34:s96:k92:d1:s0)		if iTemp27 [k33 lr95:96 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_6($7)
led.c(l34:s97:k316:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l34:s98:k317:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l34:s99:k318:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l34:s100:k99:d1:s0)		 goto _forcond_6($36)
led.c(l34:s101:k100:d0:s0)	 _forbreak_6($7) :
led.c(l35:s102:k101:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l35:s103:k102:d0:s0)		iTemp30 [k36 lr103:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l36:s104:k103:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l36:s106:k104:d1:s0)	 _forcond_7($39) :
led.c(l36:s107:k319:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l36:s108:k320:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l36:s109:k321:d1:s0)		iTemp31 [k37 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l36:s110:k106:d1:s0)		if iTemp31 [k37 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_7($8)
led.c(l36:s111:k322:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l36:s112:k323:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l36:s113:k324:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l36:s114:k113:d1:s0)		 goto _forcond_7($39)
led.c(l36:s115:k114:d0:s0)	 _forbreak_7($8) :
led.c(l37:s116:k115:d0:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
led.c(l37:s117:k116:d0:s0)		iTemp34 [k42 lr117:117 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l38:s118:k117:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l38:s120:k118:d1:s0)	 _forcond_8($42) :
led.c(l38:s121:k325:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l38:s122:k326:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l38:s123:k327:d1:s0)		iTemp35 [k43 lr123:124 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l38:s124:k120:d1:s0)		if iTemp35 [k43 lr123:124 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_8($9)
led.c(l38:s125:k328:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l38:s126:k329:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l38:s127:k330:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l38:s128:k127:d1:s0)		 goto _forcond_8($42)
led.c(l38:s129:k128:d0:s0)	 _forbreak_8($9) :
led.c(l39:s130:k129:d0:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
led.c(l39:s131:k130:d0:s0)		iTemp38 [k46 lr131:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l40:s132:k131:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l40:s134:k132:d1:s0)	 _forcond_9($45) :
led.c(l40:s135:k331:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l40:s136:k332:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l40:s137:k333:d1:s0)		iTemp39 [k47 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l40:s138:k134:d1:s0)		if iTemp39 [k47 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_9($10)
led.c(l40:s139:k334:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l40:s140:k335:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l40:s141:k336:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l40:s142:k141:d1:s0)		 goto _forcond_9($45)
led.c(l40:s143:k142:d0:s0)	 _forbreak_9($10) :
led.c(l41:s144:k143:d0:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
led.c(l41:s145:k144:d0:s0)		iTemp42 [k50 lr145:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l42:s146:k145:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l42:s148:k146:d1:s0)	 _forcond_10($48) :
led.c(l42:s149:k337:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l42:s150:k338:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l42:s151:k339:d1:s0)		iTemp43 [k51 lr151:152 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l42:s152:k148:d1:s0)		if iTemp43 [k51 lr151:152 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_10($11)
led.c(l42:s153:k340:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l42:s154:k341:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l42:s155:k342:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l42:s156:k155:d1:s0)		 goto _forcond_10($48)
led.c(l42:s157:k156:d0:s0)	 _forbreak_10($11) :
led.c(l43:s158:k157:d0:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
led.c(l43:s159:k158:d0:s0)		iTemp46 [k54 lr159:159 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l44:s160:k159:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l44:s162:k160:d1:s0)	 _forcond_11($51) :
led.c(l44:s163:k343:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l44:s164:k344:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l44:s165:k345:d1:s0)		iTemp47 [k55 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l44:s166:k162:d1:s0)		if iTemp47 [k55 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_11($12)
led.c(l44:s167:k346:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l44:s168:k347:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l44:s169:k348:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l44:s170:k169:d1:s0)		 goto _forcond_11($51)
led.c(l44:s171:k170:d0:s0)	 _forbreak_11($12) :
led.c(l45:s172:k171:d0:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
led.c(l45:s173:k172:d0:s0)		iTemp50 [k58 lr173:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l46:s174:k173:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l46:s176:k174:d1:s0)	 _forcond_12($54) :
led.c(l46:s177:k349:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s178:k350:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l46:s179:k351:d1:s0)		iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l46:s180:k176:d1:s0)		if iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_12($13)
led.c(l46:s181:k352:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s182:k353:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l46:s183:k354:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l46:s184:k183:d1:s0)		 goto _forcond_12($54)
led.c(l46:s185:k184:d0:s0)	 _forbreak_12($13) :
led.c(l47:s186:k185:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l47:s187:k186:d0:s0)		iTemp54 [k62 lr187:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l48:s188:k187:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l48:s190:k188:d1:s0)	 _forcond_13($57) :
led.c(l48:s191:k355:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s192:k356:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l48:s193:k357:d1:s0)		iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l48:s194:k190:d1:s0)		if iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_13($14)
led.c(l48:s195:k358:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s196:k359:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l48:s197:k360:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l48:s198:k197:d1:s0)		 goto _forcond_13($57)
led.c(l48:s199:k198:d0:s0)	 _forbreak_13($14) :
led.c(l49:s200:k199:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l49:s201:k200:d0:s0)		iTemp58 [k66 lr201:201 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l50:s202:k201:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l50:s204:k202:d1:s0)	 _forcond_14($60) :
led.c(l50:s205:k361:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s206:k362:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l50:s207:k363:d1:s0)		iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l50:s208:k204:d1:s0)		if iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_14($15)
led.c(l50:s209:k364:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s210:k365:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l50:s211:k366:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l50:s212:k211:d1:s0)		 goto _forcond_14($60)
led.c(l50:s213:k212:d0:s0)	 _forbreak_14($15) :
led.c(l51:s214:k213:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l51:s215:k214:d0:s0)		iTemp62 [k70 lr215:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l52:s216:k215:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l52:s218:k216:d1:s0)	 _forcond_15($63) :
led.c(l52:s219:k367:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s220:k368:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l52:s221:k369:d1:s0)		iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l52:s222:k218:d1:s0)		if iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _return($65)
led.c(l52:s223:k370:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s224:k371:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l52:s225:k372:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l52:s226:k225:d1:s0)		 goto _forcond_15($63)
led.c(l52:s227:k227:d0:s0)	 _return($65) :
led.c(l52:s228:k228:d0:s0)		eproc _sequencial [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}

----------------------------------------------------------------
Basic Block _forbreak_0 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 5 : bbnum = 4 1st iCode = 17 , last iCode = 20
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (19) }

local defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (18) (19) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (5) (7) (13) (14) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (19) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (18) }

----------------------------------------------------------------
led.c(l22:s17:k16:d0:s0)	 _forbreak_0($1) :
led.c(l23:s18:k17:d0:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
led.c(l23:s19:k18:d0:s0)		iTemp6 [k12 lr19:19 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l24:s20:k19:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l24:s22:k20:d1:s0)	 _forcond_1($21) :
led.c(l24:s23:k283:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l24:s24:k284:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l24:s25:k285:d1:s0)		iTemp7 [k13 lr25:26 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l24:s26:k22:d1:s0)		if iTemp7 [k13 lr25:26 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_1($2)
led.c(l24:s27:k286:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l24:s28:k287:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l24:s29:k288:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l24:s30:k29:d1:s0)		 goto _forcond_1($21)
led.c(l24:s31:k30:d0:s0)	 _forbreak_1($2) :
led.c(l25:s32:k31:d0:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
led.c(l25:s33:k32:d0:s0)		iTemp10 [k16 lr33:33 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l26:s34:k33:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l26:s36:k34:d1:s0)	 _forcond_2($24) :
led.c(l26:s37:k289:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l26:s38:k290:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l26:s39:k291:d1:s0)		iTemp11 [k17 lr39:40 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l26:s40:k36:d1:s0)		if iTemp11 [k17 lr39:40 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_2($3)
led.c(l26:s41:k292:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l26:s42:k293:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l26:s43:k294:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l26:s44:k43:d1:s0)		 goto _forcond_2($24)
led.c(l26:s45:k44:d0:s0)	 _forbreak_2($3) :
led.c(l27:s46:k45:d0:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
led.c(l27:s47:k46:d0:s0)		iTemp14 [k20 lr47:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l28:s48:k47:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l28:s50:k48:d1:s0)	 _forcond_3($27) :
led.c(l28:s51:k295:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l28:s52:k296:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l28:s53:k297:d1:s0)		iTemp15 [k21 lr53:54 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l28:s54:k50:d1:s0)		if iTemp15 [k21 lr53:54 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_3($4)
led.c(l28:s55:k298:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l28:s56:k299:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l28:s57:k300:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l28:s58:k57:d1:s0)		 goto _forcond_3($27)
led.c(l28:s59:k58:d0:s0)	 _forbreak_3($4) :
led.c(l29:s60:k59:d0:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
led.c(l29:s61:k60:d0:s0)		iTemp18 [k24 lr61:61 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l30:s62:k61:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l30:s64:k62:d1:s0)	 _forcond_4($30) :
led.c(l30:s65:k301:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l30:s66:k302:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l30:s67:k303:d1:s0)		iTemp19 [k25 lr67:68 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l30:s68:k64:d1:s0)		if iTemp19 [k25 lr67:68 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_4($5)
led.c(l30:s69:k304:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l30:s70:k305:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l30:s71:k306:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l30:s72:k71:d1:s0)		 goto _forcond_4($30)
led.c(l30:s73:k72:d0:s0)	 _forbreak_4($5) :
led.c(l31:s74:k73:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l31:s75:k74:d0:s0)		iTemp22 [k28 lr75:75 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l32:s76:k75:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l32:s78:k76:d1:s0)	 _forcond_5($33) :
led.c(l32:s79:k307:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l32:s80:k308:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l32:s81:k309:d1:s0)		iTemp23 [k29 lr81:82 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l32:s82:k78:d1:s0)		if iTemp23 [k29 lr81:82 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_5($6)
led.c(l32:s83:k310:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l32:s84:k311:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l32:s85:k312:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l32:s86:k85:d1:s0)		 goto _forcond_5($33)
led.c(l32:s87:k86:d0:s0)	 _forbreak_5($6) :
led.c(l33:s88:k87:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l33:s89:k88:d0:s0)		iTemp26 [k32 lr89:89 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l34:s90:k89:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l34:s92:k90:d1:s0)	 _forcond_6($36) :
led.c(l34:s93:k313:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l34:s94:k314:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l34:s95:k315:d1:s0)		iTemp27 [k33 lr95:96 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l34:s96:k92:d1:s0)		if iTemp27 [k33 lr95:96 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_6($7)
led.c(l34:s97:k316:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l34:s98:k317:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l34:s99:k318:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l34:s100:k99:d1:s0)		 goto _forcond_6($36)
led.c(l34:s101:k100:d0:s0)	 _forbreak_6($7) :
led.c(l35:s102:k101:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l35:s103:k102:d0:s0)		iTemp30 [k36 lr103:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l36:s104:k103:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l36:s106:k104:d1:s0)	 _forcond_7($39) :
led.c(l36:s107:k319:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l36:s108:k320:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l36:s109:k321:d1:s0)		iTemp31 [k37 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l36:s110:k106:d1:s0)		if iTemp31 [k37 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_7($8)
led.c(l36:s111:k322:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l36:s112:k323:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l36:s113:k324:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l36:s114:k113:d1:s0)		 goto _forcond_7($39)
led.c(l36:s115:k114:d0:s0)	 _forbreak_7($8) :
led.c(l37:s116:k115:d0:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
led.c(l37:s117:k116:d0:s0)		iTemp34 [k42 lr117:117 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l38:s118:k117:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l38:s120:k118:d1:s0)	 _forcond_8($42) :
led.c(l38:s121:k325:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l38:s122:k326:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l38:s123:k327:d1:s0)		iTemp35 [k43 lr123:124 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l38:s124:k120:d1:s0)		if iTemp35 [k43 lr123:124 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_8($9)
led.c(l38:s125:k328:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l38:s126:k329:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l38:s127:k330:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l38:s128:k127:d1:s0)		 goto _forcond_8($42)
led.c(l38:s129:k128:d0:s0)	 _forbreak_8($9) :
led.c(l39:s130:k129:d0:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
led.c(l39:s131:k130:d0:s0)		iTemp38 [k46 lr131:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l40:s132:k131:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l40:s134:k132:d1:s0)	 _forcond_9($45) :
led.c(l40:s135:k331:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l40:s136:k332:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l40:s137:k333:d1:s0)		iTemp39 [k47 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l40:s138:k134:d1:s0)		if iTemp39 [k47 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_9($10)
led.c(l40:s139:k334:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l40:s140:k335:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l40:s141:k336:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l40:s142:k141:d1:s0)		 goto _forcond_9($45)
led.c(l40:s143:k142:d0:s0)	 _forbreak_9($10) :
led.c(l41:s144:k143:d0:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
led.c(l41:s145:k144:d0:s0)		iTemp42 [k50 lr145:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l42:s146:k145:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l42:s148:k146:d1:s0)	 _forcond_10($48) :
led.c(l42:s149:k337:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l42:s150:k338:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l42:s151:k339:d1:s0)		iTemp43 [k51 lr151:152 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l42:s152:k148:d1:s0)		if iTemp43 [k51 lr151:152 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_10($11)
led.c(l42:s153:k340:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l42:s154:k341:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l42:s155:k342:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l42:s156:k155:d1:s0)		 goto _forcond_10($48)
led.c(l42:s157:k156:d0:s0)	 _forbreak_10($11) :
led.c(l43:s158:k157:d0:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
led.c(l43:s159:k158:d0:s0)		iTemp46 [k54 lr159:159 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l44:s160:k159:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l44:s162:k160:d1:s0)	 _forcond_11($51) :
led.c(l44:s163:k343:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l44:s164:k344:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l44:s165:k345:d1:s0)		iTemp47 [k55 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l44:s166:k162:d1:s0)		if iTemp47 [k55 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_11($12)
led.c(l44:s167:k346:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l44:s168:k347:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l44:s169:k348:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l44:s170:k169:d1:s0)		 goto _forcond_11($51)
led.c(l44:s171:k170:d0:s0)	 _forbreak_11($12) :
led.c(l45:s172:k171:d0:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
led.c(l45:s173:k172:d0:s0)		iTemp50 [k58 lr173:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l46:s174:k173:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l46:s176:k174:d1:s0)	 _forcond_12($54) :
led.c(l46:s177:k349:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s178:k350:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l46:s179:k351:d1:s0)		iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l46:s180:k176:d1:s0)		if iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_12($13)
led.c(l46:s181:k352:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s182:k353:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l46:s183:k354:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l46:s184:k183:d1:s0)		 goto _forcond_12($54)
led.c(l46:s185:k184:d0:s0)	 _forbreak_12($13) :
led.c(l47:s186:k185:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l47:s187:k186:d0:s0)		iTemp54 [k62 lr187:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l48:s188:k187:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l48:s190:k188:d1:s0)	 _forcond_13($57) :
led.c(l48:s191:k355:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s192:k356:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l48:s193:k357:d1:s0)		iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l48:s194:k190:d1:s0)		if iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_13($14)
led.c(l48:s195:k358:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s196:k359:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l48:s197:k360:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l48:s198:k197:d1:s0)		 goto _forcond_13($57)
led.c(l48:s199:k198:d0:s0)	 _forbreak_13($14) :
led.c(l49:s200:k199:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l49:s201:k200:d0:s0)		iTemp58 [k66 lr201:201 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l50:s202:k201:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l50:s204:k202:d1:s0)	 _forcond_14($60) :
led.c(l50:s205:k361:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s206:k362:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l50:s207:k363:d1:s0)		iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l50:s208:k204:d1:s0)		if iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_14($15)
led.c(l50:s209:k364:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s210:k365:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l50:s211:k366:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l50:s212:k211:d1:s0)		 goto _forcond_14($60)
led.c(l50:s213:k212:d0:s0)	 _forbreak_14($15) :
led.c(l51:s214:k213:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l51:s215:k214:d0:s0)		iTemp62 [k70 lr215:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l52:s216:k215:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l52:s218:k216:d1:s0)	 _forcond_15($63) :
led.c(l52:s219:k367:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s220:k368:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l52:s221:k369:d1:s0)		iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l52:s222:k218:d1:s0)		if iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _return($65)
led.c(l52:s223:k370:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s224:k371:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l52:s225:k372:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l52:s226:k225:d1:s0)		 goto _forcond_15($63)
led.c(l52:s227:k227:d0:s0)	 _return($65) :
led.c(l52:s228:k228:d0:s0)		eproc _sequencial [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}

----------------------------------------------------------------
Basic Block preHeaderLbl33 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 6 : bbnum = 5 1st iCode = 21 , last iCode = 21
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { }

local defines bitVector :
pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (19) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (19) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { }

----------------------------------------------------------------
led.c(l24:s21:k262:d0:s0)	 preHeaderLbl33($134) :
led.c(l24:s22:k20:d1:s0)	 _forcond_1($21) :
led.c(l24:s23:k283:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l24:s24:k284:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l24:s25:k285:d1:s0)		iTemp7 [k13 lr25:26 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l24:s26:k22:d1:s0)		if iTemp7 [k13 lr25:26 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_1($2)
led.c(l24:s27:k286:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l24:s28:k287:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l24:s29:k288:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l24:s30:k29:d1:s0)		 goto _forcond_1($21)
led.c(l24:s31:k30:d0:s0)	 _forbreak_1($2) :
led.c(l25:s32:k31:d0:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
led.c(l25:s33:k32:d0:s0)		iTemp10 [k16 lr33:33 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l26:s34:k33:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l26:s36:k34:d1:s0)	 _forcond_2($24) :
led.c(l26:s37:k289:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l26:s38:k290:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l26:s39:k291:d1:s0)		iTemp11 [k17 lr39:40 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l26:s40:k36:d1:s0)		if iTemp11 [k17 lr39:40 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_2($3)
led.c(l26:s41:k292:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l26:s42:k293:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l26:s43:k294:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l26:s44:k43:d1:s0)		 goto _forcond_2($24)
led.c(l26:s45:k44:d0:s0)	 _forbreak_2($3) :
led.c(l27:s46:k45:d0:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
led.c(l27:s47:k46:d0:s0)		iTemp14 [k20 lr47:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l28:s48:k47:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l28:s50:k48:d1:s0)	 _forcond_3($27) :
led.c(l28:s51:k295:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l28:s52:k296:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l28:s53:k297:d1:s0)		iTemp15 [k21 lr53:54 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l28:s54:k50:d1:s0)		if iTemp15 [k21 lr53:54 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_3($4)
led.c(l28:s55:k298:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l28:s56:k299:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l28:s57:k300:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l28:s58:k57:d1:s0)		 goto _forcond_3($27)
led.c(l28:s59:k58:d0:s0)	 _forbreak_3($4) :
led.c(l29:s60:k59:d0:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
led.c(l29:s61:k60:d0:s0)		iTemp18 [k24 lr61:61 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l30:s62:k61:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l30:s64:k62:d1:s0)	 _forcond_4($30) :
led.c(l30:s65:k301:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l30:s66:k302:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l30:s67:k303:d1:s0)		iTemp19 [k25 lr67:68 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l30:s68:k64:d1:s0)		if iTemp19 [k25 lr67:68 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_4($5)
led.c(l30:s69:k304:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l30:s70:k305:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l30:s71:k306:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l30:s72:k71:d1:s0)		 goto _forcond_4($30)
led.c(l30:s73:k72:d0:s0)	 _forbreak_4($5) :
led.c(l31:s74:k73:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l31:s75:k74:d0:s0)		iTemp22 [k28 lr75:75 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l32:s76:k75:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l32:s78:k76:d1:s0)	 _forcond_5($33) :
led.c(l32:s79:k307:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l32:s80:k308:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l32:s81:k309:d1:s0)		iTemp23 [k29 lr81:82 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l32:s82:k78:d1:s0)		if iTemp23 [k29 lr81:82 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_5($6)
led.c(l32:s83:k310:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l32:s84:k311:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l32:s85:k312:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l32:s86:k85:d1:s0)		 goto _forcond_5($33)
led.c(l32:s87:k86:d0:s0)	 _forbreak_5($6) :
led.c(l33:s88:k87:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l33:s89:k88:d0:s0)		iTemp26 [k32 lr89:89 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l34:s90:k89:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l34:s92:k90:d1:s0)	 _forcond_6($36) :
led.c(l34:s93:k313:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l34:s94:k314:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l34:s95:k315:d1:s0)		iTemp27 [k33 lr95:96 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l34:s96:k92:d1:s0)		if iTemp27 [k33 lr95:96 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_6($7)
led.c(l34:s97:k316:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l34:s98:k317:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l34:s99:k318:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l34:s100:k99:d1:s0)		 goto _forcond_6($36)
led.c(l34:s101:k100:d0:s0)	 _forbreak_6($7) :
led.c(l35:s102:k101:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l35:s103:k102:d0:s0)		iTemp30 [k36 lr103:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l36:s104:k103:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l36:s106:k104:d1:s0)	 _forcond_7($39) :
led.c(l36:s107:k319:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l36:s108:k320:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l36:s109:k321:d1:s0)		iTemp31 [k37 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l36:s110:k106:d1:s0)		if iTemp31 [k37 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_7($8)
led.c(l36:s111:k322:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l36:s112:k323:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l36:s113:k324:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l36:s114:k113:d1:s0)		 goto _forcond_7($39)
led.c(l36:s115:k114:d0:s0)	 _forbreak_7($8) :
led.c(l37:s116:k115:d0:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
led.c(l37:s117:k116:d0:s0)		iTemp34 [k42 lr117:117 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l38:s118:k117:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l38:s120:k118:d1:s0)	 _forcond_8($42) :
led.c(l38:s121:k325:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l38:s122:k326:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l38:s123:k327:d1:s0)		iTemp35 [k43 lr123:124 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l38:s124:k120:d1:s0)		if iTemp35 [k43 lr123:124 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_8($9)
led.c(l38:s125:k328:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l38:s126:k329:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l38:s127:k330:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l38:s128:k127:d1:s0)		 goto _forcond_8($42)
led.c(l38:s129:k128:d0:s0)	 _forbreak_8($9) :
led.c(l39:s130:k129:d0:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
led.c(l39:s131:k130:d0:s0)		iTemp38 [k46 lr131:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l40:s132:k131:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l40:s134:k132:d1:s0)	 _forcond_9($45) :
led.c(l40:s135:k331:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l40:s136:k332:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l40:s137:k333:d1:s0)		iTemp39 [k47 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l40:s138:k134:d1:s0)		if iTemp39 [k47 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_9($10)
led.c(l40:s139:k334:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l40:s140:k335:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l40:s141:k336:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l40:s142:k141:d1:s0)		 goto _forcond_9($45)
led.c(l40:s143:k142:d0:s0)	 _forbreak_9($10) :
led.c(l41:s144:k143:d0:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
led.c(l41:s145:k144:d0:s0)		iTemp42 [k50 lr145:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l42:s146:k145:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l42:s148:k146:d1:s0)	 _forcond_10($48) :
led.c(l42:s149:k337:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l42:s150:k338:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l42:s151:k339:d1:s0)		iTemp43 [k51 lr151:152 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l42:s152:k148:d1:s0)		if iTemp43 [k51 lr151:152 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_10($11)
led.c(l42:s153:k340:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l42:s154:k341:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l42:s155:k342:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l42:s156:k155:d1:s0)		 goto _forcond_10($48)
led.c(l42:s157:k156:d0:s0)	 _forbreak_10($11) :
led.c(l43:s158:k157:d0:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
led.c(l43:s159:k158:d0:s0)		iTemp46 [k54 lr159:159 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l44:s160:k159:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l44:s162:k160:d1:s0)	 _forcond_11($51) :
led.c(l44:s163:k343:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l44:s164:k344:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l44:s165:k345:d1:s0)		iTemp47 [k55 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l44:s166:k162:d1:s0)		if iTemp47 [k55 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_11($12)
led.c(l44:s167:k346:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l44:s168:k347:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l44:s169:k348:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l44:s170:k169:d1:s0)		 goto _forcond_11($51)
led.c(l44:s171:k170:d0:s0)	 _forbreak_11($12) :
led.c(l45:s172:k171:d0:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
led.c(l45:s173:k172:d0:s0)		iTemp50 [k58 lr173:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l46:s174:k173:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l46:s176:k174:d1:s0)	 _forcond_12($54) :
led.c(l46:s177:k349:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s178:k350:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l46:s179:k351:d1:s0)		iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l46:s180:k176:d1:s0)		if iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_12($13)
led.c(l46:s181:k352:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s182:k353:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l46:s183:k354:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l46:s184:k183:d1:s0)		 goto _forcond_12($54)
led.c(l46:s185:k184:d0:s0)	 _forbreak_12($13) :
led.c(l47:s186:k185:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l47:s187:k186:d0:s0)		iTemp54 [k62 lr187:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l48:s188:k187:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l48:s190:k188:d1:s0)	 _forcond_13($57) :
led.c(l48:s191:k355:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s192:k356:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l48:s193:k357:d1:s0)		iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l48:s194:k190:d1:s0)		if iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_13($14)
led.c(l48:s195:k358:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s196:k359:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l48:s197:k360:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l48:s198:k197:d1:s0)		 goto _forcond_13($57)
led.c(l48:s199:k198:d0:s0)	 _forbreak_13($14) :
led.c(l49:s200:k199:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l49:s201:k200:d0:s0)		iTemp58 [k66 lr201:201 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l50:s202:k201:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l50:s204:k202:d1:s0)	 _forcond_14($60) :
led.c(l50:s205:k361:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s206:k362:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l50:s207:k363:d1:s0)		iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l50:s208:k204:d1:s0)		if iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_14($15)
led.c(l50:s209:k364:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s210:k365:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l50:s211:k366:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l50:s212:k211:d1:s0)		 goto _forcond_14($60)
led.c(l50:s213:k212:d0:s0)	 _forbreak_14($15) :
led.c(l51:s214:k213:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l51:s215:k214:d0:s0)		iTemp62 [k70 lr215:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l52:s216:k215:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l52:s218:k216:d1:s0)	 _forcond_15($63) :
led.c(l52:s219:k367:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s220:k368:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l52:s221:k369:d1:s0)		iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l52:s222:k218:d1:s0)		if iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _return($65)
led.c(l52:s223:k370:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s224:k371:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l52:s225:k372:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l52:s226:k225:d1:s0)		 goto _forcond_15($63)
led.c(l52:s227:k227:d0:s0)	 _return($65) :
led.c(l52:s228:k228:d0:s0)		eproc _sequencial [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}

----------------------------------------------------------------
Basic Block _forcond_1 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 7 : bbnum = 6 1st iCode = 22 , last iCode = 26
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (21) }

local defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (21) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (19) (21) (27) (28) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (19) (21) (27) (28) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (19) (21) (28) }

----------------------------------------------------------------
led.c(l24:s22:k20:d1:s0)	 _forcond_1($21) :
led.c(l24:s23:k283:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l24:s24:k284:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l24:s25:k285:d1:s0)		iTemp7 [k13 lr25:26 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l24:s26:k22:d1:s0)		if iTemp7 [k13 lr25:26 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_1($2)
led.c(l24:s27:k286:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l24:s28:k287:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l24:s29:k288:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l24:s30:k29:d1:s0)		 goto _forcond_1($21)
led.c(l24:s31:k30:d0:s0)	 _forbreak_1($2) :
led.c(l25:s32:k31:d0:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
led.c(l25:s33:k32:d0:s0)		iTemp10 [k16 lr33:33 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l26:s34:k33:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l26:s36:k34:d1:s0)	 _forcond_2($24) :
led.c(l26:s37:k289:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l26:s38:k290:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l26:s39:k291:d1:s0)		iTemp11 [k17 lr39:40 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l26:s40:k36:d1:s0)		if iTemp11 [k17 lr39:40 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_2($3)
led.c(l26:s41:k292:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l26:s42:k293:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l26:s43:k294:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l26:s44:k43:d1:s0)		 goto _forcond_2($24)
led.c(l26:s45:k44:d0:s0)	 _forbreak_2($3) :
led.c(l27:s46:k45:d0:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
led.c(l27:s47:k46:d0:s0)		iTemp14 [k20 lr47:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l28:s48:k47:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l28:s50:k48:d1:s0)	 _forcond_3($27) :
led.c(l28:s51:k295:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l28:s52:k296:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l28:s53:k297:d1:s0)		iTemp15 [k21 lr53:54 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l28:s54:k50:d1:s0)		if iTemp15 [k21 lr53:54 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_3($4)
led.c(l28:s55:k298:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l28:s56:k299:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l28:s57:k300:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l28:s58:k57:d1:s0)		 goto _forcond_3($27)
led.c(l28:s59:k58:d0:s0)	 _forbreak_3($4) :
led.c(l29:s60:k59:d0:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
led.c(l29:s61:k60:d0:s0)		iTemp18 [k24 lr61:61 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l30:s62:k61:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l30:s64:k62:d1:s0)	 _forcond_4($30) :
led.c(l30:s65:k301:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l30:s66:k302:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l30:s67:k303:d1:s0)		iTemp19 [k25 lr67:68 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l30:s68:k64:d1:s0)		if iTemp19 [k25 lr67:68 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_4($5)
led.c(l30:s69:k304:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l30:s70:k305:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l30:s71:k306:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l30:s72:k71:d1:s0)		 goto _forcond_4($30)
led.c(l30:s73:k72:d0:s0)	 _forbreak_4($5) :
led.c(l31:s74:k73:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l31:s75:k74:d0:s0)		iTemp22 [k28 lr75:75 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l32:s76:k75:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l32:s78:k76:d1:s0)	 _forcond_5($33) :
led.c(l32:s79:k307:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l32:s80:k308:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l32:s81:k309:d1:s0)		iTemp23 [k29 lr81:82 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l32:s82:k78:d1:s0)		if iTemp23 [k29 lr81:82 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_5($6)
led.c(l32:s83:k310:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l32:s84:k311:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l32:s85:k312:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l32:s86:k85:d1:s0)		 goto _forcond_5($33)
led.c(l32:s87:k86:d0:s0)	 _forbreak_5($6) :
led.c(l33:s88:k87:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l33:s89:k88:d0:s0)		iTemp26 [k32 lr89:89 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l34:s90:k89:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l34:s92:k90:d1:s0)	 _forcond_6($36) :
led.c(l34:s93:k313:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l34:s94:k314:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l34:s95:k315:d1:s0)		iTemp27 [k33 lr95:96 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l34:s96:k92:d1:s0)		if iTemp27 [k33 lr95:96 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_6($7)
led.c(l34:s97:k316:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l34:s98:k317:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l34:s99:k318:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l34:s100:k99:d1:s0)		 goto _forcond_6($36)
led.c(l34:s101:k100:d0:s0)	 _forbreak_6($7) :
led.c(l35:s102:k101:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l35:s103:k102:d0:s0)		iTemp30 [k36 lr103:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l36:s104:k103:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l36:s106:k104:d1:s0)	 _forcond_7($39) :
led.c(l36:s107:k319:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l36:s108:k320:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l36:s109:k321:d1:s0)		iTemp31 [k37 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l36:s110:k106:d1:s0)		if iTemp31 [k37 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_7($8)
led.c(l36:s111:k322:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l36:s112:k323:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l36:s113:k324:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l36:s114:k113:d1:s0)		 goto _forcond_7($39)
led.c(l36:s115:k114:d0:s0)	 _forbreak_7($8) :
led.c(l37:s116:k115:d0:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
led.c(l37:s117:k116:d0:s0)		iTemp34 [k42 lr117:117 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l38:s118:k117:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l38:s120:k118:d1:s0)	 _forcond_8($42) :
led.c(l38:s121:k325:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l38:s122:k326:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l38:s123:k327:d1:s0)		iTemp35 [k43 lr123:124 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l38:s124:k120:d1:s0)		if iTemp35 [k43 lr123:124 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_8($9)
led.c(l38:s125:k328:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l38:s126:k329:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l38:s127:k330:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l38:s128:k127:d1:s0)		 goto _forcond_8($42)
led.c(l38:s129:k128:d0:s0)	 _forbreak_8($9) :
led.c(l39:s130:k129:d0:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
led.c(l39:s131:k130:d0:s0)		iTemp38 [k46 lr131:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l40:s132:k131:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l40:s134:k132:d1:s0)	 _forcond_9($45) :
led.c(l40:s135:k331:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l40:s136:k332:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l40:s137:k333:d1:s0)		iTemp39 [k47 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l40:s138:k134:d1:s0)		if iTemp39 [k47 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_9($10)
led.c(l40:s139:k334:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l40:s140:k335:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l40:s141:k336:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l40:s142:k141:d1:s0)		 goto _forcond_9($45)
led.c(l40:s143:k142:d0:s0)	 _forbreak_9($10) :
led.c(l41:s144:k143:d0:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
led.c(l41:s145:k144:d0:s0)		iTemp42 [k50 lr145:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l42:s146:k145:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l42:s148:k146:d1:s0)	 _forcond_10($48) :
led.c(l42:s149:k337:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l42:s150:k338:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l42:s151:k339:d1:s0)		iTemp43 [k51 lr151:152 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l42:s152:k148:d1:s0)		if iTemp43 [k51 lr151:152 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_10($11)
led.c(l42:s153:k340:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l42:s154:k341:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l42:s155:k342:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l42:s156:k155:d1:s0)		 goto _forcond_10($48)
led.c(l42:s157:k156:d0:s0)	 _forbreak_10($11) :
led.c(l43:s158:k157:d0:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
led.c(l43:s159:k158:d0:s0)		iTemp46 [k54 lr159:159 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l44:s160:k159:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l44:s162:k160:d1:s0)	 _forcond_11($51) :
led.c(l44:s163:k343:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l44:s164:k344:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l44:s165:k345:d1:s0)		iTemp47 [k55 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l44:s166:k162:d1:s0)		if iTemp47 [k55 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_11($12)
led.c(l44:s167:k346:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l44:s168:k347:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l44:s169:k348:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l44:s170:k169:d1:s0)		 goto _forcond_11($51)
led.c(l44:s171:k170:d0:s0)	 _forbreak_11($12) :
led.c(l45:s172:k171:d0:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
led.c(l45:s173:k172:d0:s0)		iTemp50 [k58 lr173:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l46:s174:k173:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l46:s176:k174:d1:s0)	 _forcond_12($54) :
led.c(l46:s177:k349:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s178:k350:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l46:s179:k351:d1:s0)		iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l46:s180:k176:d1:s0)		if iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_12($13)
led.c(l46:s181:k352:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s182:k353:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l46:s183:k354:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l46:s184:k183:d1:s0)		 goto _forcond_12($54)
led.c(l46:s185:k184:d0:s0)	 _forbreak_12($13) :
led.c(l47:s186:k185:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l47:s187:k186:d0:s0)		iTemp54 [k62 lr187:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l48:s188:k187:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l48:s190:k188:d1:s0)	 _forcond_13($57) :
led.c(l48:s191:k355:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s192:k356:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l48:s193:k357:d1:s0)		iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l48:s194:k190:d1:s0)		if iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_13($14)
led.c(l48:s195:k358:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s196:k359:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l48:s197:k360:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l48:s198:k197:d1:s0)		 goto _forcond_13($57)
led.c(l48:s199:k198:d0:s0)	 _forbreak_13($14) :
led.c(l49:s200:k199:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l49:s201:k200:d0:s0)		iTemp58 [k66 lr201:201 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l50:s202:k201:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l50:s204:k202:d1:s0)	 _forcond_14($60) :
led.c(l50:s205:k361:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s206:k362:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l50:s207:k363:d1:s0)		iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l50:s208:k204:d1:s0)		if iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_14($15)
led.c(l50:s209:k364:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s210:k365:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l50:s211:k366:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l50:s212:k211:d1:s0)		 goto _forcond_14($60)
led.c(l50:s213:k212:d0:s0)	 _forbreak_14($15) :
led.c(l51:s214:k213:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l51:s215:k214:d0:s0)		iTemp62 [k70 lr215:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l52:s216:k215:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l52:s218:k216:d1:s0)	 _forcond_15($63) :
led.c(l52:s219:k367:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s220:k368:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l52:s221:k369:d1:s0)		iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l52:s222:k218:d1:s0)		if iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _return($65)
led.c(l52:s223:k370:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s224:k371:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l52:s225:k372:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l52:s226:k225:d1:s0)		 goto _forcond_15($63)
led.c(l52:s227:k227:d0:s0)	 _return($65) :
led.c(l52:s228:k228:d0:s0)		eproc _sequencial [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}

----------------------------------------------------------------
Basic Block _eBBlock33 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 8 : bbnum = 7 1st iCode = 27 , last iCode = 30
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (27) (28) }

local defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (27) (28) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (19) (21) (27) (28) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (28) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (19) (27) (28) }

----------------------------------------------------------------
led.c(l24:s27:k286:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l24:s28:k287:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l24:s29:k288:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l24:s30:k29:d1:s0)		 goto _forcond_1($21)
led.c(l24:s31:k30:d0:s0)	 _forbreak_1($2) :
led.c(l25:s32:k31:d0:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
led.c(l25:s33:k32:d0:s0)		iTemp10 [k16 lr33:33 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l26:s34:k33:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l26:s36:k34:d1:s0)	 _forcond_2($24) :
led.c(l26:s37:k289:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l26:s38:k290:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l26:s39:k291:d1:s0)		iTemp11 [k17 lr39:40 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l26:s40:k36:d1:s0)		if iTemp11 [k17 lr39:40 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_2($3)
led.c(l26:s41:k292:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l26:s42:k293:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l26:s43:k294:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l26:s44:k43:d1:s0)		 goto _forcond_2($24)
led.c(l26:s45:k44:d0:s0)	 _forbreak_2($3) :
led.c(l27:s46:k45:d0:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
led.c(l27:s47:k46:d0:s0)		iTemp14 [k20 lr47:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l28:s48:k47:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l28:s50:k48:d1:s0)	 _forcond_3($27) :
led.c(l28:s51:k295:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l28:s52:k296:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l28:s53:k297:d1:s0)		iTemp15 [k21 lr53:54 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l28:s54:k50:d1:s0)		if iTemp15 [k21 lr53:54 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_3($4)
led.c(l28:s55:k298:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l28:s56:k299:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l28:s57:k300:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l28:s58:k57:d1:s0)		 goto _forcond_3($27)
led.c(l28:s59:k58:d0:s0)	 _forbreak_3($4) :
led.c(l29:s60:k59:d0:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
led.c(l29:s61:k60:d0:s0)		iTemp18 [k24 lr61:61 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l30:s62:k61:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l30:s64:k62:d1:s0)	 _forcond_4($30) :
led.c(l30:s65:k301:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l30:s66:k302:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l30:s67:k303:d1:s0)		iTemp19 [k25 lr67:68 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l30:s68:k64:d1:s0)		if iTemp19 [k25 lr67:68 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_4($5)
led.c(l30:s69:k304:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l30:s70:k305:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l30:s71:k306:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l30:s72:k71:d1:s0)		 goto _forcond_4($30)
led.c(l30:s73:k72:d0:s0)	 _forbreak_4($5) :
led.c(l31:s74:k73:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l31:s75:k74:d0:s0)		iTemp22 [k28 lr75:75 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l32:s76:k75:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l32:s78:k76:d1:s0)	 _forcond_5($33) :
led.c(l32:s79:k307:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l32:s80:k308:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l32:s81:k309:d1:s0)		iTemp23 [k29 lr81:82 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l32:s82:k78:d1:s0)		if iTemp23 [k29 lr81:82 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_5($6)
led.c(l32:s83:k310:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l32:s84:k311:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l32:s85:k312:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l32:s86:k85:d1:s0)		 goto _forcond_5($33)
led.c(l32:s87:k86:d0:s0)	 _forbreak_5($6) :
led.c(l33:s88:k87:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l33:s89:k88:d0:s0)		iTemp26 [k32 lr89:89 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l34:s90:k89:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l34:s92:k90:d1:s0)	 _forcond_6($36) :
led.c(l34:s93:k313:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l34:s94:k314:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l34:s95:k315:d1:s0)		iTemp27 [k33 lr95:96 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l34:s96:k92:d1:s0)		if iTemp27 [k33 lr95:96 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_6($7)
led.c(l34:s97:k316:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l34:s98:k317:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l34:s99:k318:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l34:s100:k99:d1:s0)		 goto _forcond_6($36)
led.c(l34:s101:k100:d0:s0)	 _forbreak_6($7) :
led.c(l35:s102:k101:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l35:s103:k102:d0:s0)		iTemp30 [k36 lr103:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l36:s104:k103:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l36:s106:k104:d1:s0)	 _forcond_7($39) :
led.c(l36:s107:k319:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l36:s108:k320:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l36:s109:k321:d1:s0)		iTemp31 [k37 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l36:s110:k106:d1:s0)		if iTemp31 [k37 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_7($8)
led.c(l36:s111:k322:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l36:s112:k323:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l36:s113:k324:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l36:s114:k113:d1:s0)		 goto _forcond_7($39)
led.c(l36:s115:k114:d0:s0)	 _forbreak_7($8) :
led.c(l37:s116:k115:d0:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
led.c(l37:s117:k116:d0:s0)		iTemp34 [k42 lr117:117 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l38:s118:k117:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l38:s120:k118:d1:s0)	 _forcond_8($42) :
led.c(l38:s121:k325:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l38:s122:k326:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l38:s123:k327:d1:s0)		iTemp35 [k43 lr123:124 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l38:s124:k120:d1:s0)		if iTemp35 [k43 lr123:124 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_8($9)
led.c(l38:s125:k328:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l38:s126:k329:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l38:s127:k330:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l38:s128:k127:d1:s0)		 goto _forcond_8($42)
led.c(l38:s129:k128:d0:s0)	 _forbreak_8($9) :
led.c(l39:s130:k129:d0:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
led.c(l39:s131:k130:d0:s0)		iTemp38 [k46 lr131:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l40:s132:k131:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l40:s134:k132:d1:s0)	 _forcond_9($45) :
led.c(l40:s135:k331:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l40:s136:k332:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l40:s137:k333:d1:s0)		iTemp39 [k47 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l40:s138:k134:d1:s0)		if iTemp39 [k47 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_9($10)
led.c(l40:s139:k334:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l40:s140:k335:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l40:s141:k336:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l40:s142:k141:d1:s0)		 goto _forcond_9($45)
led.c(l40:s143:k142:d0:s0)	 _forbreak_9($10) :
led.c(l41:s144:k143:d0:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
led.c(l41:s145:k144:d0:s0)		iTemp42 [k50 lr145:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l42:s146:k145:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l42:s148:k146:d1:s0)	 _forcond_10($48) :
led.c(l42:s149:k337:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l42:s150:k338:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l42:s151:k339:d1:s0)		iTemp43 [k51 lr151:152 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l42:s152:k148:d1:s0)		if iTemp43 [k51 lr151:152 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_10($11)
led.c(l42:s153:k340:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l42:s154:k341:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l42:s155:k342:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l42:s156:k155:d1:s0)		 goto _forcond_10($48)
led.c(l42:s157:k156:d0:s0)	 _forbreak_10($11) :
led.c(l43:s158:k157:d0:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
led.c(l43:s159:k158:d0:s0)		iTemp46 [k54 lr159:159 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l44:s160:k159:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l44:s162:k160:d1:s0)	 _forcond_11($51) :
led.c(l44:s163:k343:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l44:s164:k344:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l44:s165:k345:d1:s0)		iTemp47 [k55 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l44:s166:k162:d1:s0)		if iTemp47 [k55 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_11($12)
led.c(l44:s167:k346:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l44:s168:k347:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l44:s169:k348:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l44:s170:k169:d1:s0)		 goto _forcond_11($51)
led.c(l44:s171:k170:d0:s0)	 _forbreak_11($12) :
led.c(l45:s172:k171:d0:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
led.c(l45:s173:k172:d0:s0)		iTemp50 [k58 lr173:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l46:s174:k173:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l46:s176:k174:d1:s0)	 _forcond_12($54) :
led.c(l46:s177:k349:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s178:k350:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l46:s179:k351:d1:s0)		iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l46:s180:k176:d1:s0)		if iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_12($13)
led.c(l46:s181:k352:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s182:k353:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l46:s183:k354:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l46:s184:k183:d1:s0)		 goto _forcond_12($54)
led.c(l46:s185:k184:d0:s0)	 _forbreak_12($13) :
led.c(l47:s186:k185:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l47:s187:k186:d0:s0)		iTemp54 [k62 lr187:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l48:s188:k187:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l48:s190:k188:d1:s0)	 _forcond_13($57) :
led.c(l48:s191:k355:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s192:k356:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l48:s193:k357:d1:s0)		iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l48:s194:k190:d1:s0)		if iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_13($14)
led.c(l48:s195:k358:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s196:k359:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l48:s197:k360:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l48:s198:k197:d1:s0)		 goto _forcond_13($57)
led.c(l48:s199:k198:d0:s0)	 _forbreak_13($14) :
led.c(l49:s200:k199:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l49:s201:k200:d0:s0)		iTemp58 [k66 lr201:201 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l50:s202:k201:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l50:s204:k202:d1:s0)	 _forcond_14($60) :
led.c(l50:s205:k361:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s206:k362:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l50:s207:k363:d1:s0)		iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l50:s208:k204:d1:s0)		if iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_14($15)
led.c(l50:s209:k364:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s210:k365:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l50:s211:k366:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l50:s212:k211:d1:s0)		 goto _forcond_14($60)
led.c(l50:s213:k212:d0:s0)	 _forbreak_14($15) :
led.c(l51:s214:k213:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l51:s215:k214:d0:s0)		iTemp62 [k70 lr215:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l52:s216:k215:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l52:s218:k216:d1:s0)	 _forcond_15($63) :
led.c(l52:s219:k367:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s220:k368:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l52:s221:k369:d1:s0)		iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l52:s222:k218:d1:s0)		if iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _return($65)
led.c(l52:s223:k370:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s224:k371:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l52:s225:k372:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l52:s226:k225:d1:s0)		 goto _forcond_15($63)
led.c(l52:s227:k227:d0:s0)	 _return($65) :
led.c(l52:s228:k228:d0:s0)		eproc _sequencial [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}

----------------------------------------------------------------
Basic Block _forbreak_1 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 9 : bbnum = 8 1st iCode = 31 , last iCode = 34
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (33) }

local defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (32) (33) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (19) (21) (27) (28) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (33) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (32) }

----------------------------------------------------------------
led.c(l24:s31:k30:d0:s0)	 _forbreak_1($2) :
led.c(l25:s32:k31:d0:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
led.c(l25:s33:k32:d0:s0)		iTemp10 [k16 lr33:33 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l26:s34:k33:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l26:s36:k34:d1:s0)	 _forcond_2($24) :
led.c(l26:s37:k289:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l26:s38:k290:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l26:s39:k291:d1:s0)		iTemp11 [k17 lr39:40 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l26:s40:k36:d1:s0)		if iTemp11 [k17 lr39:40 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_2($3)
led.c(l26:s41:k292:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l26:s42:k293:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l26:s43:k294:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l26:s44:k43:d1:s0)		 goto _forcond_2($24)
led.c(l26:s45:k44:d0:s0)	 _forbreak_2($3) :
led.c(l27:s46:k45:d0:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
led.c(l27:s47:k46:d0:s0)		iTemp14 [k20 lr47:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l28:s48:k47:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l28:s50:k48:d1:s0)	 _forcond_3($27) :
led.c(l28:s51:k295:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l28:s52:k296:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l28:s53:k297:d1:s0)		iTemp15 [k21 lr53:54 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l28:s54:k50:d1:s0)		if iTemp15 [k21 lr53:54 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_3($4)
led.c(l28:s55:k298:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l28:s56:k299:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l28:s57:k300:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l28:s58:k57:d1:s0)		 goto _forcond_3($27)
led.c(l28:s59:k58:d0:s0)	 _forbreak_3($4) :
led.c(l29:s60:k59:d0:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
led.c(l29:s61:k60:d0:s0)		iTemp18 [k24 lr61:61 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l30:s62:k61:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l30:s64:k62:d1:s0)	 _forcond_4($30) :
led.c(l30:s65:k301:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l30:s66:k302:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l30:s67:k303:d1:s0)		iTemp19 [k25 lr67:68 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l30:s68:k64:d1:s0)		if iTemp19 [k25 lr67:68 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_4($5)
led.c(l30:s69:k304:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l30:s70:k305:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l30:s71:k306:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l30:s72:k71:d1:s0)		 goto _forcond_4($30)
led.c(l30:s73:k72:d0:s0)	 _forbreak_4($5) :
led.c(l31:s74:k73:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l31:s75:k74:d0:s0)		iTemp22 [k28 lr75:75 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l32:s76:k75:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l32:s78:k76:d1:s0)	 _forcond_5($33) :
led.c(l32:s79:k307:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l32:s80:k308:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l32:s81:k309:d1:s0)		iTemp23 [k29 lr81:82 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l32:s82:k78:d1:s0)		if iTemp23 [k29 lr81:82 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_5($6)
led.c(l32:s83:k310:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l32:s84:k311:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l32:s85:k312:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l32:s86:k85:d1:s0)		 goto _forcond_5($33)
led.c(l32:s87:k86:d0:s0)	 _forbreak_5($6) :
led.c(l33:s88:k87:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l33:s89:k88:d0:s0)		iTemp26 [k32 lr89:89 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l34:s90:k89:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l34:s92:k90:d1:s0)	 _forcond_6($36) :
led.c(l34:s93:k313:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l34:s94:k314:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l34:s95:k315:d1:s0)		iTemp27 [k33 lr95:96 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l34:s96:k92:d1:s0)		if iTemp27 [k33 lr95:96 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_6($7)
led.c(l34:s97:k316:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l34:s98:k317:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l34:s99:k318:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l34:s100:k99:d1:s0)		 goto _forcond_6($36)
led.c(l34:s101:k100:d0:s0)	 _forbreak_6($7) :
led.c(l35:s102:k101:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l35:s103:k102:d0:s0)		iTemp30 [k36 lr103:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l36:s104:k103:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l36:s106:k104:d1:s0)	 _forcond_7($39) :
led.c(l36:s107:k319:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l36:s108:k320:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l36:s109:k321:d1:s0)		iTemp31 [k37 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l36:s110:k106:d1:s0)		if iTemp31 [k37 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_7($8)
led.c(l36:s111:k322:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l36:s112:k323:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l36:s113:k324:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l36:s114:k113:d1:s0)		 goto _forcond_7($39)
led.c(l36:s115:k114:d0:s0)	 _forbreak_7($8) :
led.c(l37:s116:k115:d0:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
led.c(l37:s117:k116:d0:s0)		iTemp34 [k42 lr117:117 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l38:s118:k117:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l38:s120:k118:d1:s0)	 _forcond_8($42) :
led.c(l38:s121:k325:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l38:s122:k326:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l38:s123:k327:d1:s0)		iTemp35 [k43 lr123:124 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l38:s124:k120:d1:s0)		if iTemp35 [k43 lr123:124 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_8($9)
led.c(l38:s125:k328:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l38:s126:k329:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l38:s127:k330:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l38:s128:k127:d1:s0)		 goto _forcond_8($42)
led.c(l38:s129:k128:d0:s0)	 _forbreak_8($9) :
led.c(l39:s130:k129:d0:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
led.c(l39:s131:k130:d0:s0)		iTemp38 [k46 lr131:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l40:s132:k131:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l40:s134:k132:d1:s0)	 _forcond_9($45) :
led.c(l40:s135:k331:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l40:s136:k332:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l40:s137:k333:d1:s0)		iTemp39 [k47 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l40:s138:k134:d1:s0)		if iTemp39 [k47 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_9($10)
led.c(l40:s139:k334:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l40:s140:k335:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l40:s141:k336:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l40:s142:k141:d1:s0)		 goto _forcond_9($45)
led.c(l40:s143:k142:d0:s0)	 _forbreak_9($10) :
led.c(l41:s144:k143:d0:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
led.c(l41:s145:k144:d0:s0)		iTemp42 [k50 lr145:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l42:s146:k145:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l42:s148:k146:d1:s0)	 _forcond_10($48) :
led.c(l42:s149:k337:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l42:s150:k338:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l42:s151:k339:d1:s0)		iTemp43 [k51 lr151:152 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l42:s152:k148:d1:s0)		if iTemp43 [k51 lr151:152 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_10($11)
led.c(l42:s153:k340:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l42:s154:k341:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l42:s155:k342:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l42:s156:k155:d1:s0)		 goto _forcond_10($48)
led.c(l42:s157:k156:d0:s0)	 _forbreak_10($11) :
led.c(l43:s158:k157:d0:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
led.c(l43:s159:k158:d0:s0)		iTemp46 [k54 lr159:159 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l44:s160:k159:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l44:s162:k160:d1:s0)	 _forcond_11($51) :
led.c(l44:s163:k343:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l44:s164:k344:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l44:s165:k345:d1:s0)		iTemp47 [k55 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l44:s166:k162:d1:s0)		if iTemp47 [k55 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_11($12)
led.c(l44:s167:k346:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l44:s168:k347:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l44:s169:k348:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l44:s170:k169:d1:s0)		 goto _forcond_11($51)
led.c(l44:s171:k170:d0:s0)	 _forbreak_11($12) :
led.c(l45:s172:k171:d0:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
led.c(l45:s173:k172:d0:s0)		iTemp50 [k58 lr173:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l46:s174:k173:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l46:s176:k174:d1:s0)	 _forcond_12($54) :
led.c(l46:s177:k349:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s178:k350:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l46:s179:k351:d1:s0)		iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l46:s180:k176:d1:s0)		if iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_12($13)
led.c(l46:s181:k352:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s182:k353:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l46:s183:k354:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l46:s184:k183:d1:s0)		 goto _forcond_12($54)
led.c(l46:s185:k184:d0:s0)	 _forbreak_12($13) :
led.c(l47:s186:k185:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l47:s187:k186:d0:s0)		iTemp54 [k62 lr187:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l48:s188:k187:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l48:s190:k188:d1:s0)	 _forcond_13($57) :
led.c(l48:s191:k355:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s192:k356:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l48:s193:k357:d1:s0)		iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l48:s194:k190:d1:s0)		if iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_13($14)
led.c(l48:s195:k358:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s196:k359:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l48:s197:k360:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l48:s198:k197:d1:s0)		 goto _forcond_13($57)
led.c(l48:s199:k198:d0:s0)	 _forbreak_13($14) :
led.c(l49:s200:k199:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l49:s201:k200:d0:s0)		iTemp58 [k66 lr201:201 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l50:s202:k201:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l50:s204:k202:d1:s0)	 _forcond_14($60) :
led.c(l50:s205:k361:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s206:k362:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l50:s207:k363:d1:s0)		iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l50:s208:k204:d1:s0)		if iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_14($15)
led.c(l50:s209:k364:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s210:k365:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l50:s211:k366:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l50:s212:k211:d1:s0)		 goto _forcond_14($60)
led.c(l50:s213:k212:d0:s0)	 _forbreak_14($15) :
led.c(l51:s214:k213:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l51:s215:k214:d0:s0)		iTemp62 [k70 lr215:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l52:s216:k215:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l52:s218:k216:d1:s0)	 _forcond_15($63) :
led.c(l52:s219:k367:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s220:k368:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l52:s221:k369:d1:s0)		iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l52:s222:k218:d1:s0)		if iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _return($65)
led.c(l52:s223:k370:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s224:k371:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l52:s225:k372:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l52:s226:k225:d1:s0)		 goto _forcond_15($63)
led.c(l52:s227:k227:d0:s0)	 _return($65) :
led.c(l52:s228:k228:d0:s0)		eproc _sequencial [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}

----------------------------------------------------------------
Basic Block preHeaderLbl34 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 10 : bbnum = 9 1st iCode = 35 , last iCode = 35
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { }

local defines bitVector :
pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (33) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (33) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { }

----------------------------------------------------------------
led.c(l26:s35:k263:d0:s0)	 preHeaderLbl34($136) :
led.c(l26:s36:k34:d1:s0)	 _forcond_2($24) :
led.c(l26:s37:k289:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l26:s38:k290:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l26:s39:k291:d1:s0)		iTemp11 [k17 lr39:40 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l26:s40:k36:d1:s0)		if iTemp11 [k17 lr39:40 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_2($3)
led.c(l26:s41:k292:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l26:s42:k293:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l26:s43:k294:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l26:s44:k43:d1:s0)		 goto _forcond_2($24)
led.c(l26:s45:k44:d0:s0)	 _forbreak_2($3) :
led.c(l27:s46:k45:d0:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
led.c(l27:s47:k46:d0:s0)		iTemp14 [k20 lr47:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l28:s48:k47:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l28:s50:k48:d1:s0)	 _forcond_3($27) :
led.c(l28:s51:k295:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l28:s52:k296:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l28:s53:k297:d1:s0)		iTemp15 [k21 lr53:54 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l28:s54:k50:d1:s0)		if iTemp15 [k21 lr53:54 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_3($4)
led.c(l28:s55:k298:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l28:s56:k299:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l28:s57:k300:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l28:s58:k57:d1:s0)		 goto _forcond_3($27)
led.c(l28:s59:k58:d0:s0)	 _forbreak_3($4) :
led.c(l29:s60:k59:d0:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
led.c(l29:s61:k60:d0:s0)		iTemp18 [k24 lr61:61 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l30:s62:k61:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l30:s64:k62:d1:s0)	 _forcond_4($30) :
led.c(l30:s65:k301:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l30:s66:k302:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l30:s67:k303:d1:s0)		iTemp19 [k25 lr67:68 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l30:s68:k64:d1:s0)		if iTemp19 [k25 lr67:68 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_4($5)
led.c(l30:s69:k304:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l30:s70:k305:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l30:s71:k306:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l30:s72:k71:d1:s0)		 goto _forcond_4($30)
led.c(l30:s73:k72:d0:s0)	 _forbreak_4($5) :
led.c(l31:s74:k73:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l31:s75:k74:d0:s0)		iTemp22 [k28 lr75:75 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l32:s76:k75:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l32:s78:k76:d1:s0)	 _forcond_5($33) :
led.c(l32:s79:k307:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l32:s80:k308:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l32:s81:k309:d1:s0)		iTemp23 [k29 lr81:82 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l32:s82:k78:d1:s0)		if iTemp23 [k29 lr81:82 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_5($6)
led.c(l32:s83:k310:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l32:s84:k311:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l32:s85:k312:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l32:s86:k85:d1:s0)		 goto _forcond_5($33)
led.c(l32:s87:k86:d0:s0)	 _forbreak_5($6) :
led.c(l33:s88:k87:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l33:s89:k88:d0:s0)		iTemp26 [k32 lr89:89 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l34:s90:k89:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l34:s92:k90:d1:s0)	 _forcond_6($36) :
led.c(l34:s93:k313:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l34:s94:k314:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l34:s95:k315:d1:s0)		iTemp27 [k33 lr95:96 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l34:s96:k92:d1:s0)		if iTemp27 [k33 lr95:96 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_6($7)
led.c(l34:s97:k316:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l34:s98:k317:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l34:s99:k318:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l34:s100:k99:d1:s0)		 goto _forcond_6($36)
led.c(l34:s101:k100:d0:s0)	 _forbreak_6($7) :
led.c(l35:s102:k101:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l35:s103:k102:d0:s0)		iTemp30 [k36 lr103:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l36:s104:k103:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l36:s106:k104:d1:s0)	 _forcond_7($39) :
led.c(l36:s107:k319:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l36:s108:k320:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l36:s109:k321:d1:s0)		iTemp31 [k37 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l36:s110:k106:d1:s0)		if iTemp31 [k37 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_7($8)
led.c(l36:s111:k322:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l36:s112:k323:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l36:s113:k324:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l36:s114:k113:d1:s0)		 goto _forcond_7($39)
led.c(l36:s115:k114:d0:s0)	 _forbreak_7($8) :
led.c(l37:s116:k115:d0:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
led.c(l37:s117:k116:d0:s0)		iTemp34 [k42 lr117:117 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l38:s118:k117:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l38:s120:k118:d1:s0)	 _forcond_8($42) :
led.c(l38:s121:k325:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l38:s122:k326:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l38:s123:k327:d1:s0)		iTemp35 [k43 lr123:124 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l38:s124:k120:d1:s0)		if iTemp35 [k43 lr123:124 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_8($9)
led.c(l38:s125:k328:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l38:s126:k329:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l38:s127:k330:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l38:s128:k127:d1:s0)		 goto _forcond_8($42)
led.c(l38:s129:k128:d0:s0)	 _forbreak_8($9) :
led.c(l39:s130:k129:d0:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
led.c(l39:s131:k130:d0:s0)		iTemp38 [k46 lr131:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l40:s132:k131:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l40:s134:k132:d1:s0)	 _forcond_9($45) :
led.c(l40:s135:k331:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l40:s136:k332:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l40:s137:k333:d1:s0)		iTemp39 [k47 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l40:s138:k134:d1:s0)		if iTemp39 [k47 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_9($10)
led.c(l40:s139:k334:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l40:s140:k335:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l40:s141:k336:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l40:s142:k141:d1:s0)		 goto _forcond_9($45)
led.c(l40:s143:k142:d0:s0)	 _forbreak_9($10) :
led.c(l41:s144:k143:d0:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
led.c(l41:s145:k144:d0:s0)		iTemp42 [k50 lr145:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l42:s146:k145:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l42:s148:k146:d1:s0)	 _forcond_10($48) :
led.c(l42:s149:k337:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l42:s150:k338:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l42:s151:k339:d1:s0)		iTemp43 [k51 lr151:152 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l42:s152:k148:d1:s0)		if iTemp43 [k51 lr151:152 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_10($11)
led.c(l42:s153:k340:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l42:s154:k341:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l42:s155:k342:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l42:s156:k155:d1:s0)		 goto _forcond_10($48)
led.c(l42:s157:k156:d0:s0)	 _forbreak_10($11) :
led.c(l43:s158:k157:d0:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
led.c(l43:s159:k158:d0:s0)		iTemp46 [k54 lr159:159 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l44:s160:k159:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l44:s162:k160:d1:s0)	 _forcond_11($51) :
led.c(l44:s163:k343:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l44:s164:k344:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l44:s165:k345:d1:s0)		iTemp47 [k55 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l44:s166:k162:d1:s0)		if iTemp47 [k55 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_11($12)
led.c(l44:s167:k346:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l44:s168:k347:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l44:s169:k348:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l44:s170:k169:d1:s0)		 goto _forcond_11($51)
led.c(l44:s171:k170:d0:s0)	 _forbreak_11($12) :
led.c(l45:s172:k171:d0:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
led.c(l45:s173:k172:d0:s0)		iTemp50 [k58 lr173:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l46:s174:k173:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l46:s176:k174:d1:s0)	 _forcond_12($54) :
led.c(l46:s177:k349:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s178:k350:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l46:s179:k351:d1:s0)		iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l46:s180:k176:d1:s0)		if iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_12($13)
led.c(l46:s181:k352:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s182:k353:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l46:s183:k354:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l46:s184:k183:d1:s0)		 goto _forcond_12($54)
led.c(l46:s185:k184:d0:s0)	 _forbreak_12($13) :
led.c(l47:s186:k185:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l47:s187:k186:d0:s0)		iTemp54 [k62 lr187:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l48:s188:k187:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l48:s190:k188:d1:s0)	 _forcond_13($57) :
led.c(l48:s191:k355:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s192:k356:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l48:s193:k357:d1:s0)		iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l48:s194:k190:d1:s0)		if iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_13($14)
led.c(l48:s195:k358:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s196:k359:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l48:s197:k360:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l48:s198:k197:d1:s0)		 goto _forcond_13($57)
led.c(l48:s199:k198:d0:s0)	 _forbreak_13($14) :
led.c(l49:s200:k199:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l49:s201:k200:d0:s0)		iTemp58 [k66 lr201:201 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l50:s202:k201:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l50:s204:k202:d1:s0)	 _forcond_14($60) :
led.c(l50:s205:k361:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s206:k362:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l50:s207:k363:d1:s0)		iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l50:s208:k204:d1:s0)		if iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_14($15)
led.c(l50:s209:k364:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s210:k365:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l50:s211:k366:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l50:s212:k211:d1:s0)		 goto _forcond_14($60)
led.c(l50:s213:k212:d0:s0)	 _forbreak_14($15) :
led.c(l51:s214:k213:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l51:s215:k214:d0:s0)		iTemp62 [k70 lr215:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l52:s216:k215:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l52:s218:k216:d1:s0)	 _forcond_15($63) :
led.c(l52:s219:k367:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s220:k368:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l52:s221:k369:d1:s0)		iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l52:s222:k218:d1:s0)		if iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _return($65)
led.c(l52:s223:k370:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s224:k371:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l52:s225:k372:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l52:s226:k225:d1:s0)		 goto _forcond_15($63)
led.c(l52:s227:k227:d0:s0)	 _return($65) :
led.c(l52:s228:k228:d0:s0)		eproc _sequencial [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}

----------------------------------------------------------------
Basic Block _forcond_2 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 11 : bbnum = 10 1st iCode = 36 , last iCode = 40
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (35) }

local defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (35) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (33) (35) (41) (42) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (33) (35) (41) (42) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (33) (35) (42) }

----------------------------------------------------------------
led.c(l26:s36:k34:d1:s0)	 _forcond_2($24) :
led.c(l26:s37:k289:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l26:s38:k290:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l26:s39:k291:d1:s0)		iTemp11 [k17 lr39:40 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l26:s40:k36:d1:s0)		if iTemp11 [k17 lr39:40 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_2($3)
led.c(l26:s41:k292:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l26:s42:k293:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l26:s43:k294:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l26:s44:k43:d1:s0)		 goto _forcond_2($24)
led.c(l26:s45:k44:d0:s0)	 _forbreak_2($3) :
led.c(l27:s46:k45:d0:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
led.c(l27:s47:k46:d0:s0)		iTemp14 [k20 lr47:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l28:s48:k47:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l28:s50:k48:d1:s0)	 _forcond_3($27) :
led.c(l28:s51:k295:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l28:s52:k296:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l28:s53:k297:d1:s0)		iTemp15 [k21 lr53:54 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l28:s54:k50:d1:s0)		if iTemp15 [k21 lr53:54 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_3($4)
led.c(l28:s55:k298:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l28:s56:k299:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l28:s57:k300:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l28:s58:k57:d1:s0)		 goto _forcond_3($27)
led.c(l28:s59:k58:d0:s0)	 _forbreak_3($4) :
led.c(l29:s60:k59:d0:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
led.c(l29:s61:k60:d0:s0)		iTemp18 [k24 lr61:61 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l30:s62:k61:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l30:s64:k62:d1:s0)	 _forcond_4($30) :
led.c(l30:s65:k301:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l30:s66:k302:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l30:s67:k303:d1:s0)		iTemp19 [k25 lr67:68 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l30:s68:k64:d1:s0)		if iTemp19 [k25 lr67:68 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_4($5)
led.c(l30:s69:k304:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l30:s70:k305:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l30:s71:k306:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l30:s72:k71:d1:s0)		 goto _forcond_4($30)
led.c(l30:s73:k72:d0:s0)	 _forbreak_4($5) :
led.c(l31:s74:k73:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l31:s75:k74:d0:s0)		iTemp22 [k28 lr75:75 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l32:s76:k75:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l32:s78:k76:d1:s0)	 _forcond_5($33) :
led.c(l32:s79:k307:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l32:s80:k308:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l32:s81:k309:d1:s0)		iTemp23 [k29 lr81:82 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l32:s82:k78:d1:s0)		if iTemp23 [k29 lr81:82 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_5($6)
led.c(l32:s83:k310:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l32:s84:k311:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l32:s85:k312:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l32:s86:k85:d1:s0)		 goto _forcond_5($33)
led.c(l32:s87:k86:d0:s0)	 _forbreak_5($6) :
led.c(l33:s88:k87:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l33:s89:k88:d0:s0)		iTemp26 [k32 lr89:89 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l34:s90:k89:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l34:s92:k90:d1:s0)	 _forcond_6($36) :
led.c(l34:s93:k313:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l34:s94:k314:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l34:s95:k315:d1:s0)		iTemp27 [k33 lr95:96 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l34:s96:k92:d1:s0)		if iTemp27 [k33 lr95:96 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_6($7)
led.c(l34:s97:k316:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l34:s98:k317:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l34:s99:k318:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l34:s100:k99:d1:s0)		 goto _forcond_6($36)
led.c(l34:s101:k100:d0:s0)	 _forbreak_6($7) :
led.c(l35:s102:k101:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l35:s103:k102:d0:s0)		iTemp30 [k36 lr103:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l36:s104:k103:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l36:s106:k104:d1:s0)	 _forcond_7($39) :
led.c(l36:s107:k319:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l36:s108:k320:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l36:s109:k321:d1:s0)		iTemp31 [k37 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l36:s110:k106:d1:s0)		if iTemp31 [k37 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_7($8)
led.c(l36:s111:k322:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l36:s112:k323:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l36:s113:k324:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l36:s114:k113:d1:s0)		 goto _forcond_7($39)
led.c(l36:s115:k114:d0:s0)	 _forbreak_7($8) :
led.c(l37:s116:k115:d0:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
led.c(l37:s117:k116:d0:s0)		iTemp34 [k42 lr117:117 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l38:s118:k117:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l38:s120:k118:d1:s0)	 _forcond_8($42) :
led.c(l38:s121:k325:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l38:s122:k326:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l38:s123:k327:d1:s0)		iTemp35 [k43 lr123:124 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l38:s124:k120:d1:s0)		if iTemp35 [k43 lr123:124 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_8($9)
led.c(l38:s125:k328:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l38:s126:k329:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l38:s127:k330:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l38:s128:k127:d1:s0)		 goto _forcond_8($42)
led.c(l38:s129:k128:d0:s0)	 _forbreak_8($9) :
led.c(l39:s130:k129:d0:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
led.c(l39:s131:k130:d0:s0)		iTemp38 [k46 lr131:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l40:s132:k131:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l40:s134:k132:d1:s0)	 _forcond_9($45) :
led.c(l40:s135:k331:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l40:s136:k332:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l40:s137:k333:d1:s0)		iTemp39 [k47 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l40:s138:k134:d1:s0)		if iTemp39 [k47 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_9($10)
led.c(l40:s139:k334:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l40:s140:k335:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l40:s141:k336:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l40:s142:k141:d1:s0)		 goto _forcond_9($45)
led.c(l40:s143:k142:d0:s0)	 _forbreak_9($10) :
led.c(l41:s144:k143:d0:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
led.c(l41:s145:k144:d0:s0)		iTemp42 [k50 lr145:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l42:s146:k145:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l42:s148:k146:d1:s0)	 _forcond_10($48) :
led.c(l42:s149:k337:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l42:s150:k338:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l42:s151:k339:d1:s0)		iTemp43 [k51 lr151:152 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l42:s152:k148:d1:s0)		if iTemp43 [k51 lr151:152 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_10($11)
led.c(l42:s153:k340:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l42:s154:k341:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l42:s155:k342:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l42:s156:k155:d1:s0)		 goto _forcond_10($48)
led.c(l42:s157:k156:d0:s0)	 _forbreak_10($11) :
led.c(l43:s158:k157:d0:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
led.c(l43:s159:k158:d0:s0)		iTemp46 [k54 lr159:159 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l44:s160:k159:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l44:s162:k160:d1:s0)	 _forcond_11($51) :
led.c(l44:s163:k343:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l44:s164:k344:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l44:s165:k345:d1:s0)		iTemp47 [k55 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l44:s166:k162:d1:s0)		if iTemp47 [k55 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_11($12)
led.c(l44:s167:k346:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l44:s168:k347:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l44:s169:k348:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l44:s170:k169:d1:s0)		 goto _forcond_11($51)
led.c(l44:s171:k170:d0:s0)	 _forbreak_11($12) :
led.c(l45:s172:k171:d0:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
led.c(l45:s173:k172:d0:s0)		iTemp50 [k58 lr173:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l46:s174:k173:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l46:s176:k174:d1:s0)	 _forcond_12($54) :
led.c(l46:s177:k349:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s178:k350:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l46:s179:k351:d1:s0)		iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l46:s180:k176:d1:s0)		if iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_12($13)
led.c(l46:s181:k352:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s182:k353:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l46:s183:k354:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l46:s184:k183:d1:s0)		 goto _forcond_12($54)
led.c(l46:s185:k184:d0:s0)	 _forbreak_12($13) :
led.c(l47:s186:k185:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l47:s187:k186:d0:s0)		iTemp54 [k62 lr187:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l48:s188:k187:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l48:s190:k188:d1:s0)	 _forcond_13($57) :
led.c(l48:s191:k355:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s192:k356:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l48:s193:k357:d1:s0)		iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l48:s194:k190:d1:s0)		if iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_13($14)
led.c(l48:s195:k358:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s196:k359:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l48:s197:k360:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l48:s198:k197:d1:s0)		 goto _forcond_13($57)
led.c(l48:s199:k198:d0:s0)	 _forbreak_13($14) :
led.c(l49:s200:k199:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l49:s201:k200:d0:s0)		iTemp58 [k66 lr201:201 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l50:s202:k201:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l50:s204:k202:d1:s0)	 _forcond_14($60) :
led.c(l50:s205:k361:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s206:k362:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l50:s207:k363:d1:s0)		iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l50:s208:k204:d1:s0)		if iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_14($15)
led.c(l50:s209:k364:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s210:k365:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l50:s211:k366:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l50:s212:k211:d1:s0)		 goto _forcond_14($60)
led.c(l50:s213:k212:d0:s0)	 _forbreak_14($15) :
led.c(l51:s214:k213:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l51:s215:k214:d0:s0)		iTemp62 [k70 lr215:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l52:s216:k215:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l52:s218:k216:d1:s0)	 _forcond_15($63) :
led.c(l52:s219:k367:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s220:k368:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l52:s221:k369:d1:s0)		iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l52:s222:k218:d1:s0)		if iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _return($65)
led.c(l52:s223:k370:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s224:k371:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l52:s225:k372:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l52:s226:k225:d1:s0)		 goto _forcond_15($63)
led.c(l52:s227:k227:d0:s0)	 _return($65) :
led.c(l52:s228:k228:d0:s0)		eproc _sequencial [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}

----------------------------------------------------------------
Basic Block _eBBlock34 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 12 : bbnum = 11 1st iCode = 41 , last iCode = 44
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (41) (42) }

local defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (41) (42) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (33) (35) (41) (42) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (42) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (33) (41) (42) }

----------------------------------------------------------------
led.c(l26:s41:k292:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l26:s42:k293:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l26:s43:k294:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l26:s44:k43:d1:s0)		 goto _forcond_2($24)
led.c(l26:s45:k44:d0:s0)	 _forbreak_2($3) :
led.c(l27:s46:k45:d0:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
led.c(l27:s47:k46:d0:s0)		iTemp14 [k20 lr47:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l28:s48:k47:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l28:s50:k48:d1:s0)	 _forcond_3($27) :
led.c(l28:s51:k295:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l28:s52:k296:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l28:s53:k297:d1:s0)		iTemp15 [k21 lr53:54 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l28:s54:k50:d1:s0)		if iTemp15 [k21 lr53:54 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_3($4)
led.c(l28:s55:k298:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l28:s56:k299:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l28:s57:k300:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l28:s58:k57:d1:s0)		 goto _forcond_3($27)
led.c(l28:s59:k58:d0:s0)	 _forbreak_3($4) :
led.c(l29:s60:k59:d0:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
led.c(l29:s61:k60:d0:s0)		iTemp18 [k24 lr61:61 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l30:s62:k61:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l30:s64:k62:d1:s0)	 _forcond_4($30) :
led.c(l30:s65:k301:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l30:s66:k302:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l30:s67:k303:d1:s0)		iTemp19 [k25 lr67:68 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l30:s68:k64:d1:s0)		if iTemp19 [k25 lr67:68 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_4($5)
led.c(l30:s69:k304:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l30:s70:k305:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l30:s71:k306:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l30:s72:k71:d1:s0)		 goto _forcond_4($30)
led.c(l30:s73:k72:d0:s0)	 _forbreak_4($5) :
led.c(l31:s74:k73:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l31:s75:k74:d0:s0)		iTemp22 [k28 lr75:75 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l32:s76:k75:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l32:s78:k76:d1:s0)	 _forcond_5($33) :
led.c(l32:s79:k307:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l32:s80:k308:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l32:s81:k309:d1:s0)		iTemp23 [k29 lr81:82 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l32:s82:k78:d1:s0)		if iTemp23 [k29 lr81:82 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_5($6)
led.c(l32:s83:k310:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l32:s84:k311:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l32:s85:k312:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l32:s86:k85:d1:s0)		 goto _forcond_5($33)
led.c(l32:s87:k86:d0:s0)	 _forbreak_5($6) :
led.c(l33:s88:k87:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l33:s89:k88:d0:s0)		iTemp26 [k32 lr89:89 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l34:s90:k89:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l34:s92:k90:d1:s0)	 _forcond_6($36) :
led.c(l34:s93:k313:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l34:s94:k314:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l34:s95:k315:d1:s0)		iTemp27 [k33 lr95:96 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l34:s96:k92:d1:s0)		if iTemp27 [k33 lr95:96 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_6($7)
led.c(l34:s97:k316:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l34:s98:k317:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l34:s99:k318:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l34:s100:k99:d1:s0)		 goto _forcond_6($36)
led.c(l34:s101:k100:d0:s0)	 _forbreak_6($7) :
led.c(l35:s102:k101:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l35:s103:k102:d0:s0)		iTemp30 [k36 lr103:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l36:s104:k103:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l36:s106:k104:d1:s0)	 _forcond_7($39) :
led.c(l36:s107:k319:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l36:s108:k320:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l36:s109:k321:d1:s0)		iTemp31 [k37 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l36:s110:k106:d1:s0)		if iTemp31 [k37 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_7($8)
led.c(l36:s111:k322:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l36:s112:k323:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l36:s113:k324:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l36:s114:k113:d1:s0)		 goto _forcond_7($39)
led.c(l36:s115:k114:d0:s0)	 _forbreak_7($8) :
led.c(l37:s116:k115:d0:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
led.c(l37:s117:k116:d0:s0)		iTemp34 [k42 lr117:117 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l38:s118:k117:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l38:s120:k118:d1:s0)	 _forcond_8($42) :
led.c(l38:s121:k325:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l38:s122:k326:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l38:s123:k327:d1:s0)		iTemp35 [k43 lr123:124 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l38:s124:k120:d1:s0)		if iTemp35 [k43 lr123:124 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_8($9)
led.c(l38:s125:k328:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l38:s126:k329:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l38:s127:k330:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l38:s128:k127:d1:s0)		 goto _forcond_8($42)
led.c(l38:s129:k128:d0:s0)	 _forbreak_8($9) :
led.c(l39:s130:k129:d0:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
led.c(l39:s131:k130:d0:s0)		iTemp38 [k46 lr131:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l40:s132:k131:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l40:s134:k132:d1:s0)	 _forcond_9($45) :
led.c(l40:s135:k331:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l40:s136:k332:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l40:s137:k333:d1:s0)		iTemp39 [k47 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l40:s138:k134:d1:s0)		if iTemp39 [k47 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_9($10)
led.c(l40:s139:k334:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l40:s140:k335:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l40:s141:k336:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l40:s142:k141:d1:s0)		 goto _forcond_9($45)
led.c(l40:s143:k142:d0:s0)	 _forbreak_9($10) :
led.c(l41:s144:k143:d0:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
led.c(l41:s145:k144:d0:s0)		iTemp42 [k50 lr145:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l42:s146:k145:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l42:s148:k146:d1:s0)	 _forcond_10($48) :
led.c(l42:s149:k337:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l42:s150:k338:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l42:s151:k339:d1:s0)		iTemp43 [k51 lr151:152 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l42:s152:k148:d1:s0)		if iTemp43 [k51 lr151:152 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_10($11)
led.c(l42:s153:k340:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l42:s154:k341:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l42:s155:k342:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l42:s156:k155:d1:s0)		 goto _forcond_10($48)
led.c(l42:s157:k156:d0:s0)	 _forbreak_10($11) :
led.c(l43:s158:k157:d0:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
led.c(l43:s159:k158:d0:s0)		iTemp46 [k54 lr159:159 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l44:s160:k159:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l44:s162:k160:d1:s0)	 _forcond_11($51) :
led.c(l44:s163:k343:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l44:s164:k344:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l44:s165:k345:d1:s0)		iTemp47 [k55 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l44:s166:k162:d1:s0)		if iTemp47 [k55 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_11($12)
led.c(l44:s167:k346:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l44:s168:k347:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l44:s169:k348:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l44:s170:k169:d1:s0)		 goto _forcond_11($51)
led.c(l44:s171:k170:d0:s0)	 _forbreak_11($12) :
led.c(l45:s172:k171:d0:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
led.c(l45:s173:k172:d0:s0)		iTemp50 [k58 lr173:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l46:s174:k173:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l46:s176:k174:d1:s0)	 _forcond_12($54) :
led.c(l46:s177:k349:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s178:k350:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l46:s179:k351:d1:s0)		iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l46:s180:k176:d1:s0)		if iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_12($13)
led.c(l46:s181:k352:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s182:k353:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l46:s183:k354:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l46:s184:k183:d1:s0)		 goto _forcond_12($54)
led.c(l46:s185:k184:d0:s0)	 _forbreak_12($13) :
led.c(l47:s186:k185:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l47:s187:k186:d0:s0)		iTemp54 [k62 lr187:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l48:s188:k187:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l48:s190:k188:d1:s0)	 _forcond_13($57) :
led.c(l48:s191:k355:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s192:k356:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l48:s193:k357:d1:s0)		iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l48:s194:k190:d1:s0)		if iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_13($14)
led.c(l48:s195:k358:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s196:k359:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l48:s197:k360:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l48:s198:k197:d1:s0)		 goto _forcond_13($57)
led.c(l48:s199:k198:d0:s0)	 _forbreak_13($14) :
led.c(l49:s200:k199:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l49:s201:k200:d0:s0)		iTemp58 [k66 lr201:201 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l50:s202:k201:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l50:s204:k202:d1:s0)	 _forcond_14($60) :
led.c(l50:s205:k361:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s206:k362:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l50:s207:k363:d1:s0)		iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l50:s208:k204:d1:s0)		if iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_14($15)
led.c(l50:s209:k364:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s210:k365:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l50:s211:k366:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l50:s212:k211:d1:s0)		 goto _forcond_14($60)
led.c(l50:s213:k212:d0:s0)	 _forbreak_14($15) :
led.c(l51:s214:k213:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l51:s215:k214:d0:s0)		iTemp62 [k70 lr215:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l52:s216:k215:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l52:s218:k216:d1:s0)	 _forcond_15($63) :
led.c(l52:s219:k367:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s220:k368:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l52:s221:k369:d1:s0)		iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l52:s222:k218:d1:s0)		if iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _return($65)
led.c(l52:s223:k370:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s224:k371:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l52:s225:k372:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l52:s226:k225:d1:s0)		 goto _forcond_15($63)
led.c(l52:s227:k227:d0:s0)	 _return($65) :
led.c(l52:s228:k228:d0:s0)		eproc _sequencial [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}

----------------------------------------------------------------
Basic Block _forbreak_2 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 13 : bbnum = 12 1st iCode = 45 , last iCode = 48
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (47) }

local defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (46) (47) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (33) (35) (41) (42) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (47) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (46) }

----------------------------------------------------------------
led.c(l26:s45:k44:d0:s0)	 _forbreak_2($3) :
led.c(l27:s46:k45:d0:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
led.c(l27:s47:k46:d0:s0)		iTemp14 [k20 lr47:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l28:s48:k47:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l28:s50:k48:d1:s0)	 _forcond_3($27) :
led.c(l28:s51:k295:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l28:s52:k296:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l28:s53:k297:d1:s0)		iTemp15 [k21 lr53:54 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l28:s54:k50:d1:s0)		if iTemp15 [k21 lr53:54 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_3($4)
led.c(l28:s55:k298:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l28:s56:k299:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l28:s57:k300:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l28:s58:k57:d1:s0)		 goto _forcond_3($27)
led.c(l28:s59:k58:d0:s0)	 _forbreak_3($4) :
led.c(l29:s60:k59:d0:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
led.c(l29:s61:k60:d0:s0)		iTemp18 [k24 lr61:61 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l30:s62:k61:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l30:s64:k62:d1:s0)	 _forcond_4($30) :
led.c(l30:s65:k301:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l30:s66:k302:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l30:s67:k303:d1:s0)		iTemp19 [k25 lr67:68 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l30:s68:k64:d1:s0)		if iTemp19 [k25 lr67:68 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_4($5)
led.c(l30:s69:k304:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l30:s70:k305:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l30:s71:k306:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l30:s72:k71:d1:s0)		 goto _forcond_4($30)
led.c(l30:s73:k72:d0:s0)	 _forbreak_4($5) :
led.c(l31:s74:k73:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l31:s75:k74:d0:s0)		iTemp22 [k28 lr75:75 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l32:s76:k75:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l32:s78:k76:d1:s0)	 _forcond_5($33) :
led.c(l32:s79:k307:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l32:s80:k308:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l32:s81:k309:d1:s0)		iTemp23 [k29 lr81:82 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l32:s82:k78:d1:s0)		if iTemp23 [k29 lr81:82 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_5($6)
led.c(l32:s83:k310:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l32:s84:k311:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l32:s85:k312:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l32:s86:k85:d1:s0)		 goto _forcond_5($33)
led.c(l32:s87:k86:d0:s0)	 _forbreak_5($6) :
led.c(l33:s88:k87:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l33:s89:k88:d0:s0)		iTemp26 [k32 lr89:89 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l34:s90:k89:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l34:s92:k90:d1:s0)	 _forcond_6($36) :
led.c(l34:s93:k313:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l34:s94:k314:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l34:s95:k315:d1:s0)		iTemp27 [k33 lr95:96 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l34:s96:k92:d1:s0)		if iTemp27 [k33 lr95:96 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_6($7)
led.c(l34:s97:k316:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l34:s98:k317:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l34:s99:k318:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l34:s100:k99:d1:s0)		 goto _forcond_6($36)
led.c(l34:s101:k100:d0:s0)	 _forbreak_6($7) :
led.c(l35:s102:k101:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l35:s103:k102:d0:s0)		iTemp30 [k36 lr103:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l36:s104:k103:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l36:s106:k104:d1:s0)	 _forcond_7($39) :
led.c(l36:s107:k319:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l36:s108:k320:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l36:s109:k321:d1:s0)		iTemp31 [k37 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l36:s110:k106:d1:s0)		if iTemp31 [k37 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_7($8)
led.c(l36:s111:k322:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l36:s112:k323:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l36:s113:k324:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l36:s114:k113:d1:s0)		 goto _forcond_7($39)
led.c(l36:s115:k114:d0:s0)	 _forbreak_7($8) :
led.c(l37:s116:k115:d0:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
led.c(l37:s117:k116:d0:s0)		iTemp34 [k42 lr117:117 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l38:s118:k117:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l38:s120:k118:d1:s0)	 _forcond_8($42) :
led.c(l38:s121:k325:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l38:s122:k326:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l38:s123:k327:d1:s0)		iTemp35 [k43 lr123:124 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l38:s124:k120:d1:s0)		if iTemp35 [k43 lr123:124 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_8($9)
led.c(l38:s125:k328:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l38:s126:k329:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l38:s127:k330:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l38:s128:k127:d1:s0)		 goto _forcond_8($42)
led.c(l38:s129:k128:d0:s0)	 _forbreak_8($9) :
led.c(l39:s130:k129:d0:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
led.c(l39:s131:k130:d0:s0)		iTemp38 [k46 lr131:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l40:s132:k131:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l40:s134:k132:d1:s0)	 _forcond_9($45) :
led.c(l40:s135:k331:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l40:s136:k332:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l40:s137:k333:d1:s0)		iTemp39 [k47 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l40:s138:k134:d1:s0)		if iTemp39 [k47 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_9($10)
led.c(l40:s139:k334:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l40:s140:k335:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l40:s141:k336:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l40:s142:k141:d1:s0)		 goto _forcond_9($45)
led.c(l40:s143:k142:d0:s0)	 _forbreak_9($10) :
led.c(l41:s144:k143:d0:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
led.c(l41:s145:k144:d0:s0)		iTemp42 [k50 lr145:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l42:s146:k145:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l42:s148:k146:d1:s0)	 _forcond_10($48) :
led.c(l42:s149:k337:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l42:s150:k338:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l42:s151:k339:d1:s0)		iTemp43 [k51 lr151:152 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l42:s152:k148:d1:s0)		if iTemp43 [k51 lr151:152 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_10($11)
led.c(l42:s153:k340:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l42:s154:k341:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l42:s155:k342:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l42:s156:k155:d1:s0)		 goto _forcond_10($48)
led.c(l42:s157:k156:d0:s0)	 _forbreak_10($11) :
led.c(l43:s158:k157:d0:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
led.c(l43:s159:k158:d0:s0)		iTemp46 [k54 lr159:159 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l44:s160:k159:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l44:s162:k160:d1:s0)	 _forcond_11($51) :
led.c(l44:s163:k343:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l44:s164:k344:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l44:s165:k345:d1:s0)		iTemp47 [k55 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l44:s166:k162:d1:s0)		if iTemp47 [k55 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_11($12)
led.c(l44:s167:k346:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l44:s168:k347:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l44:s169:k348:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l44:s170:k169:d1:s0)		 goto _forcond_11($51)
led.c(l44:s171:k170:d0:s0)	 _forbreak_11($12) :
led.c(l45:s172:k171:d0:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
led.c(l45:s173:k172:d0:s0)		iTemp50 [k58 lr173:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l46:s174:k173:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l46:s176:k174:d1:s0)	 _forcond_12($54) :
led.c(l46:s177:k349:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s178:k350:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l46:s179:k351:d1:s0)		iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l46:s180:k176:d1:s0)		if iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_12($13)
led.c(l46:s181:k352:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s182:k353:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l46:s183:k354:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l46:s184:k183:d1:s0)		 goto _forcond_12($54)
led.c(l46:s185:k184:d0:s0)	 _forbreak_12($13) :
led.c(l47:s186:k185:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l47:s187:k186:d0:s0)		iTemp54 [k62 lr187:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l48:s188:k187:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l48:s190:k188:d1:s0)	 _forcond_13($57) :
led.c(l48:s191:k355:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s192:k356:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l48:s193:k357:d1:s0)		iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l48:s194:k190:d1:s0)		if iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_13($14)
led.c(l48:s195:k358:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s196:k359:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l48:s197:k360:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l48:s198:k197:d1:s0)		 goto _forcond_13($57)
led.c(l48:s199:k198:d0:s0)	 _forbreak_13($14) :
led.c(l49:s200:k199:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l49:s201:k200:d0:s0)		iTemp58 [k66 lr201:201 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l50:s202:k201:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l50:s204:k202:d1:s0)	 _forcond_14($60) :
led.c(l50:s205:k361:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s206:k362:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l50:s207:k363:d1:s0)		iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l50:s208:k204:d1:s0)		if iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_14($15)
led.c(l50:s209:k364:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s210:k365:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l50:s211:k366:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l50:s212:k211:d1:s0)		 goto _forcond_14($60)
led.c(l50:s213:k212:d0:s0)	 _forbreak_14($15) :
led.c(l51:s214:k213:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l51:s215:k214:d0:s0)		iTemp62 [k70 lr215:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l52:s216:k215:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l52:s218:k216:d1:s0)	 _forcond_15($63) :
led.c(l52:s219:k367:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s220:k368:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l52:s221:k369:d1:s0)		iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l52:s222:k218:d1:s0)		if iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _return($65)
led.c(l52:s223:k370:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s224:k371:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l52:s225:k372:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l52:s226:k225:d1:s0)		 goto _forcond_15($63)
led.c(l52:s227:k227:d0:s0)	 _return($65) :
led.c(l52:s228:k228:d0:s0)		eproc _sequencial [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}

----------------------------------------------------------------
Basic Block preHeaderLbl35 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 14 : bbnum = 13 1st iCode = 49 , last iCode = 49
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { }

local defines bitVector :
pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (47) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (47) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { }

----------------------------------------------------------------
led.c(l28:s49:k264:d0:s0)	 preHeaderLbl35($138) :
led.c(l28:s50:k48:d1:s0)	 _forcond_3($27) :
led.c(l28:s51:k295:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l28:s52:k296:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l28:s53:k297:d1:s0)		iTemp15 [k21 lr53:54 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l28:s54:k50:d1:s0)		if iTemp15 [k21 lr53:54 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_3($4)
led.c(l28:s55:k298:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l28:s56:k299:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l28:s57:k300:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l28:s58:k57:d1:s0)		 goto _forcond_3($27)
led.c(l28:s59:k58:d0:s0)	 _forbreak_3($4) :
led.c(l29:s60:k59:d0:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
led.c(l29:s61:k60:d0:s0)		iTemp18 [k24 lr61:61 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l30:s62:k61:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l30:s64:k62:d1:s0)	 _forcond_4($30) :
led.c(l30:s65:k301:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l30:s66:k302:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l30:s67:k303:d1:s0)		iTemp19 [k25 lr67:68 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l30:s68:k64:d1:s0)		if iTemp19 [k25 lr67:68 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_4($5)
led.c(l30:s69:k304:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l30:s70:k305:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l30:s71:k306:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l30:s72:k71:d1:s0)		 goto _forcond_4($30)
led.c(l30:s73:k72:d0:s0)	 _forbreak_4($5) :
led.c(l31:s74:k73:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l31:s75:k74:d0:s0)		iTemp22 [k28 lr75:75 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l32:s76:k75:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l32:s78:k76:d1:s0)	 _forcond_5($33) :
led.c(l32:s79:k307:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l32:s80:k308:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l32:s81:k309:d1:s0)		iTemp23 [k29 lr81:82 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l32:s82:k78:d1:s0)		if iTemp23 [k29 lr81:82 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_5($6)
led.c(l32:s83:k310:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l32:s84:k311:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l32:s85:k312:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l32:s86:k85:d1:s0)		 goto _forcond_5($33)
led.c(l32:s87:k86:d0:s0)	 _forbreak_5($6) :
led.c(l33:s88:k87:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l33:s89:k88:d0:s0)		iTemp26 [k32 lr89:89 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l34:s90:k89:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l34:s92:k90:d1:s0)	 _forcond_6($36) :
led.c(l34:s93:k313:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l34:s94:k314:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l34:s95:k315:d1:s0)		iTemp27 [k33 lr95:96 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l34:s96:k92:d1:s0)		if iTemp27 [k33 lr95:96 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_6($7)
led.c(l34:s97:k316:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l34:s98:k317:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l34:s99:k318:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l34:s100:k99:d1:s0)		 goto _forcond_6($36)
led.c(l34:s101:k100:d0:s0)	 _forbreak_6($7) :
led.c(l35:s102:k101:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l35:s103:k102:d0:s0)		iTemp30 [k36 lr103:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l36:s104:k103:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l36:s106:k104:d1:s0)	 _forcond_7($39) :
led.c(l36:s107:k319:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l36:s108:k320:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l36:s109:k321:d1:s0)		iTemp31 [k37 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l36:s110:k106:d1:s0)		if iTemp31 [k37 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_7($8)
led.c(l36:s111:k322:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l36:s112:k323:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l36:s113:k324:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l36:s114:k113:d1:s0)		 goto _forcond_7($39)
led.c(l36:s115:k114:d0:s0)	 _forbreak_7($8) :
led.c(l37:s116:k115:d0:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
led.c(l37:s117:k116:d0:s0)		iTemp34 [k42 lr117:117 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l38:s118:k117:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l38:s120:k118:d1:s0)	 _forcond_8($42) :
led.c(l38:s121:k325:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l38:s122:k326:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l38:s123:k327:d1:s0)		iTemp35 [k43 lr123:124 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l38:s124:k120:d1:s0)		if iTemp35 [k43 lr123:124 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_8($9)
led.c(l38:s125:k328:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l38:s126:k329:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l38:s127:k330:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l38:s128:k127:d1:s0)		 goto _forcond_8($42)
led.c(l38:s129:k128:d0:s0)	 _forbreak_8($9) :
led.c(l39:s130:k129:d0:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
led.c(l39:s131:k130:d0:s0)		iTemp38 [k46 lr131:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l40:s132:k131:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l40:s134:k132:d1:s0)	 _forcond_9($45) :
led.c(l40:s135:k331:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l40:s136:k332:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l40:s137:k333:d1:s0)		iTemp39 [k47 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l40:s138:k134:d1:s0)		if iTemp39 [k47 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_9($10)
led.c(l40:s139:k334:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l40:s140:k335:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l40:s141:k336:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l40:s142:k141:d1:s0)		 goto _forcond_9($45)
led.c(l40:s143:k142:d0:s0)	 _forbreak_9($10) :
led.c(l41:s144:k143:d0:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
led.c(l41:s145:k144:d0:s0)		iTemp42 [k50 lr145:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l42:s146:k145:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l42:s148:k146:d1:s0)	 _forcond_10($48) :
led.c(l42:s149:k337:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l42:s150:k338:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l42:s151:k339:d1:s0)		iTemp43 [k51 lr151:152 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l42:s152:k148:d1:s0)		if iTemp43 [k51 lr151:152 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_10($11)
led.c(l42:s153:k340:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l42:s154:k341:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l42:s155:k342:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l42:s156:k155:d1:s0)		 goto _forcond_10($48)
led.c(l42:s157:k156:d0:s0)	 _forbreak_10($11) :
led.c(l43:s158:k157:d0:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
led.c(l43:s159:k158:d0:s0)		iTemp46 [k54 lr159:159 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l44:s160:k159:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l44:s162:k160:d1:s0)	 _forcond_11($51) :
led.c(l44:s163:k343:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l44:s164:k344:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l44:s165:k345:d1:s0)		iTemp47 [k55 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l44:s166:k162:d1:s0)		if iTemp47 [k55 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_11($12)
led.c(l44:s167:k346:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l44:s168:k347:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l44:s169:k348:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l44:s170:k169:d1:s0)		 goto _forcond_11($51)
led.c(l44:s171:k170:d0:s0)	 _forbreak_11($12) :
led.c(l45:s172:k171:d0:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
led.c(l45:s173:k172:d0:s0)		iTemp50 [k58 lr173:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l46:s174:k173:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l46:s176:k174:d1:s0)	 _forcond_12($54) :
led.c(l46:s177:k349:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s178:k350:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l46:s179:k351:d1:s0)		iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l46:s180:k176:d1:s0)		if iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_12($13)
led.c(l46:s181:k352:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s182:k353:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l46:s183:k354:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l46:s184:k183:d1:s0)		 goto _forcond_12($54)
led.c(l46:s185:k184:d0:s0)	 _forbreak_12($13) :
led.c(l47:s186:k185:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l47:s187:k186:d0:s0)		iTemp54 [k62 lr187:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l48:s188:k187:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l48:s190:k188:d1:s0)	 _forcond_13($57) :
led.c(l48:s191:k355:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s192:k356:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l48:s193:k357:d1:s0)		iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l48:s194:k190:d1:s0)		if iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_13($14)
led.c(l48:s195:k358:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s196:k359:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l48:s197:k360:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l48:s198:k197:d1:s0)		 goto _forcond_13($57)
led.c(l48:s199:k198:d0:s0)	 _forbreak_13($14) :
led.c(l49:s200:k199:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l49:s201:k200:d0:s0)		iTemp58 [k66 lr201:201 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l50:s202:k201:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l50:s204:k202:d1:s0)	 _forcond_14($60) :
led.c(l50:s205:k361:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s206:k362:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l50:s207:k363:d1:s0)		iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l50:s208:k204:d1:s0)		if iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_14($15)
led.c(l50:s209:k364:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s210:k365:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l50:s211:k366:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l50:s212:k211:d1:s0)		 goto _forcond_14($60)
led.c(l50:s213:k212:d0:s0)	 _forbreak_14($15) :
led.c(l51:s214:k213:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l51:s215:k214:d0:s0)		iTemp62 [k70 lr215:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l52:s216:k215:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l52:s218:k216:d1:s0)	 _forcond_15($63) :
led.c(l52:s219:k367:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s220:k368:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l52:s221:k369:d1:s0)		iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l52:s222:k218:d1:s0)		if iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _return($65)
led.c(l52:s223:k370:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s224:k371:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l52:s225:k372:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l52:s226:k225:d1:s0)		 goto _forcond_15($63)
led.c(l52:s227:k227:d0:s0)	 _return($65) :
led.c(l52:s228:k228:d0:s0)		eproc _sequencial [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}

----------------------------------------------------------------
Basic Block _forcond_3 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 15 : bbnum = 14 1st iCode = 50 , last iCode = 54
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (49) }

local defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (49) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (47) (49) (55) (56) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (47) (49) (55) (56) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (47) (49) (56) }

----------------------------------------------------------------
led.c(l28:s50:k48:d1:s0)	 _forcond_3($27) :
led.c(l28:s51:k295:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l28:s52:k296:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l28:s53:k297:d1:s0)		iTemp15 [k21 lr53:54 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l28:s54:k50:d1:s0)		if iTemp15 [k21 lr53:54 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_3($4)
led.c(l28:s55:k298:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l28:s56:k299:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l28:s57:k300:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l28:s58:k57:d1:s0)		 goto _forcond_3($27)
led.c(l28:s59:k58:d0:s0)	 _forbreak_3($4) :
led.c(l29:s60:k59:d0:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
led.c(l29:s61:k60:d0:s0)		iTemp18 [k24 lr61:61 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l30:s62:k61:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l30:s64:k62:d1:s0)	 _forcond_4($30) :
led.c(l30:s65:k301:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l30:s66:k302:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l30:s67:k303:d1:s0)		iTemp19 [k25 lr67:68 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l30:s68:k64:d1:s0)		if iTemp19 [k25 lr67:68 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_4($5)
led.c(l30:s69:k304:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l30:s70:k305:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l30:s71:k306:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l30:s72:k71:d1:s0)		 goto _forcond_4($30)
led.c(l30:s73:k72:d0:s0)	 _forbreak_4($5) :
led.c(l31:s74:k73:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l31:s75:k74:d0:s0)		iTemp22 [k28 lr75:75 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l32:s76:k75:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l32:s78:k76:d1:s0)	 _forcond_5($33) :
led.c(l32:s79:k307:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l32:s80:k308:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l32:s81:k309:d1:s0)		iTemp23 [k29 lr81:82 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l32:s82:k78:d1:s0)		if iTemp23 [k29 lr81:82 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_5($6)
led.c(l32:s83:k310:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l32:s84:k311:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l32:s85:k312:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l32:s86:k85:d1:s0)		 goto _forcond_5($33)
led.c(l32:s87:k86:d0:s0)	 _forbreak_5($6) :
led.c(l33:s88:k87:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l33:s89:k88:d0:s0)		iTemp26 [k32 lr89:89 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l34:s90:k89:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l34:s92:k90:d1:s0)	 _forcond_6($36) :
led.c(l34:s93:k313:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l34:s94:k314:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l34:s95:k315:d1:s0)		iTemp27 [k33 lr95:96 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l34:s96:k92:d1:s0)		if iTemp27 [k33 lr95:96 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_6($7)
led.c(l34:s97:k316:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l34:s98:k317:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l34:s99:k318:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l34:s100:k99:d1:s0)		 goto _forcond_6($36)
led.c(l34:s101:k100:d0:s0)	 _forbreak_6($7) :
led.c(l35:s102:k101:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l35:s103:k102:d0:s0)		iTemp30 [k36 lr103:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l36:s104:k103:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l36:s106:k104:d1:s0)	 _forcond_7($39) :
led.c(l36:s107:k319:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l36:s108:k320:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l36:s109:k321:d1:s0)		iTemp31 [k37 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l36:s110:k106:d1:s0)		if iTemp31 [k37 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_7($8)
led.c(l36:s111:k322:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l36:s112:k323:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l36:s113:k324:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l36:s114:k113:d1:s0)		 goto _forcond_7($39)
led.c(l36:s115:k114:d0:s0)	 _forbreak_7($8) :
led.c(l37:s116:k115:d0:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
led.c(l37:s117:k116:d0:s0)		iTemp34 [k42 lr117:117 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l38:s118:k117:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l38:s120:k118:d1:s0)	 _forcond_8($42) :
led.c(l38:s121:k325:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l38:s122:k326:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l38:s123:k327:d1:s0)		iTemp35 [k43 lr123:124 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l38:s124:k120:d1:s0)		if iTemp35 [k43 lr123:124 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_8($9)
led.c(l38:s125:k328:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l38:s126:k329:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l38:s127:k330:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l38:s128:k127:d1:s0)		 goto _forcond_8($42)
led.c(l38:s129:k128:d0:s0)	 _forbreak_8($9) :
led.c(l39:s130:k129:d0:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
led.c(l39:s131:k130:d0:s0)		iTemp38 [k46 lr131:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l40:s132:k131:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l40:s134:k132:d1:s0)	 _forcond_9($45) :
led.c(l40:s135:k331:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l40:s136:k332:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l40:s137:k333:d1:s0)		iTemp39 [k47 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l40:s138:k134:d1:s0)		if iTemp39 [k47 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_9($10)
led.c(l40:s139:k334:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l40:s140:k335:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l40:s141:k336:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l40:s142:k141:d1:s0)		 goto _forcond_9($45)
led.c(l40:s143:k142:d0:s0)	 _forbreak_9($10) :
led.c(l41:s144:k143:d0:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
led.c(l41:s145:k144:d0:s0)		iTemp42 [k50 lr145:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l42:s146:k145:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l42:s148:k146:d1:s0)	 _forcond_10($48) :
led.c(l42:s149:k337:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l42:s150:k338:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l42:s151:k339:d1:s0)		iTemp43 [k51 lr151:152 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l42:s152:k148:d1:s0)		if iTemp43 [k51 lr151:152 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_10($11)
led.c(l42:s153:k340:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l42:s154:k341:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l42:s155:k342:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l42:s156:k155:d1:s0)		 goto _forcond_10($48)
led.c(l42:s157:k156:d0:s0)	 _forbreak_10($11) :
led.c(l43:s158:k157:d0:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
led.c(l43:s159:k158:d0:s0)		iTemp46 [k54 lr159:159 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l44:s160:k159:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l44:s162:k160:d1:s0)	 _forcond_11($51) :
led.c(l44:s163:k343:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l44:s164:k344:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l44:s165:k345:d1:s0)		iTemp47 [k55 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l44:s166:k162:d1:s0)		if iTemp47 [k55 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_11($12)
led.c(l44:s167:k346:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l44:s168:k347:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l44:s169:k348:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l44:s170:k169:d1:s0)		 goto _forcond_11($51)
led.c(l44:s171:k170:d0:s0)	 _forbreak_11($12) :
led.c(l45:s172:k171:d0:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
led.c(l45:s173:k172:d0:s0)		iTemp50 [k58 lr173:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l46:s174:k173:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l46:s176:k174:d1:s0)	 _forcond_12($54) :
led.c(l46:s177:k349:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s178:k350:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l46:s179:k351:d1:s0)		iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l46:s180:k176:d1:s0)		if iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_12($13)
led.c(l46:s181:k352:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s182:k353:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l46:s183:k354:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l46:s184:k183:d1:s0)		 goto _forcond_12($54)
led.c(l46:s185:k184:d0:s0)	 _forbreak_12($13) :
led.c(l47:s186:k185:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l47:s187:k186:d0:s0)		iTemp54 [k62 lr187:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l48:s188:k187:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l48:s190:k188:d1:s0)	 _forcond_13($57) :
led.c(l48:s191:k355:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s192:k356:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l48:s193:k357:d1:s0)		iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l48:s194:k190:d1:s0)		if iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_13($14)
led.c(l48:s195:k358:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s196:k359:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l48:s197:k360:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l48:s198:k197:d1:s0)		 goto _forcond_13($57)
led.c(l48:s199:k198:d0:s0)	 _forbreak_13($14) :
led.c(l49:s200:k199:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l49:s201:k200:d0:s0)		iTemp58 [k66 lr201:201 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l50:s202:k201:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l50:s204:k202:d1:s0)	 _forcond_14($60) :
led.c(l50:s205:k361:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s206:k362:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l50:s207:k363:d1:s0)		iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l50:s208:k204:d1:s0)		if iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_14($15)
led.c(l50:s209:k364:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s210:k365:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l50:s211:k366:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l50:s212:k211:d1:s0)		 goto _forcond_14($60)
led.c(l50:s213:k212:d0:s0)	 _forbreak_14($15) :
led.c(l51:s214:k213:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l51:s215:k214:d0:s0)		iTemp62 [k70 lr215:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l52:s216:k215:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l52:s218:k216:d1:s0)	 _forcond_15($63) :
led.c(l52:s219:k367:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s220:k368:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l52:s221:k369:d1:s0)		iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l52:s222:k218:d1:s0)		if iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _return($65)
led.c(l52:s223:k370:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s224:k371:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l52:s225:k372:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l52:s226:k225:d1:s0)		 goto _forcond_15($63)
led.c(l52:s227:k227:d0:s0)	 _return($65) :
led.c(l52:s228:k228:d0:s0)		eproc _sequencial [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}

----------------------------------------------------------------
Basic Block _eBBlock35 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 16 : bbnum = 15 1st iCode = 55 , last iCode = 58
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (55) (56) }

local defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (55) (56) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (47) (49) (55) (56) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (56) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (47) (55) (56) }

----------------------------------------------------------------
led.c(l28:s55:k298:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l28:s56:k299:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l28:s57:k300:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l28:s58:k57:d1:s0)		 goto _forcond_3($27)
led.c(l28:s59:k58:d0:s0)	 _forbreak_3($4) :
led.c(l29:s60:k59:d0:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
led.c(l29:s61:k60:d0:s0)		iTemp18 [k24 lr61:61 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l30:s62:k61:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l30:s64:k62:d1:s0)	 _forcond_4($30) :
led.c(l30:s65:k301:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l30:s66:k302:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l30:s67:k303:d1:s0)		iTemp19 [k25 lr67:68 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l30:s68:k64:d1:s0)		if iTemp19 [k25 lr67:68 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_4($5)
led.c(l30:s69:k304:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l30:s70:k305:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l30:s71:k306:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l30:s72:k71:d1:s0)		 goto _forcond_4($30)
led.c(l30:s73:k72:d0:s0)	 _forbreak_4($5) :
led.c(l31:s74:k73:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l31:s75:k74:d0:s0)		iTemp22 [k28 lr75:75 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l32:s76:k75:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l32:s78:k76:d1:s0)	 _forcond_5($33) :
led.c(l32:s79:k307:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l32:s80:k308:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l32:s81:k309:d1:s0)		iTemp23 [k29 lr81:82 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l32:s82:k78:d1:s0)		if iTemp23 [k29 lr81:82 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_5($6)
led.c(l32:s83:k310:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l32:s84:k311:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l32:s85:k312:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l32:s86:k85:d1:s0)		 goto _forcond_5($33)
led.c(l32:s87:k86:d0:s0)	 _forbreak_5($6) :
led.c(l33:s88:k87:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l33:s89:k88:d0:s0)		iTemp26 [k32 lr89:89 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l34:s90:k89:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l34:s92:k90:d1:s0)	 _forcond_6($36) :
led.c(l34:s93:k313:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l34:s94:k314:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l34:s95:k315:d1:s0)		iTemp27 [k33 lr95:96 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l34:s96:k92:d1:s0)		if iTemp27 [k33 lr95:96 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_6($7)
led.c(l34:s97:k316:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l34:s98:k317:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l34:s99:k318:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l34:s100:k99:d1:s0)		 goto _forcond_6($36)
led.c(l34:s101:k100:d0:s0)	 _forbreak_6($7) :
led.c(l35:s102:k101:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l35:s103:k102:d0:s0)		iTemp30 [k36 lr103:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l36:s104:k103:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l36:s106:k104:d1:s0)	 _forcond_7($39) :
led.c(l36:s107:k319:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l36:s108:k320:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l36:s109:k321:d1:s0)		iTemp31 [k37 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l36:s110:k106:d1:s0)		if iTemp31 [k37 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_7($8)
led.c(l36:s111:k322:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l36:s112:k323:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l36:s113:k324:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l36:s114:k113:d1:s0)		 goto _forcond_7($39)
led.c(l36:s115:k114:d0:s0)	 _forbreak_7($8) :
led.c(l37:s116:k115:d0:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
led.c(l37:s117:k116:d0:s0)		iTemp34 [k42 lr117:117 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l38:s118:k117:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l38:s120:k118:d1:s0)	 _forcond_8($42) :
led.c(l38:s121:k325:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l38:s122:k326:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l38:s123:k327:d1:s0)		iTemp35 [k43 lr123:124 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l38:s124:k120:d1:s0)		if iTemp35 [k43 lr123:124 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_8($9)
led.c(l38:s125:k328:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l38:s126:k329:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l38:s127:k330:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l38:s128:k127:d1:s0)		 goto _forcond_8($42)
led.c(l38:s129:k128:d0:s0)	 _forbreak_8($9) :
led.c(l39:s130:k129:d0:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
led.c(l39:s131:k130:d0:s0)		iTemp38 [k46 lr131:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l40:s132:k131:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l40:s134:k132:d1:s0)	 _forcond_9($45) :
led.c(l40:s135:k331:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l40:s136:k332:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l40:s137:k333:d1:s0)		iTemp39 [k47 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l40:s138:k134:d1:s0)		if iTemp39 [k47 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_9($10)
led.c(l40:s139:k334:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l40:s140:k335:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l40:s141:k336:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l40:s142:k141:d1:s0)		 goto _forcond_9($45)
led.c(l40:s143:k142:d0:s0)	 _forbreak_9($10) :
led.c(l41:s144:k143:d0:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
led.c(l41:s145:k144:d0:s0)		iTemp42 [k50 lr145:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l42:s146:k145:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l42:s148:k146:d1:s0)	 _forcond_10($48) :
led.c(l42:s149:k337:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l42:s150:k338:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l42:s151:k339:d1:s0)		iTemp43 [k51 lr151:152 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l42:s152:k148:d1:s0)		if iTemp43 [k51 lr151:152 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_10($11)
led.c(l42:s153:k340:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l42:s154:k341:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l42:s155:k342:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l42:s156:k155:d1:s0)		 goto _forcond_10($48)
led.c(l42:s157:k156:d0:s0)	 _forbreak_10($11) :
led.c(l43:s158:k157:d0:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
led.c(l43:s159:k158:d0:s0)		iTemp46 [k54 lr159:159 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l44:s160:k159:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l44:s162:k160:d1:s0)	 _forcond_11($51) :
led.c(l44:s163:k343:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l44:s164:k344:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l44:s165:k345:d1:s0)		iTemp47 [k55 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l44:s166:k162:d1:s0)		if iTemp47 [k55 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_11($12)
led.c(l44:s167:k346:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l44:s168:k347:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l44:s169:k348:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l44:s170:k169:d1:s0)		 goto _forcond_11($51)
led.c(l44:s171:k170:d0:s0)	 _forbreak_11($12) :
led.c(l45:s172:k171:d0:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
led.c(l45:s173:k172:d0:s0)		iTemp50 [k58 lr173:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l46:s174:k173:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l46:s176:k174:d1:s0)	 _forcond_12($54) :
led.c(l46:s177:k349:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s178:k350:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l46:s179:k351:d1:s0)		iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l46:s180:k176:d1:s0)		if iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_12($13)
led.c(l46:s181:k352:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s182:k353:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l46:s183:k354:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l46:s184:k183:d1:s0)		 goto _forcond_12($54)
led.c(l46:s185:k184:d0:s0)	 _forbreak_12($13) :
led.c(l47:s186:k185:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l47:s187:k186:d0:s0)		iTemp54 [k62 lr187:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l48:s188:k187:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l48:s190:k188:d1:s0)	 _forcond_13($57) :
led.c(l48:s191:k355:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s192:k356:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l48:s193:k357:d1:s0)		iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l48:s194:k190:d1:s0)		if iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_13($14)
led.c(l48:s195:k358:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s196:k359:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l48:s197:k360:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l48:s198:k197:d1:s0)		 goto _forcond_13($57)
led.c(l48:s199:k198:d0:s0)	 _forbreak_13($14) :
led.c(l49:s200:k199:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l49:s201:k200:d0:s0)		iTemp58 [k66 lr201:201 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l50:s202:k201:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l50:s204:k202:d1:s0)	 _forcond_14($60) :
led.c(l50:s205:k361:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s206:k362:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l50:s207:k363:d1:s0)		iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l50:s208:k204:d1:s0)		if iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_14($15)
led.c(l50:s209:k364:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s210:k365:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l50:s211:k366:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l50:s212:k211:d1:s0)		 goto _forcond_14($60)
led.c(l50:s213:k212:d0:s0)	 _forbreak_14($15) :
led.c(l51:s214:k213:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l51:s215:k214:d0:s0)		iTemp62 [k70 lr215:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l52:s216:k215:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l52:s218:k216:d1:s0)	 _forcond_15($63) :
led.c(l52:s219:k367:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s220:k368:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l52:s221:k369:d1:s0)		iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l52:s222:k218:d1:s0)		if iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _return($65)
led.c(l52:s223:k370:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s224:k371:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l52:s225:k372:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l52:s226:k225:d1:s0)		 goto _forcond_15($63)
led.c(l52:s227:k227:d0:s0)	 _return($65) :
led.c(l52:s228:k228:d0:s0)		eproc _sequencial [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}

----------------------------------------------------------------
Basic Block _forbreak_3 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 17 : bbnum = 16 1st iCode = 59 , last iCode = 62
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (61) }

local defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (60) (61) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (47) (49) (55) (56) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (61) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (60) }

----------------------------------------------------------------
led.c(l28:s59:k58:d0:s0)	 _forbreak_3($4) :
led.c(l29:s60:k59:d0:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
led.c(l29:s61:k60:d0:s0)		iTemp18 [k24 lr61:61 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l30:s62:k61:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l30:s64:k62:d1:s0)	 _forcond_4($30) :
led.c(l30:s65:k301:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l30:s66:k302:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l30:s67:k303:d1:s0)		iTemp19 [k25 lr67:68 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l30:s68:k64:d1:s0)		if iTemp19 [k25 lr67:68 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_4($5)
led.c(l30:s69:k304:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l30:s70:k305:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l30:s71:k306:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l30:s72:k71:d1:s0)		 goto _forcond_4($30)
led.c(l30:s73:k72:d0:s0)	 _forbreak_4($5) :
led.c(l31:s74:k73:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l31:s75:k74:d0:s0)		iTemp22 [k28 lr75:75 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l32:s76:k75:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l32:s78:k76:d1:s0)	 _forcond_5($33) :
led.c(l32:s79:k307:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l32:s80:k308:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l32:s81:k309:d1:s0)		iTemp23 [k29 lr81:82 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l32:s82:k78:d1:s0)		if iTemp23 [k29 lr81:82 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_5($6)
led.c(l32:s83:k310:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l32:s84:k311:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l32:s85:k312:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l32:s86:k85:d1:s0)		 goto _forcond_5($33)
led.c(l32:s87:k86:d0:s0)	 _forbreak_5($6) :
led.c(l33:s88:k87:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l33:s89:k88:d0:s0)		iTemp26 [k32 lr89:89 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l34:s90:k89:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l34:s92:k90:d1:s0)	 _forcond_6($36) :
led.c(l34:s93:k313:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l34:s94:k314:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l34:s95:k315:d1:s0)		iTemp27 [k33 lr95:96 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l34:s96:k92:d1:s0)		if iTemp27 [k33 lr95:96 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_6($7)
led.c(l34:s97:k316:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l34:s98:k317:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l34:s99:k318:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l34:s100:k99:d1:s0)		 goto _forcond_6($36)
led.c(l34:s101:k100:d0:s0)	 _forbreak_6($7) :
led.c(l35:s102:k101:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l35:s103:k102:d0:s0)		iTemp30 [k36 lr103:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l36:s104:k103:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l36:s106:k104:d1:s0)	 _forcond_7($39) :
led.c(l36:s107:k319:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l36:s108:k320:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l36:s109:k321:d1:s0)		iTemp31 [k37 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l36:s110:k106:d1:s0)		if iTemp31 [k37 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_7($8)
led.c(l36:s111:k322:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l36:s112:k323:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l36:s113:k324:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l36:s114:k113:d1:s0)		 goto _forcond_7($39)
led.c(l36:s115:k114:d0:s0)	 _forbreak_7($8) :
led.c(l37:s116:k115:d0:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
led.c(l37:s117:k116:d0:s0)		iTemp34 [k42 lr117:117 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l38:s118:k117:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l38:s120:k118:d1:s0)	 _forcond_8($42) :
led.c(l38:s121:k325:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l38:s122:k326:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l38:s123:k327:d1:s0)		iTemp35 [k43 lr123:124 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l38:s124:k120:d1:s0)		if iTemp35 [k43 lr123:124 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_8($9)
led.c(l38:s125:k328:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l38:s126:k329:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l38:s127:k330:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l38:s128:k127:d1:s0)		 goto _forcond_8($42)
led.c(l38:s129:k128:d0:s0)	 _forbreak_8($9) :
led.c(l39:s130:k129:d0:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
led.c(l39:s131:k130:d0:s0)		iTemp38 [k46 lr131:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l40:s132:k131:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l40:s134:k132:d1:s0)	 _forcond_9($45) :
led.c(l40:s135:k331:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l40:s136:k332:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l40:s137:k333:d1:s0)		iTemp39 [k47 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l40:s138:k134:d1:s0)		if iTemp39 [k47 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_9($10)
led.c(l40:s139:k334:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l40:s140:k335:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l40:s141:k336:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l40:s142:k141:d1:s0)		 goto _forcond_9($45)
led.c(l40:s143:k142:d0:s0)	 _forbreak_9($10) :
led.c(l41:s144:k143:d0:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
led.c(l41:s145:k144:d0:s0)		iTemp42 [k50 lr145:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l42:s146:k145:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l42:s148:k146:d1:s0)	 _forcond_10($48) :
led.c(l42:s149:k337:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l42:s150:k338:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l42:s151:k339:d1:s0)		iTemp43 [k51 lr151:152 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l42:s152:k148:d1:s0)		if iTemp43 [k51 lr151:152 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_10($11)
led.c(l42:s153:k340:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l42:s154:k341:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l42:s155:k342:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l42:s156:k155:d1:s0)		 goto _forcond_10($48)
led.c(l42:s157:k156:d0:s0)	 _forbreak_10($11) :
led.c(l43:s158:k157:d0:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
led.c(l43:s159:k158:d0:s0)		iTemp46 [k54 lr159:159 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l44:s160:k159:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l44:s162:k160:d1:s0)	 _forcond_11($51) :
led.c(l44:s163:k343:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l44:s164:k344:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l44:s165:k345:d1:s0)		iTemp47 [k55 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l44:s166:k162:d1:s0)		if iTemp47 [k55 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_11($12)
led.c(l44:s167:k346:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l44:s168:k347:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l44:s169:k348:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l44:s170:k169:d1:s0)		 goto _forcond_11($51)
led.c(l44:s171:k170:d0:s0)	 _forbreak_11($12) :
led.c(l45:s172:k171:d0:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
led.c(l45:s173:k172:d0:s0)		iTemp50 [k58 lr173:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l46:s174:k173:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l46:s176:k174:d1:s0)	 _forcond_12($54) :
led.c(l46:s177:k349:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s178:k350:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l46:s179:k351:d1:s0)		iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l46:s180:k176:d1:s0)		if iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_12($13)
led.c(l46:s181:k352:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s182:k353:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l46:s183:k354:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l46:s184:k183:d1:s0)		 goto _forcond_12($54)
led.c(l46:s185:k184:d0:s0)	 _forbreak_12($13) :
led.c(l47:s186:k185:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l47:s187:k186:d0:s0)		iTemp54 [k62 lr187:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l48:s188:k187:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l48:s190:k188:d1:s0)	 _forcond_13($57) :
led.c(l48:s191:k355:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s192:k356:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l48:s193:k357:d1:s0)		iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l48:s194:k190:d1:s0)		if iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_13($14)
led.c(l48:s195:k358:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s196:k359:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l48:s197:k360:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l48:s198:k197:d1:s0)		 goto _forcond_13($57)
led.c(l48:s199:k198:d0:s0)	 _forbreak_13($14) :
led.c(l49:s200:k199:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l49:s201:k200:d0:s0)		iTemp58 [k66 lr201:201 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l50:s202:k201:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l50:s204:k202:d1:s0)	 _forcond_14($60) :
led.c(l50:s205:k361:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s206:k362:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l50:s207:k363:d1:s0)		iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l50:s208:k204:d1:s0)		if iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_14($15)
led.c(l50:s209:k364:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s210:k365:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l50:s211:k366:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l50:s212:k211:d1:s0)		 goto _forcond_14($60)
led.c(l50:s213:k212:d0:s0)	 _forbreak_14($15) :
led.c(l51:s214:k213:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l51:s215:k214:d0:s0)		iTemp62 [k70 lr215:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l52:s216:k215:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l52:s218:k216:d1:s0)	 _forcond_15($63) :
led.c(l52:s219:k367:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s220:k368:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l52:s221:k369:d1:s0)		iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l52:s222:k218:d1:s0)		if iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _return($65)
led.c(l52:s223:k370:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s224:k371:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l52:s225:k372:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l52:s226:k225:d1:s0)		 goto _forcond_15($63)
led.c(l52:s227:k227:d0:s0)	 _return($65) :
led.c(l52:s228:k228:d0:s0)		eproc _sequencial [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}

----------------------------------------------------------------
Basic Block preHeaderLbl36 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 18 : bbnum = 17 1st iCode = 63 , last iCode = 63
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { }

local defines bitVector :
pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (61) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (61) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { }

----------------------------------------------------------------
led.c(l30:s63:k265:d0:s0)	 preHeaderLbl36($140) :
led.c(l30:s64:k62:d1:s0)	 _forcond_4($30) :
led.c(l30:s65:k301:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l30:s66:k302:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l30:s67:k303:d1:s0)		iTemp19 [k25 lr67:68 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l30:s68:k64:d1:s0)		if iTemp19 [k25 lr67:68 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_4($5)
led.c(l30:s69:k304:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l30:s70:k305:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l30:s71:k306:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l30:s72:k71:d1:s0)		 goto _forcond_4($30)
led.c(l30:s73:k72:d0:s0)	 _forbreak_4($5) :
led.c(l31:s74:k73:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l31:s75:k74:d0:s0)		iTemp22 [k28 lr75:75 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l32:s76:k75:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l32:s78:k76:d1:s0)	 _forcond_5($33) :
led.c(l32:s79:k307:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l32:s80:k308:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l32:s81:k309:d1:s0)		iTemp23 [k29 lr81:82 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l32:s82:k78:d1:s0)		if iTemp23 [k29 lr81:82 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_5($6)
led.c(l32:s83:k310:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l32:s84:k311:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l32:s85:k312:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l32:s86:k85:d1:s0)		 goto _forcond_5($33)
led.c(l32:s87:k86:d0:s0)	 _forbreak_5($6) :
led.c(l33:s88:k87:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l33:s89:k88:d0:s0)		iTemp26 [k32 lr89:89 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l34:s90:k89:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l34:s92:k90:d1:s0)	 _forcond_6($36) :
led.c(l34:s93:k313:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l34:s94:k314:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l34:s95:k315:d1:s0)		iTemp27 [k33 lr95:96 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l34:s96:k92:d1:s0)		if iTemp27 [k33 lr95:96 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_6($7)
led.c(l34:s97:k316:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l34:s98:k317:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l34:s99:k318:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l34:s100:k99:d1:s0)		 goto _forcond_6($36)
led.c(l34:s101:k100:d0:s0)	 _forbreak_6($7) :
led.c(l35:s102:k101:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l35:s103:k102:d0:s0)		iTemp30 [k36 lr103:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l36:s104:k103:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l36:s106:k104:d1:s0)	 _forcond_7($39) :
led.c(l36:s107:k319:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l36:s108:k320:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l36:s109:k321:d1:s0)		iTemp31 [k37 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l36:s110:k106:d1:s0)		if iTemp31 [k37 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_7($8)
led.c(l36:s111:k322:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l36:s112:k323:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l36:s113:k324:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l36:s114:k113:d1:s0)		 goto _forcond_7($39)
led.c(l36:s115:k114:d0:s0)	 _forbreak_7($8) :
led.c(l37:s116:k115:d0:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
led.c(l37:s117:k116:d0:s0)		iTemp34 [k42 lr117:117 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l38:s118:k117:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l38:s120:k118:d1:s0)	 _forcond_8($42) :
led.c(l38:s121:k325:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l38:s122:k326:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l38:s123:k327:d1:s0)		iTemp35 [k43 lr123:124 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l38:s124:k120:d1:s0)		if iTemp35 [k43 lr123:124 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_8($9)
led.c(l38:s125:k328:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l38:s126:k329:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l38:s127:k330:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l38:s128:k127:d1:s0)		 goto _forcond_8($42)
led.c(l38:s129:k128:d0:s0)	 _forbreak_8($9) :
led.c(l39:s130:k129:d0:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
led.c(l39:s131:k130:d0:s0)		iTemp38 [k46 lr131:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l40:s132:k131:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l40:s134:k132:d1:s0)	 _forcond_9($45) :
led.c(l40:s135:k331:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l40:s136:k332:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l40:s137:k333:d1:s0)		iTemp39 [k47 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l40:s138:k134:d1:s0)		if iTemp39 [k47 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_9($10)
led.c(l40:s139:k334:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l40:s140:k335:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l40:s141:k336:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l40:s142:k141:d1:s0)		 goto _forcond_9($45)
led.c(l40:s143:k142:d0:s0)	 _forbreak_9($10) :
led.c(l41:s144:k143:d0:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
led.c(l41:s145:k144:d0:s0)		iTemp42 [k50 lr145:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l42:s146:k145:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l42:s148:k146:d1:s0)	 _forcond_10($48) :
led.c(l42:s149:k337:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l42:s150:k338:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l42:s151:k339:d1:s0)		iTemp43 [k51 lr151:152 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l42:s152:k148:d1:s0)		if iTemp43 [k51 lr151:152 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_10($11)
led.c(l42:s153:k340:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l42:s154:k341:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l42:s155:k342:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l42:s156:k155:d1:s0)		 goto _forcond_10($48)
led.c(l42:s157:k156:d0:s0)	 _forbreak_10($11) :
led.c(l43:s158:k157:d0:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
led.c(l43:s159:k158:d0:s0)		iTemp46 [k54 lr159:159 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l44:s160:k159:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l44:s162:k160:d1:s0)	 _forcond_11($51) :
led.c(l44:s163:k343:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l44:s164:k344:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l44:s165:k345:d1:s0)		iTemp47 [k55 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l44:s166:k162:d1:s0)		if iTemp47 [k55 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_11($12)
led.c(l44:s167:k346:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l44:s168:k347:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l44:s169:k348:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l44:s170:k169:d1:s0)		 goto _forcond_11($51)
led.c(l44:s171:k170:d0:s0)	 _forbreak_11($12) :
led.c(l45:s172:k171:d0:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
led.c(l45:s173:k172:d0:s0)		iTemp50 [k58 lr173:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l46:s174:k173:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l46:s176:k174:d1:s0)	 _forcond_12($54) :
led.c(l46:s177:k349:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s178:k350:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l46:s179:k351:d1:s0)		iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l46:s180:k176:d1:s0)		if iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_12($13)
led.c(l46:s181:k352:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s182:k353:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l46:s183:k354:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l46:s184:k183:d1:s0)		 goto _forcond_12($54)
led.c(l46:s185:k184:d0:s0)	 _forbreak_12($13) :
led.c(l47:s186:k185:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l47:s187:k186:d0:s0)		iTemp54 [k62 lr187:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l48:s188:k187:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l48:s190:k188:d1:s0)	 _forcond_13($57) :
led.c(l48:s191:k355:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s192:k356:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l48:s193:k357:d1:s0)		iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l48:s194:k190:d1:s0)		if iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_13($14)
led.c(l48:s195:k358:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s196:k359:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l48:s197:k360:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l48:s198:k197:d1:s0)		 goto _forcond_13($57)
led.c(l48:s199:k198:d0:s0)	 _forbreak_13($14) :
led.c(l49:s200:k199:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l49:s201:k200:d0:s0)		iTemp58 [k66 lr201:201 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l50:s202:k201:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l50:s204:k202:d1:s0)	 _forcond_14($60) :
led.c(l50:s205:k361:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s206:k362:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l50:s207:k363:d1:s0)		iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l50:s208:k204:d1:s0)		if iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_14($15)
led.c(l50:s209:k364:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s210:k365:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l50:s211:k366:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l50:s212:k211:d1:s0)		 goto _forcond_14($60)
led.c(l50:s213:k212:d0:s0)	 _forbreak_14($15) :
led.c(l51:s214:k213:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l51:s215:k214:d0:s0)		iTemp62 [k70 lr215:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l52:s216:k215:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l52:s218:k216:d1:s0)	 _forcond_15($63) :
led.c(l52:s219:k367:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s220:k368:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l52:s221:k369:d1:s0)		iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l52:s222:k218:d1:s0)		if iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _return($65)
led.c(l52:s223:k370:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s224:k371:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l52:s225:k372:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l52:s226:k225:d1:s0)		 goto _forcond_15($63)
led.c(l52:s227:k227:d0:s0)	 _return($65) :
led.c(l52:s228:k228:d0:s0)		eproc _sequencial [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}

----------------------------------------------------------------
Basic Block _forcond_4 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 19 : bbnum = 18 1st iCode = 64 , last iCode = 68
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (63) }

local defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (63) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (61) (63) (69) (70) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (61) (63) (69) (70) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (61) (63) (70) }

----------------------------------------------------------------
led.c(l30:s64:k62:d1:s0)	 _forcond_4($30) :
led.c(l30:s65:k301:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l30:s66:k302:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l30:s67:k303:d1:s0)		iTemp19 [k25 lr67:68 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l30:s68:k64:d1:s0)		if iTemp19 [k25 lr67:68 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_4($5)
led.c(l30:s69:k304:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l30:s70:k305:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l30:s71:k306:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l30:s72:k71:d1:s0)		 goto _forcond_4($30)
led.c(l30:s73:k72:d0:s0)	 _forbreak_4($5) :
led.c(l31:s74:k73:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l31:s75:k74:d0:s0)		iTemp22 [k28 lr75:75 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l32:s76:k75:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l32:s78:k76:d1:s0)	 _forcond_5($33) :
led.c(l32:s79:k307:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l32:s80:k308:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l32:s81:k309:d1:s0)		iTemp23 [k29 lr81:82 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l32:s82:k78:d1:s0)		if iTemp23 [k29 lr81:82 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_5($6)
led.c(l32:s83:k310:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l32:s84:k311:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l32:s85:k312:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l32:s86:k85:d1:s0)		 goto _forcond_5($33)
led.c(l32:s87:k86:d0:s0)	 _forbreak_5($6) :
led.c(l33:s88:k87:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l33:s89:k88:d0:s0)		iTemp26 [k32 lr89:89 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l34:s90:k89:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l34:s92:k90:d1:s0)	 _forcond_6($36) :
led.c(l34:s93:k313:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l34:s94:k314:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l34:s95:k315:d1:s0)		iTemp27 [k33 lr95:96 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l34:s96:k92:d1:s0)		if iTemp27 [k33 lr95:96 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_6($7)
led.c(l34:s97:k316:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l34:s98:k317:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l34:s99:k318:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l34:s100:k99:d1:s0)		 goto _forcond_6($36)
led.c(l34:s101:k100:d0:s0)	 _forbreak_6($7) :
led.c(l35:s102:k101:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l35:s103:k102:d0:s0)		iTemp30 [k36 lr103:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l36:s104:k103:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l36:s106:k104:d1:s0)	 _forcond_7($39) :
led.c(l36:s107:k319:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l36:s108:k320:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l36:s109:k321:d1:s0)		iTemp31 [k37 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l36:s110:k106:d1:s0)		if iTemp31 [k37 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_7($8)
led.c(l36:s111:k322:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l36:s112:k323:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l36:s113:k324:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l36:s114:k113:d1:s0)		 goto _forcond_7($39)
led.c(l36:s115:k114:d0:s0)	 _forbreak_7($8) :
led.c(l37:s116:k115:d0:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
led.c(l37:s117:k116:d0:s0)		iTemp34 [k42 lr117:117 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l38:s118:k117:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l38:s120:k118:d1:s0)	 _forcond_8($42) :
led.c(l38:s121:k325:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l38:s122:k326:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l38:s123:k327:d1:s0)		iTemp35 [k43 lr123:124 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l38:s124:k120:d1:s0)		if iTemp35 [k43 lr123:124 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_8($9)
led.c(l38:s125:k328:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l38:s126:k329:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l38:s127:k330:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l38:s128:k127:d1:s0)		 goto _forcond_8($42)
led.c(l38:s129:k128:d0:s0)	 _forbreak_8($9) :
led.c(l39:s130:k129:d0:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
led.c(l39:s131:k130:d0:s0)		iTemp38 [k46 lr131:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l40:s132:k131:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l40:s134:k132:d1:s0)	 _forcond_9($45) :
led.c(l40:s135:k331:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l40:s136:k332:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l40:s137:k333:d1:s0)		iTemp39 [k47 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l40:s138:k134:d1:s0)		if iTemp39 [k47 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_9($10)
led.c(l40:s139:k334:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l40:s140:k335:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l40:s141:k336:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l40:s142:k141:d1:s0)		 goto _forcond_9($45)
led.c(l40:s143:k142:d0:s0)	 _forbreak_9($10) :
led.c(l41:s144:k143:d0:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
led.c(l41:s145:k144:d0:s0)		iTemp42 [k50 lr145:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l42:s146:k145:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l42:s148:k146:d1:s0)	 _forcond_10($48) :
led.c(l42:s149:k337:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l42:s150:k338:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l42:s151:k339:d1:s0)		iTemp43 [k51 lr151:152 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l42:s152:k148:d1:s0)		if iTemp43 [k51 lr151:152 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_10($11)
led.c(l42:s153:k340:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l42:s154:k341:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l42:s155:k342:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l42:s156:k155:d1:s0)		 goto _forcond_10($48)
led.c(l42:s157:k156:d0:s0)	 _forbreak_10($11) :
led.c(l43:s158:k157:d0:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
led.c(l43:s159:k158:d0:s0)		iTemp46 [k54 lr159:159 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l44:s160:k159:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l44:s162:k160:d1:s0)	 _forcond_11($51) :
led.c(l44:s163:k343:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l44:s164:k344:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l44:s165:k345:d1:s0)		iTemp47 [k55 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l44:s166:k162:d1:s0)		if iTemp47 [k55 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_11($12)
led.c(l44:s167:k346:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l44:s168:k347:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l44:s169:k348:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l44:s170:k169:d1:s0)		 goto _forcond_11($51)
led.c(l44:s171:k170:d0:s0)	 _forbreak_11($12) :
led.c(l45:s172:k171:d0:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
led.c(l45:s173:k172:d0:s0)		iTemp50 [k58 lr173:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l46:s174:k173:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l46:s176:k174:d1:s0)	 _forcond_12($54) :
led.c(l46:s177:k349:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s178:k350:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l46:s179:k351:d1:s0)		iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l46:s180:k176:d1:s0)		if iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_12($13)
led.c(l46:s181:k352:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s182:k353:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l46:s183:k354:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l46:s184:k183:d1:s0)		 goto _forcond_12($54)
led.c(l46:s185:k184:d0:s0)	 _forbreak_12($13) :
led.c(l47:s186:k185:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l47:s187:k186:d0:s0)		iTemp54 [k62 lr187:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l48:s188:k187:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l48:s190:k188:d1:s0)	 _forcond_13($57) :
led.c(l48:s191:k355:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s192:k356:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l48:s193:k357:d1:s0)		iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l48:s194:k190:d1:s0)		if iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_13($14)
led.c(l48:s195:k358:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s196:k359:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l48:s197:k360:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l48:s198:k197:d1:s0)		 goto _forcond_13($57)
led.c(l48:s199:k198:d0:s0)	 _forbreak_13($14) :
led.c(l49:s200:k199:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l49:s201:k200:d0:s0)		iTemp58 [k66 lr201:201 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l50:s202:k201:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l50:s204:k202:d1:s0)	 _forcond_14($60) :
led.c(l50:s205:k361:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s206:k362:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l50:s207:k363:d1:s0)		iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l50:s208:k204:d1:s0)		if iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_14($15)
led.c(l50:s209:k364:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s210:k365:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l50:s211:k366:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l50:s212:k211:d1:s0)		 goto _forcond_14($60)
led.c(l50:s213:k212:d0:s0)	 _forbreak_14($15) :
led.c(l51:s214:k213:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l51:s215:k214:d0:s0)		iTemp62 [k70 lr215:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l52:s216:k215:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l52:s218:k216:d1:s0)	 _forcond_15($63) :
led.c(l52:s219:k367:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s220:k368:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l52:s221:k369:d1:s0)		iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l52:s222:k218:d1:s0)		if iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _return($65)
led.c(l52:s223:k370:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s224:k371:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l52:s225:k372:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l52:s226:k225:d1:s0)		 goto _forcond_15($63)
led.c(l52:s227:k227:d0:s0)	 _return($65) :
led.c(l52:s228:k228:d0:s0)		eproc _sequencial [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}

----------------------------------------------------------------
Basic Block _eBBlock36 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 20 : bbnum = 19 1st iCode = 69 , last iCode = 72
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (69) (70) }

local defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (69) (70) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (61) (63) (69) (70) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (70) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (61) (69) (70) }

----------------------------------------------------------------
led.c(l30:s69:k304:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l30:s70:k305:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l30:s71:k306:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l30:s72:k71:d1:s0)		 goto _forcond_4($30)
led.c(l30:s73:k72:d0:s0)	 _forbreak_4($5) :
led.c(l31:s74:k73:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l31:s75:k74:d0:s0)		iTemp22 [k28 lr75:75 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l32:s76:k75:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l32:s78:k76:d1:s0)	 _forcond_5($33) :
led.c(l32:s79:k307:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l32:s80:k308:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l32:s81:k309:d1:s0)		iTemp23 [k29 lr81:82 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l32:s82:k78:d1:s0)		if iTemp23 [k29 lr81:82 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_5($6)
led.c(l32:s83:k310:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l32:s84:k311:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l32:s85:k312:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l32:s86:k85:d1:s0)		 goto _forcond_5($33)
led.c(l32:s87:k86:d0:s0)	 _forbreak_5($6) :
led.c(l33:s88:k87:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l33:s89:k88:d0:s0)		iTemp26 [k32 lr89:89 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l34:s90:k89:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l34:s92:k90:d1:s0)	 _forcond_6($36) :
led.c(l34:s93:k313:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l34:s94:k314:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l34:s95:k315:d1:s0)		iTemp27 [k33 lr95:96 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l34:s96:k92:d1:s0)		if iTemp27 [k33 lr95:96 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_6($7)
led.c(l34:s97:k316:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l34:s98:k317:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l34:s99:k318:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l34:s100:k99:d1:s0)		 goto _forcond_6($36)
led.c(l34:s101:k100:d0:s0)	 _forbreak_6($7) :
led.c(l35:s102:k101:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l35:s103:k102:d0:s0)		iTemp30 [k36 lr103:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l36:s104:k103:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l36:s106:k104:d1:s0)	 _forcond_7($39) :
led.c(l36:s107:k319:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l36:s108:k320:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l36:s109:k321:d1:s0)		iTemp31 [k37 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l36:s110:k106:d1:s0)		if iTemp31 [k37 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_7($8)
led.c(l36:s111:k322:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l36:s112:k323:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l36:s113:k324:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l36:s114:k113:d1:s0)		 goto _forcond_7($39)
led.c(l36:s115:k114:d0:s0)	 _forbreak_7($8) :
led.c(l37:s116:k115:d0:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
led.c(l37:s117:k116:d0:s0)		iTemp34 [k42 lr117:117 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l38:s118:k117:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l38:s120:k118:d1:s0)	 _forcond_8($42) :
led.c(l38:s121:k325:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l38:s122:k326:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l38:s123:k327:d1:s0)		iTemp35 [k43 lr123:124 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l38:s124:k120:d1:s0)		if iTemp35 [k43 lr123:124 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_8($9)
led.c(l38:s125:k328:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l38:s126:k329:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l38:s127:k330:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l38:s128:k127:d1:s0)		 goto _forcond_8($42)
led.c(l38:s129:k128:d0:s0)	 _forbreak_8($9) :
led.c(l39:s130:k129:d0:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
led.c(l39:s131:k130:d0:s0)		iTemp38 [k46 lr131:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l40:s132:k131:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l40:s134:k132:d1:s0)	 _forcond_9($45) :
led.c(l40:s135:k331:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l40:s136:k332:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l40:s137:k333:d1:s0)		iTemp39 [k47 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l40:s138:k134:d1:s0)		if iTemp39 [k47 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_9($10)
led.c(l40:s139:k334:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l40:s140:k335:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l40:s141:k336:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l40:s142:k141:d1:s0)		 goto _forcond_9($45)
led.c(l40:s143:k142:d0:s0)	 _forbreak_9($10) :
led.c(l41:s144:k143:d0:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
led.c(l41:s145:k144:d0:s0)		iTemp42 [k50 lr145:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l42:s146:k145:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l42:s148:k146:d1:s0)	 _forcond_10($48) :
led.c(l42:s149:k337:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l42:s150:k338:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l42:s151:k339:d1:s0)		iTemp43 [k51 lr151:152 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l42:s152:k148:d1:s0)		if iTemp43 [k51 lr151:152 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_10($11)
led.c(l42:s153:k340:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l42:s154:k341:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l42:s155:k342:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l42:s156:k155:d1:s0)		 goto _forcond_10($48)
led.c(l42:s157:k156:d0:s0)	 _forbreak_10($11) :
led.c(l43:s158:k157:d0:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
led.c(l43:s159:k158:d0:s0)		iTemp46 [k54 lr159:159 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l44:s160:k159:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l44:s162:k160:d1:s0)	 _forcond_11($51) :
led.c(l44:s163:k343:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l44:s164:k344:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l44:s165:k345:d1:s0)		iTemp47 [k55 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l44:s166:k162:d1:s0)		if iTemp47 [k55 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_11($12)
led.c(l44:s167:k346:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l44:s168:k347:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l44:s169:k348:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l44:s170:k169:d1:s0)		 goto _forcond_11($51)
led.c(l44:s171:k170:d0:s0)	 _forbreak_11($12) :
led.c(l45:s172:k171:d0:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
led.c(l45:s173:k172:d0:s0)		iTemp50 [k58 lr173:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l46:s174:k173:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l46:s176:k174:d1:s0)	 _forcond_12($54) :
led.c(l46:s177:k349:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s178:k350:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l46:s179:k351:d1:s0)		iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l46:s180:k176:d1:s0)		if iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_12($13)
led.c(l46:s181:k352:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s182:k353:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l46:s183:k354:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l46:s184:k183:d1:s0)		 goto _forcond_12($54)
led.c(l46:s185:k184:d0:s0)	 _forbreak_12($13) :
led.c(l47:s186:k185:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l47:s187:k186:d0:s0)		iTemp54 [k62 lr187:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l48:s188:k187:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l48:s190:k188:d1:s0)	 _forcond_13($57) :
led.c(l48:s191:k355:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s192:k356:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l48:s193:k357:d1:s0)		iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l48:s194:k190:d1:s0)		if iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_13($14)
led.c(l48:s195:k358:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s196:k359:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l48:s197:k360:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l48:s198:k197:d1:s0)		 goto _forcond_13($57)
led.c(l48:s199:k198:d0:s0)	 _forbreak_13($14) :
led.c(l49:s200:k199:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l49:s201:k200:d0:s0)		iTemp58 [k66 lr201:201 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l50:s202:k201:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l50:s204:k202:d1:s0)	 _forcond_14($60) :
led.c(l50:s205:k361:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s206:k362:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l50:s207:k363:d1:s0)		iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l50:s208:k204:d1:s0)		if iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_14($15)
led.c(l50:s209:k364:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s210:k365:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l50:s211:k366:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l50:s212:k211:d1:s0)		 goto _forcond_14($60)
led.c(l50:s213:k212:d0:s0)	 _forbreak_14($15) :
led.c(l51:s214:k213:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l51:s215:k214:d0:s0)		iTemp62 [k70 lr215:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l52:s216:k215:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l52:s218:k216:d1:s0)	 _forcond_15($63) :
led.c(l52:s219:k367:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s220:k368:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l52:s221:k369:d1:s0)		iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l52:s222:k218:d1:s0)		if iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _return($65)
led.c(l52:s223:k370:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s224:k371:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l52:s225:k372:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l52:s226:k225:d1:s0)		 goto _forcond_15($63)
led.c(l52:s227:k227:d0:s0)	 _return($65) :
led.c(l52:s228:k228:d0:s0)		eproc _sequencial [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}

----------------------------------------------------------------
Basic Block _forbreak_4 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 21 : bbnum = 20 1st iCode = 73 , last iCode = 76
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (75) }

local defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (74) (75) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (61) (63) (69) (70) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (75) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (74) }

----------------------------------------------------------------
led.c(l30:s73:k72:d0:s0)	 _forbreak_4($5) :
led.c(l31:s74:k73:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l31:s75:k74:d0:s0)		iTemp22 [k28 lr75:75 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l32:s76:k75:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l32:s78:k76:d1:s0)	 _forcond_5($33) :
led.c(l32:s79:k307:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l32:s80:k308:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l32:s81:k309:d1:s0)		iTemp23 [k29 lr81:82 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l32:s82:k78:d1:s0)		if iTemp23 [k29 lr81:82 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_5($6)
led.c(l32:s83:k310:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l32:s84:k311:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l32:s85:k312:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l32:s86:k85:d1:s0)		 goto _forcond_5($33)
led.c(l32:s87:k86:d0:s0)	 _forbreak_5($6) :
led.c(l33:s88:k87:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l33:s89:k88:d0:s0)		iTemp26 [k32 lr89:89 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l34:s90:k89:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l34:s92:k90:d1:s0)	 _forcond_6($36) :
led.c(l34:s93:k313:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l34:s94:k314:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l34:s95:k315:d1:s0)		iTemp27 [k33 lr95:96 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l34:s96:k92:d1:s0)		if iTemp27 [k33 lr95:96 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_6($7)
led.c(l34:s97:k316:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l34:s98:k317:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l34:s99:k318:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l34:s100:k99:d1:s0)		 goto _forcond_6($36)
led.c(l34:s101:k100:d0:s0)	 _forbreak_6($7) :
led.c(l35:s102:k101:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l35:s103:k102:d0:s0)		iTemp30 [k36 lr103:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l36:s104:k103:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l36:s106:k104:d1:s0)	 _forcond_7($39) :
led.c(l36:s107:k319:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l36:s108:k320:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l36:s109:k321:d1:s0)		iTemp31 [k37 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l36:s110:k106:d1:s0)		if iTemp31 [k37 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_7($8)
led.c(l36:s111:k322:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l36:s112:k323:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l36:s113:k324:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l36:s114:k113:d1:s0)		 goto _forcond_7($39)
led.c(l36:s115:k114:d0:s0)	 _forbreak_7($8) :
led.c(l37:s116:k115:d0:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
led.c(l37:s117:k116:d0:s0)		iTemp34 [k42 lr117:117 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l38:s118:k117:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l38:s120:k118:d1:s0)	 _forcond_8($42) :
led.c(l38:s121:k325:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l38:s122:k326:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l38:s123:k327:d1:s0)		iTemp35 [k43 lr123:124 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l38:s124:k120:d1:s0)		if iTemp35 [k43 lr123:124 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_8($9)
led.c(l38:s125:k328:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l38:s126:k329:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l38:s127:k330:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l38:s128:k127:d1:s0)		 goto _forcond_8($42)
led.c(l38:s129:k128:d0:s0)	 _forbreak_8($9) :
led.c(l39:s130:k129:d0:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
led.c(l39:s131:k130:d0:s0)		iTemp38 [k46 lr131:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l40:s132:k131:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l40:s134:k132:d1:s0)	 _forcond_9($45) :
led.c(l40:s135:k331:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l40:s136:k332:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l40:s137:k333:d1:s0)		iTemp39 [k47 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l40:s138:k134:d1:s0)		if iTemp39 [k47 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_9($10)
led.c(l40:s139:k334:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l40:s140:k335:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l40:s141:k336:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l40:s142:k141:d1:s0)		 goto _forcond_9($45)
led.c(l40:s143:k142:d0:s0)	 _forbreak_9($10) :
led.c(l41:s144:k143:d0:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
led.c(l41:s145:k144:d0:s0)		iTemp42 [k50 lr145:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l42:s146:k145:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l42:s148:k146:d1:s0)	 _forcond_10($48) :
led.c(l42:s149:k337:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l42:s150:k338:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l42:s151:k339:d1:s0)		iTemp43 [k51 lr151:152 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l42:s152:k148:d1:s0)		if iTemp43 [k51 lr151:152 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_10($11)
led.c(l42:s153:k340:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l42:s154:k341:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l42:s155:k342:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l42:s156:k155:d1:s0)		 goto _forcond_10($48)
led.c(l42:s157:k156:d0:s0)	 _forbreak_10($11) :
led.c(l43:s158:k157:d0:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
led.c(l43:s159:k158:d0:s0)		iTemp46 [k54 lr159:159 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l44:s160:k159:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l44:s162:k160:d1:s0)	 _forcond_11($51) :
led.c(l44:s163:k343:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l44:s164:k344:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l44:s165:k345:d1:s0)		iTemp47 [k55 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l44:s166:k162:d1:s0)		if iTemp47 [k55 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_11($12)
led.c(l44:s167:k346:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l44:s168:k347:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l44:s169:k348:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l44:s170:k169:d1:s0)		 goto _forcond_11($51)
led.c(l44:s171:k170:d0:s0)	 _forbreak_11($12) :
led.c(l45:s172:k171:d0:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
led.c(l45:s173:k172:d0:s0)		iTemp50 [k58 lr173:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l46:s174:k173:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l46:s176:k174:d1:s0)	 _forcond_12($54) :
led.c(l46:s177:k349:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s178:k350:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l46:s179:k351:d1:s0)		iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l46:s180:k176:d1:s0)		if iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_12($13)
led.c(l46:s181:k352:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s182:k353:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l46:s183:k354:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l46:s184:k183:d1:s0)		 goto _forcond_12($54)
led.c(l46:s185:k184:d0:s0)	 _forbreak_12($13) :
led.c(l47:s186:k185:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l47:s187:k186:d0:s0)		iTemp54 [k62 lr187:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l48:s188:k187:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l48:s190:k188:d1:s0)	 _forcond_13($57) :
led.c(l48:s191:k355:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s192:k356:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l48:s193:k357:d1:s0)		iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l48:s194:k190:d1:s0)		if iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_13($14)
led.c(l48:s195:k358:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s196:k359:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l48:s197:k360:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l48:s198:k197:d1:s0)		 goto _forcond_13($57)
led.c(l48:s199:k198:d0:s0)	 _forbreak_13($14) :
led.c(l49:s200:k199:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l49:s201:k200:d0:s0)		iTemp58 [k66 lr201:201 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l50:s202:k201:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l50:s204:k202:d1:s0)	 _forcond_14($60) :
led.c(l50:s205:k361:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s206:k362:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l50:s207:k363:d1:s0)		iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l50:s208:k204:d1:s0)		if iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_14($15)
led.c(l50:s209:k364:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s210:k365:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l50:s211:k366:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l50:s212:k211:d1:s0)		 goto _forcond_14($60)
led.c(l50:s213:k212:d0:s0)	 _forbreak_14($15) :
led.c(l51:s214:k213:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l51:s215:k214:d0:s0)		iTemp62 [k70 lr215:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l52:s216:k215:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l52:s218:k216:d1:s0)	 _forcond_15($63) :
led.c(l52:s219:k367:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s220:k368:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l52:s221:k369:d1:s0)		iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l52:s222:k218:d1:s0)		if iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _return($65)
led.c(l52:s223:k370:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s224:k371:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l52:s225:k372:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l52:s226:k225:d1:s0)		 goto _forcond_15($63)
led.c(l52:s227:k227:d0:s0)	 _return($65) :
led.c(l52:s228:k228:d0:s0)		eproc _sequencial [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}

----------------------------------------------------------------
Basic Block preHeaderLbl37 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 22 : bbnum = 21 1st iCode = 77 , last iCode = 77
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { }

local defines bitVector :
pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (75) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (75) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { }

----------------------------------------------------------------
led.c(l32:s77:k266:d0:s0)	 preHeaderLbl37($142) :
led.c(l32:s78:k76:d1:s0)	 _forcond_5($33) :
led.c(l32:s79:k307:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l32:s80:k308:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l32:s81:k309:d1:s0)		iTemp23 [k29 lr81:82 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l32:s82:k78:d1:s0)		if iTemp23 [k29 lr81:82 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_5($6)
led.c(l32:s83:k310:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l32:s84:k311:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l32:s85:k312:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l32:s86:k85:d1:s0)		 goto _forcond_5($33)
led.c(l32:s87:k86:d0:s0)	 _forbreak_5($6) :
led.c(l33:s88:k87:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l33:s89:k88:d0:s0)		iTemp26 [k32 lr89:89 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l34:s90:k89:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l34:s92:k90:d1:s0)	 _forcond_6($36) :
led.c(l34:s93:k313:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l34:s94:k314:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l34:s95:k315:d1:s0)		iTemp27 [k33 lr95:96 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l34:s96:k92:d1:s0)		if iTemp27 [k33 lr95:96 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_6($7)
led.c(l34:s97:k316:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l34:s98:k317:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l34:s99:k318:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l34:s100:k99:d1:s0)		 goto _forcond_6($36)
led.c(l34:s101:k100:d0:s0)	 _forbreak_6($7) :
led.c(l35:s102:k101:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l35:s103:k102:d0:s0)		iTemp30 [k36 lr103:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l36:s104:k103:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l36:s106:k104:d1:s0)	 _forcond_7($39) :
led.c(l36:s107:k319:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l36:s108:k320:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l36:s109:k321:d1:s0)		iTemp31 [k37 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l36:s110:k106:d1:s0)		if iTemp31 [k37 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_7($8)
led.c(l36:s111:k322:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l36:s112:k323:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l36:s113:k324:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l36:s114:k113:d1:s0)		 goto _forcond_7($39)
led.c(l36:s115:k114:d0:s0)	 _forbreak_7($8) :
led.c(l37:s116:k115:d0:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
led.c(l37:s117:k116:d0:s0)		iTemp34 [k42 lr117:117 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l38:s118:k117:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l38:s120:k118:d1:s0)	 _forcond_8($42) :
led.c(l38:s121:k325:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l38:s122:k326:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l38:s123:k327:d1:s0)		iTemp35 [k43 lr123:124 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l38:s124:k120:d1:s0)		if iTemp35 [k43 lr123:124 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_8($9)
led.c(l38:s125:k328:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l38:s126:k329:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l38:s127:k330:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l38:s128:k127:d1:s0)		 goto _forcond_8($42)
led.c(l38:s129:k128:d0:s0)	 _forbreak_8($9) :
led.c(l39:s130:k129:d0:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
led.c(l39:s131:k130:d0:s0)		iTemp38 [k46 lr131:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l40:s132:k131:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l40:s134:k132:d1:s0)	 _forcond_9($45) :
led.c(l40:s135:k331:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l40:s136:k332:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l40:s137:k333:d1:s0)		iTemp39 [k47 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l40:s138:k134:d1:s0)		if iTemp39 [k47 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_9($10)
led.c(l40:s139:k334:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l40:s140:k335:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l40:s141:k336:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l40:s142:k141:d1:s0)		 goto _forcond_9($45)
led.c(l40:s143:k142:d0:s0)	 _forbreak_9($10) :
led.c(l41:s144:k143:d0:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
led.c(l41:s145:k144:d0:s0)		iTemp42 [k50 lr145:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l42:s146:k145:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l42:s148:k146:d1:s0)	 _forcond_10($48) :
led.c(l42:s149:k337:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l42:s150:k338:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l42:s151:k339:d1:s0)		iTemp43 [k51 lr151:152 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l42:s152:k148:d1:s0)		if iTemp43 [k51 lr151:152 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_10($11)
led.c(l42:s153:k340:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l42:s154:k341:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l42:s155:k342:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l42:s156:k155:d1:s0)		 goto _forcond_10($48)
led.c(l42:s157:k156:d0:s0)	 _forbreak_10($11) :
led.c(l43:s158:k157:d0:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
led.c(l43:s159:k158:d0:s0)		iTemp46 [k54 lr159:159 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l44:s160:k159:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l44:s162:k160:d1:s0)	 _forcond_11($51) :
led.c(l44:s163:k343:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l44:s164:k344:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l44:s165:k345:d1:s0)		iTemp47 [k55 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l44:s166:k162:d1:s0)		if iTemp47 [k55 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_11($12)
led.c(l44:s167:k346:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l44:s168:k347:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l44:s169:k348:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l44:s170:k169:d1:s0)		 goto _forcond_11($51)
led.c(l44:s171:k170:d0:s0)	 _forbreak_11($12) :
led.c(l45:s172:k171:d0:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
led.c(l45:s173:k172:d0:s0)		iTemp50 [k58 lr173:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l46:s174:k173:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l46:s176:k174:d1:s0)	 _forcond_12($54) :
led.c(l46:s177:k349:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s178:k350:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l46:s179:k351:d1:s0)		iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l46:s180:k176:d1:s0)		if iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_12($13)
led.c(l46:s181:k352:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s182:k353:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l46:s183:k354:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l46:s184:k183:d1:s0)		 goto _forcond_12($54)
led.c(l46:s185:k184:d0:s0)	 _forbreak_12($13) :
led.c(l47:s186:k185:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l47:s187:k186:d0:s0)		iTemp54 [k62 lr187:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l48:s188:k187:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l48:s190:k188:d1:s0)	 _forcond_13($57) :
led.c(l48:s191:k355:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s192:k356:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l48:s193:k357:d1:s0)		iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l48:s194:k190:d1:s0)		if iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_13($14)
led.c(l48:s195:k358:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s196:k359:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l48:s197:k360:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l48:s198:k197:d1:s0)		 goto _forcond_13($57)
led.c(l48:s199:k198:d0:s0)	 _forbreak_13($14) :
led.c(l49:s200:k199:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l49:s201:k200:d0:s0)		iTemp58 [k66 lr201:201 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l50:s202:k201:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l50:s204:k202:d1:s0)	 _forcond_14($60) :
led.c(l50:s205:k361:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s206:k362:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l50:s207:k363:d1:s0)		iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l50:s208:k204:d1:s0)		if iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_14($15)
led.c(l50:s209:k364:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s210:k365:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l50:s211:k366:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l50:s212:k211:d1:s0)		 goto _forcond_14($60)
led.c(l50:s213:k212:d0:s0)	 _forbreak_14($15) :
led.c(l51:s214:k213:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l51:s215:k214:d0:s0)		iTemp62 [k70 lr215:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l52:s216:k215:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l52:s218:k216:d1:s0)	 _forcond_15($63) :
led.c(l52:s219:k367:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s220:k368:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l52:s221:k369:d1:s0)		iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l52:s222:k218:d1:s0)		if iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _return($65)
led.c(l52:s223:k370:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s224:k371:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l52:s225:k372:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l52:s226:k225:d1:s0)		 goto _forcond_15($63)
led.c(l52:s227:k227:d0:s0)	 _return($65) :
led.c(l52:s228:k228:d0:s0)		eproc _sequencial [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}

----------------------------------------------------------------
Basic Block _forcond_5 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 23 : bbnum = 22 1st iCode = 78 , last iCode = 82
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (77) }

local defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (77) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (75) (77) (83) (84) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (75) (77) (83) (84) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (75) (77) (84) }

----------------------------------------------------------------
led.c(l32:s78:k76:d1:s0)	 _forcond_5($33) :
led.c(l32:s79:k307:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l32:s80:k308:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l32:s81:k309:d1:s0)		iTemp23 [k29 lr81:82 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l32:s82:k78:d1:s0)		if iTemp23 [k29 lr81:82 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_5($6)
led.c(l32:s83:k310:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l32:s84:k311:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l32:s85:k312:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l32:s86:k85:d1:s0)		 goto _forcond_5($33)
led.c(l32:s87:k86:d0:s0)	 _forbreak_5($6) :
led.c(l33:s88:k87:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l33:s89:k88:d0:s0)		iTemp26 [k32 lr89:89 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l34:s90:k89:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l34:s92:k90:d1:s0)	 _forcond_6($36) :
led.c(l34:s93:k313:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l34:s94:k314:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l34:s95:k315:d1:s0)		iTemp27 [k33 lr95:96 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l34:s96:k92:d1:s0)		if iTemp27 [k33 lr95:96 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_6($7)
led.c(l34:s97:k316:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l34:s98:k317:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l34:s99:k318:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l34:s100:k99:d1:s0)		 goto _forcond_6($36)
led.c(l34:s101:k100:d0:s0)	 _forbreak_6($7) :
led.c(l35:s102:k101:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l35:s103:k102:d0:s0)		iTemp30 [k36 lr103:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l36:s104:k103:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l36:s106:k104:d1:s0)	 _forcond_7($39) :
led.c(l36:s107:k319:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l36:s108:k320:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l36:s109:k321:d1:s0)		iTemp31 [k37 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l36:s110:k106:d1:s0)		if iTemp31 [k37 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_7($8)
led.c(l36:s111:k322:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l36:s112:k323:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l36:s113:k324:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l36:s114:k113:d1:s0)		 goto _forcond_7($39)
led.c(l36:s115:k114:d0:s0)	 _forbreak_7($8) :
led.c(l37:s116:k115:d0:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
led.c(l37:s117:k116:d0:s0)		iTemp34 [k42 lr117:117 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l38:s118:k117:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l38:s120:k118:d1:s0)	 _forcond_8($42) :
led.c(l38:s121:k325:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l38:s122:k326:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l38:s123:k327:d1:s0)		iTemp35 [k43 lr123:124 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l38:s124:k120:d1:s0)		if iTemp35 [k43 lr123:124 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_8($9)
led.c(l38:s125:k328:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l38:s126:k329:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l38:s127:k330:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l38:s128:k127:d1:s0)		 goto _forcond_8($42)
led.c(l38:s129:k128:d0:s0)	 _forbreak_8($9) :
led.c(l39:s130:k129:d0:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
led.c(l39:s131:k130:d0:s0)		iTemp38 [k46 lr131:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l40:s132:k131:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l40:s134:k132:d1:s0)	 _forcond_9($45) :
led.c(l40:s135:k331:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l40:s136:k332:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l40:s137:k333:d1:s0)		iTemp39 [k47 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l40:s138:k134:d1:s0)		if iTemp39 [k47 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_9($10)
led.c(l40:s139:k334:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l40:s140:k335:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l40:s141:k336:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l40:s142:k141:d1:s0)		 goto _forcond_9($45)
led.c(l40:s143:k142:d0:s0)	 _forbreak_9($10) :
led.c(l41:s144:k143:d0:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
led.c(l41:s145:k144:d0:s0)		iTemp42 [k50 lr145:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l42:s146:k145:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l42:s148:k146:d1:s0)	 _forcond_10($48) :
led.c(l42:s149:k337:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l42:s150:k338:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l42:s151:k339:d1:s0)		iTemp43 [k51 lr151:152 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l42:s152:k148:d1:s0)		if iTemp43 [k51 lr151:152 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_10($11)
led.c(l42:s153:k340:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l42:s154:k341:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l42:s155:k342:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l42:s156:k155:d1:s0)		 goto _forcond_10($48)
led.c(l42:s157:k156:d0:s0)	 _forbreak_10($11) :
led.c(l43:s158:k157:d0:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
led.c(l43:s159:k158:d0:s0)		iTemp46 [k54 lr159:159 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l44:s160:k159:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l44:s162:k160:d1:s0)	 _forcond_11($51) :
led.c(l44:s163:k343:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l44:s164:k344:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l44:s165:k345:d1:s0)		iTemp47 [k55 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l44:s166:k162:d1:s0)		if iTemp47 [k55 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_11($12)
led.c(l44:s167:k346:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l44:s168:k347:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l44:s169:k348:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l44:s170:k169:d1:s0)		 goto _forcond_11($51)
led.c(l44:s171:k170:d0:s0)	 _forbreak_11($12) :
led.c(l45:s172:k171:d0:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
led.c(l45:s173:k172:d0:s0)		iTemp50 [k58 lr173:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l46:s174:k173:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l46:s176:k174:d1:s0)	 _forcond_12($54) :
led.c(l46:s177:k349:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s178:k350:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l46:s179:k351:d1:s0)		iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l46:s180:k176:d1:s0)		if iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_12($13)
led.c(l46:s181:k352:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s182:k353:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l46:s183:k354:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l46:s184:k183:d1:s0)		 goto _forcond_12($54)
led.c(l46:s185:k184:d0:s0)	 _forbreak_12($13) :
led.c(l47:s186:k185:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l47:s187:k186:d0:s0)		iTemp54 [k62 lr187:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l48:s188:k187:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l48:s190:k188:d1:s0)	 _forcond_13($57) :
led.c(l48:s191:k355:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s192:k356:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l48:s193:k357:d1:s0)		iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l48:s194:k190:d1:s0)		if iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_13($14)
led.c(l48:s195:k358:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s196:k359:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l48:s197:k360:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l48:s198:k197:d1:s0)		 goto _forcond_13($57)
led.c(l48:s199:k198:d0:s0)	 _forbreak_13($14) :
led.c(l49:s200:k199:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l49:s201:k200:d0:s0)		iTemp58 [k66 lr201:201 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l50:s202:k201:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l50:s204:k202:d1:s0)	 _forcond_14($60) :
led.c(l50:s205:k361:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s206:k362:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l50:s207:k363:d1:s0)		iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l50:s208:k204:d1:s0)		if iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_14($15)
led.c(l50:s209:k364:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s210:k365:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l50:s211:k366:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l50:s212:k211:d1:s0)		 goto _forcond_14($60)
led.c(l50:s213:k212:d0:s0)	 _forbreak_14($15) :
led.c(l51:s214:k213:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l51:s215:k214:d0:s0)		iTemp62 [k70 lr215:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l52:s216:k215:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l52:s218:k216:d1:s0)	 _forcond_15($63) :
led.c(l52:s219:k367:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s220:k368:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l52:s221:k369:d1:s0)		iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l52:s222:k218:d1:s0)		if iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _return($65)
led.c(l52:s223:k370:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s224:k371:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l52:s225:k372:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l52:s226:k225:d1:s0)		 goto _forcond_15($63)
led.c(l52:s227:k227:d0:s0)	 _return($65) :
led.c(l52:s228:k228:d0:s0)		eproc _sequencial [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}

----------------------------------------------------------------
Basic Block _eBBlock37 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 24 : bbnum = 23 1st iCode = 83 , last iCode = 86
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (83) (84) }

local defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (83) (84) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (75) (77) (83) (84) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (84) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (75) (83) (84) }

----------------------------------------------------------------
led.c(l32:s83:k310:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l32:s84:k311:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l32:s85:k312:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l32:s86:k85:d1:s0)		 goto _forcond_5($33)
led.c(l32:s87:k86:d0:s0)	 _forbreak_5($6) :
led.c(l33:s88:k87:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l33:s89:k88:d0:s0)		iTemp26 [k32 lr89:89 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l34:s90:k89:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l34:s92:k90:d1:s0)	 _forcond_6($36) :
led.c(l34:s93:k313:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l34:s94:k314:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l34:s95:k315:d1:s0)		iTemp27 [k33 lr95:96 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l34:s96:k92:d1:s0)		if iTemp27 [k33 lr95:96 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_6($7)
led.c(l34:s97:k316:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l34:s98:k317:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l34:s99:k318:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l34:s100:k99:d1:s0)		 goto _forcond_6($36)
led.c(l34:s101:k100:d0:s0)	 _forbreak_6($7) :
led.c(l35:s102:k101:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l35:s103:k102:d0:s0)		iTemp30 [k36 lr103:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l36:s104:k103:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l36:s106:k104:d1:s0)	 _forcond_7($39) :
led.c(l36:s107:k319:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l36:s108:k320:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l36:s109:k321:d1:s0)		iTemp31 [k37 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l36:s110:k106:d1:s0)		if iTemp31 [k37 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_7($8)
led.c(l36:s111:k322:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l36:s112:k323:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l36:s113:k324:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l36:s114:k113:d1:s0)		 goto _forcond_7($39)
led.c(l36:s115:k114:d0:s0)	 _forbreak_7($8) :
led.c(l37:s116:k115:d0:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
led.c(l37:s117:k116:d0:s0)		iTemp34 [k42 lr117:117 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l38:s118:k117:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l38:s120:k118:d1:s0)	 _forcond_8($42) :
led.c(l38:s121:k325:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l38:s122:k326:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l38:s123:k327:d1:s0)		iTemp35 [k43 lr123:124 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l38:s124:k120:d1:s0)		if iTemp35 [k43 lr123:124 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_8($9)
led.c(l38:s125:k328:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l38:s126:k329:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l38:s127:k330:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l38:s128:k127:d1:s0)		 goto _forcond_8($42)
led.c(l38:s129:k128:d0:s0)	 _forbreak_8($9) :
led.c(l39:s130:k129:d0:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
led.c(l39:s131:k130:d0:s0)		iTemp38 [k46 lr131:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l40:s132:k131:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l40:s134:k132:d1:s0)	 _forcond_9($45) :
led.c(l40:s135:k331:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l40:s136:k332:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l40:s137:k333:d1:s0)		iTemp39 [k47 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l40:s138:k134:d1:s0)		if iTemp39 [k47 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_9($10)
led.c(l40:s139:k334:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l40:s140:k335:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l40:s141:k336:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l40:s142:k141:d1:s0)		 goto _forcond_9($45)
led.c(l40:s143:k142:d0:s0)	 _forbreak_9($10) :
led.c(l41:s144:k143:d0:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
led.c(l41:s145:k144:d0:s0)		iTemp42 [k50 lr145:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l42:s146:k145:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l42:s148:k146:d1:s0)	 _forcond_10($48) :
led.c(l42:s149:k337:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l42:s150:k338:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l42:s151:k339:d1:s0)		iTemp43 [k51 lr151:152 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l42:s152:k148:d1:s0)		if iTemp43 [k51 lr151:152 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_10($11)
led.c(l42:s153:k340:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l42:s154:k341:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l42:s155:k342:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l42:s156:k155:d1:s0)		 goto _forcond_10($48)
led.c(l42:s157:k156:d0:s0)	 _forbreak_10($11) :
led.c(l43:s158:k157:d0:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
led.c(l43:s159:k158:d0:s0)		iTemp46 [k54 lr159:159 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l44:s160:k159:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l44:s162:k160:d1:s0)	 _forcond_11($51) :
led.c(l44:s163:k343:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l44:s164:k344:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l44:s165:k345:d1:s0)		iTemp47 [k55 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l44:s166:k162:d1:s0)		if iTemp47 [k55 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_11($12)
led.c(l44:s167:k346:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l44:s168:k347:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l44:s169:k348:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l44:s170:k169:d1:s0)		 goto _forcond_11($51)
led.c(l44:s171:k170:d0:s0)	 _forbreak_11($12) :
led.c(l45:s172:k171:d0:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
led.c(l45:s173:k172:d0:s0)		iTemp50 [k58 lr173:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l46:s174:k173:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l46:s176:k174:d1:s0)	 _forcond_12($54) :
led.c(l46:s177:k349:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s178:k350:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l46:s179:k351:d1:s0)		iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l46:s180:k176:d1:s0)		if iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_12($13)
led.c(l46:s181:k352:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s182:k353:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l46:s183:k354:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l46:s184:k183:d1:s0)		 goto _forcond_12($54)
led.c(l46:s185:k184:d0:s0)	 _forbreak_12($13) :
led.c(l47:s186:k185:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l47:s187:k186:d0:s0)		iTemp54 [k62 lr187:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l48:s188:k187:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l48:s190:k188:d1:s0)	 _forcond_13($57) :
led.c(l48:s191:k355:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s192:k356:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l48:s193:k357:d1:s0)		iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l48:s194:k190:d1:s0)		if iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_13($14)
led.c(l48:s195:k358:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s196:k359:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l48:s197:k360:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l48:s198:k197:d1:s0)		 goto _forcond_13($57)
led.c(l48:s199:k198:d0:s0)	 _forbreak_13($14) :
led.c(l49:s200:k199:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l49:s201:k200:d0:s0)		iTemp58 [k66 lr201:201 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l50:s202:k201:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l50:s204:k202:d1:s0)	 _forcond_14($60) :
led.c(l50:s205:k361:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s206:k362:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l50:s207:k363:d1:s0)		iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l50:s208:k204:d1:s0)		if iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_14($15)
led.c(l50:s209:k364:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s210:k365:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l50:s211:k366:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l50:s212:k211:d1:s0)		 goto _forcond_14($60)
led.c(l50:s213:k212:d0:s0)	 _forbreak_14($15) :
led.c(l51:s214:k213:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l51:s215:k214:d0:s0)		iTemp62 [k70 lr215:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l52:s216:k215:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l52:s218:k216:d1:s0)	 _forcond_15($63) :
led.c(l52:s219:k367:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s220:k368:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l52:s221:k369:d1:s0)		iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l52:s222:k218:d1:s0)		if iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _return($65)
led.c(l52:s223:k370:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s224:k371:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l52:s225:k372:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l52:s226:k225:d1:s0)		 goto _forcond_15($63)
led.c(l52:s227:k227:d0:s0)	 _return($65) :
led.c(l52:s228:k228:d0:s0)		eproc _sequencial [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}

----------------------------------------------------------------
Basic Block _forbreak_5 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 25 : bbnum = 24 1st iCode = 87 , last iCode = 90
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (89) }

local defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (88) (89) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (75) (77) (83) (84) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (89) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (88) }

----------------------------------------------------------------
led.c(l32:s87:k86:d0:s0)	 _forbreak_5($6) :
led.c(l33:s88:k87:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l33:s89:k88:d0:s0)		iTemp26 [k32 lr89:89 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l34:s90:k89:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l34:s92:k90:d1:s0)	 _forcond_6($36) :
led.c(l34:s93:k313:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l34:s94:k314:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l34:s95:k315:d1:s0)		iTemp27 [k33 lr95:96 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l34:s96:k92:d1:s0)		if iTemp27 [k33 lr95:96 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_6($7)
led.c(l34:s97:k316:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l34:s98:k317:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l34:s99:k318:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l34:s100:k99:d1:s0)		 goto _forcond_6($36)
led.c(l34:s101:k100:d0:s0)	 _forbreak_6($7) :
led.c(l35:s102:k101:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l35:s103:k102:d0:s0)		iTemp30 [k36 lr103:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l36:s104:k103:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l36:s106:k104:d1:s0)	 _forcond_7($39) :
led.c(l36:s107:k319:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l36:s108:k320:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l36:s109:k321:d1:s0)		iTemp31 [k37 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l36:s110:k106:d1:s0)		if iTemp31 [k37 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_7($8)
led.c(l36:s111:k322:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l36:s112:k323:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l36:s113:k324:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l36:s114:k113:d1:s0)		 goto _forcond_7($39)
led.c(l36:s115:k114:d0:s0)	 _forbreak_7($8) :
led.c(l37:s116:k115:d0:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
led.c(l37:s117:k116:d0:s0)		iTemp34 [k42 lr117:117 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l38:s118:k117:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l38:s120:k118:d1:s0)	 _forcond_8($42) :
led.c(l38:s121:k325:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l38:s122:k326:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l38:s123:k327:d1:s0)		iTemp35 [k43 lr123:124 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l38:s124:k120:d1:s0)		if iTemp35 [k43 lr123:124 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_8($9)
led.c(l38:s125:k328:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l38:s126:k329:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l38:s127:k330:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l38:s128:k127:d1:s0)		 goto _forcond_8($42)
led.c(l38:s129:k128:d0:s0)	 _forbreak_8($9) :
led.c(l39:s130:k129:d0:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
led.c(l39:s131:k130:d0:s0)		iTemp38 [k46 lr131:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l40:s132:k131:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l40:s134:k132:d1:s0)	 _forcond_9($45) :
led.c(l40:s135:k331:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l40:s136:k332:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l40:s137:k333:d1:s0)		iTemp39 [k47 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l40:s138:k134:d1:s0)		if iTemp39 [k47 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_9($10)
led.c(l40:s139:k334:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l40:s140:k335:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l40:s141:k336:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l40:s142:k141:d1:s0)		 goto _forcond_9($45)
led.c(l40:s143:k142:d0:s0)	 _forbreak_9($10) :
led.c(l41:s144:k143:d0:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
led.c(l41:s145:k144:d0:s0)		iTemp42 [k50 lr145:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l42:s146:k145:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l42:s148:k146:d1:s0)	 _forcond_10($48) :
led.c(l42:s149:k337:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l42:s150:k338:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l42:s151:k339:d1:s0)		iTemp43 [k51 lr151:152 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l42:s152:k148:d1:s0)		if iTemp43 [k51 lr151:152 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_10($11)
led.c(l42:s153:k340:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l42:s154:k341:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l42:s155:k342:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l42:s156:k155:d1:s0)		 goto _forcond_10($48)
led.c(l42:s157:k156:d0:s0)	 _forbreak_10($11) :
led.c(l43:s158:k157:d0:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
led.c(l43:s159:k158:d0:s0)		iTemp46 [k54 lr159:159 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l44:s160:k159:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l44:s162:k160:d1:s0)	 _forcond_11($51) :
led.c(l44:s163:k343:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l44:s164:k344:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l44:s165:k345:d1:s0)		iTemp47 [k55 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l44:s166:k162:d1:s0)		if iTemp47 [k55 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_11($12)
led.c(l44:s167:k346:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l44:s168:k347:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l44:s169:k348:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l44:s170:k169:d1:s0)		 goto _forcond_11($51)
led.c(l44:s171:k170:d0:s0)	 _forbreak_11($12) :
led.c(l45:s172:k171:d0:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
led.c(l45:s173:k172:d0:s0)		iTemp50 [k58 lr173:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l46:s174:k173:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l46:s176:k174:d1:s0)	 _forcond_12($54) :
led.c(l46:s177:k349:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s178:k350:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l46:s179:k351:d1:s0)		iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l46:s180:k176:d1:s0)		if iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_12($13)
led.c(l46:s181:k352:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s182:k353:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l46:s183:k354:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l46:s184:k183:d1:s0)		 goto _forcond_12($54)
led.c(l46:s185:k184:d0:s0)	 _forbreak_12($13) :
led.c(l47:s186:k185:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l47:s187:k186:d0:s0)		iTemp54 [k62 lr187:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l48:s188:k187:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l48:s190:k188:d1:s0)	 _forcond_13($57) :
led.c(l48:s191:k355:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s192:k356:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l48:s193:k357:d1:s0)		iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l48:s194:k190:d1:s0)		if iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_13($14)
led.c(l48:s195:k358:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s196:k359:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l48:s197:k360:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l48:s198:k197:d1:s0)		 goto _forcond_13($57)
led.c(l48:s199:k198:d0:s0)	 _forbreak_13($14) :
led.c(l49:s200:k199:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l49:s201:k200:d0:s0)		iTemp58 [k66 lr201:201 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l50:s202:k201:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l50:s204:k202:d1:s0)	 _forcond_14($60) :
led.c(l50:s205:k361:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s206:k362:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l50:s207:k363:d1:s0)		iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l50:s208:k204:d1:s0)		if iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_14($15)
led.c(l50:s209:k364:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s210:k365:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l50:s211:k366:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l50:s212:k211:d1:s0)		 goto _forcond_14($60)
led.c(l50:s213:k212:d0:s0)	 _forbreak_14($15) :
led.c(l51:s214:k213:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l51:s215:k214:d0:s0)		iTemp62 [k70 lr215:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l52:s216:k215:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l52:s218:k216:d1:s0)	 _forcond_15($63) :
led.c(l52:s219:k367:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s220:k368:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l52:s221:k369:d1:s0)		iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l52:s222:k218:d1:s0)		if iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _return($65)
led.c(l52:s223:k370:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s224:k371:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l52:s225:k372:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l52:s226:k225:d1:s0)		 goto _forcond_15($63)
led.c(l52:s227:k227:d0:s0)	 _return($65) :
led.c(l52:s228:k228:d0:s0)		eproc _sequencial [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}

----------------------------------------------------------------
Basic Block preHeaderLbl38 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 26 : bbnum = 25 1st iCode = 91 , last iCode = 91
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { }

local defines bitVector :
pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (89) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (89) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { }

----------------------------------------------------------------
led.c(l34:s91:k267:d0:s0)	 preHeaderLbl38($144) :
led.c(l34:s92:k90:d1:s0)	 _forcond_6($36) :
led.c(l34:s93:k313:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l34:s94:k314:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l34:s95:k315:d1:s0)		iTemp27 [k33 lr95:96 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l34:s96:k92:d1:s0)		if iTemp27 [k33 lr95:96 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_6($7)
led.c(l34:s97:k316:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l34:s98:k317:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l34:s99:k318:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l34:s100:k99:d1:s0)		 goto _forcond_6($36)
led.c(l34:s101:k100:d0:s0)	 _forbreak_6($7) :
led.c(l35:s102:k101:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l35:s103:k102:d0:s0)		iTemp30 [k36 lr103:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l36:s104:k103:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l36:s106:k104:d1:s0)	 _forcond_7($39) :
led.c(l36:s107:k319:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l36:s108:k320:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l36:s109:k321:d1:s0)		iTemp31 [k37 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l36:s110:k106:d1:s0)		if iTemp31 [k37 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_7($8)
led.c(l36:s111:k322:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l36:s112:k323:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l36:s113:k324:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l36:s114:k113:d1:s0)		 goto _forcond_7($39)
led.c(l36:s115:k114:d0:s0)	 _forbreak_7($8) :
led.c(l37:s116:k115:d0:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
led.c(l37:s117:k116:d0:s0)		iTemp34 [k42 lr117:117 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l38:s118:k117:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l38:s120:k118:d1:s0)	 _forcond_8($42) :
led.c(l38:s121:k325:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l38:s122:k326:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l38:s123:k327:d1:s0)		iTemp35 [k43 lr123:124 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l38:s124:k120:d1:s0)		if iTemp35 [k43 lr123:124 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_8($9)
led.c(l38:s125:k328:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l38:s126:k329:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l38:s127:k330:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l38:s128:k127:d1:s0)		 goto _forcond_8($42)
led.c(l38:s129:k128:d0:s0)	 _forbreak_8($9) :
led.c(l39:s130:k129:d0:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
led.c(l39:s131:k130:d0:s0)		iTemp38 [k46 lr131:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l40:s132:k131:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l40:s134:k132:d1:s0)	 _forcond_9($45) :
led.c(l40:s135:k331:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l40:s136:k332:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l40:s137:k333:d1:s0)		iTemp39 [k47 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l40:s138:k134:d1:s0)		if iTemp39 [k47 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_9($10)
led.c(l40:s139:k334:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l40:s140:k335:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l40:s141:k336:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l40:s142:k141:d1:s0)		 goto _forcond_9($45)
led.c(l40:s143:k142:d0:s0)	 _forbreak_9($10) :
led.c(l41:s144:k143:d0:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
led.c(l41:s145:k144:d0:s0)		iTemp42 [k50 lr145:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l42:s146:k145:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l42:s148:k146:d1:s0)	 _forcond_10($48) :
led.c(l42:s149:k337:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l42:s150:k338:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l42:s151:k339:d1:s0)		iTemp43 [k51 lr151:152 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l42:s152:k148:d1:s0)		if iTemp43 [k51 lr151:152 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_10($11)
led.c(l42:s153:k340:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l42:s154:k341:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l42:s155:k342:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l42:s156:k155:d1:s0)		 goto _forcond_10($48)
led.c(l42:s157:k156:d0:s0)	 _forbreak_10($11) :
led.c(l43:s158:k157:d0:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
led.c(l43:s159:k158:d0:s0)		iTemp46 [k54 lr159:159 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l44:s160:k159:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l44:s162:k160:d1:s0)	 _forcond_11($51) :
led.c(l44:s163:k343:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l44:s164:k344:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l44:s165:k345:d1:s0)		iTemp47 [k55 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l44:s166:k162:d1:s0)		if iTemp47 [k55 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_11($12)
led.c(l44:s167:k346:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l44:s168:k347:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l44:s169:k348:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l44:s170:k169:d1:s0)		 goto _forcond_11($51)
led.c(l44:s171:k170:d0:s0)	 _forbreak_11($12) :
led.c(l45:s172:k171:d0:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
led.c(l45:s173:k172:d0:s0)		iTemp50 [k58 lr173:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l46:s174:k173:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l46:s176:k174:d1:s0)	 _forcond_12($54) :
led.c(l46:s177:k349:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s178:k350:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l46:s179:k351:d1:s0)		iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l46:s180:k176:d1:s0)		if iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_12($13)
led.c(l46:s181:k352:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s182:k353:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l46:s183:k354:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l46:s184:k183:d1:s0)		 goto _forcond_12($54)
led.c(l46:s185:k184:d0:s0)	 _forbreak_12($13) :
led.c(l47:s186:k185:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l47:s187:k186:d0:s0)		iTemp54 [k62 lr187:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l48:s188:k187:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l48:s190:k188:d1:s0)	 _forcond_13($57) :
led.c(l48:s191:k355:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s192:k356:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l48:s193:k357:d1:s0)		iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l48:s194:k190:d1:s0)		if iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_13($14)
led.c(l48:s195:k358:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s196:k359:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l48:s197:k360:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l48:s198:k197:d1:s0)		 goto _forcond_13($57)
led.c(l48:s199:k198:d0:s0)	 _forbreak_13($14) :
led.c(l49:s200:k199:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l49:s201:k200:d0:s0)		iTemp58 [k66 lr201:201 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l50:s202:k201:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l50:s204:k202:d1:s0)	 _forcond_14($60) :
led.c(l50:s205:k361:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s206:k362:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l50:s207:k363:d1:s0)		iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l50:s208:k204:d1:s0)		if iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_14($15)
led.c(l50:s209:k364:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s210:k365:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l50:s211:k366:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l50:s212:k211:d1:s0)		 goto _forcond_14($60)
led.c(l50:s213:k212:d0:s0)	 _forbreak_14($15) :
led.c(l51:s214:k213:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l51:s215:k214:d0:s0)		iTemp62 [k70 lr215:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l52:s216:k215:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l52:s218:k216:d1:s0)	 _forcond_15($63) :
led.c(l52:s219:k367:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s220:k368:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l52:s221:k369:d1:s0)		iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l52:s222:k218:d1:s0)		if iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _return($65)
led.c(l52:s223:k370:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s224:k371:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l52:s225:k372:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l52:s226:k225:d1:s0)		 goto _forcond_15($63)
led.c(l52:s227:k227:d0:s0)	 _return($65) :
led.c(l52:s228:k228:d0:s0)		eproc _sequencial [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}

----------------------------------------------------------------
Basic Block _forcond_6 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 27 : bbnum = 26 1st iCode = 92 , last iCode = 96
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (91) }

local defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (91) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (89) (91) (97) (98) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (89) (91) (97) (98) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (89) (91) (98) }

----------------------------------------------------------------
led.c(l34:s92:k90:d1:s0)	 _forcond_6($36) :
led.c(l34:s93:k313:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l34:s94:k314:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l34:s95:k315:d1:s0)		iTemp27 [k33 lr95:96 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l34:s96:k92:d1:s0)		if iTemp27 [k33 lr95:96 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_6($7)
led.c(l34:s97:k316:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l34:s98:k317:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l34:s99:k318:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l34:s100:k99:d1:s0)		 goto _forcond_6($36)
led.c(l34:s101:k100:d0:s0)	 _forbreak_6($7) :
led.c(l35:s102:k101:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l35:s103:k102:d0:s0)		iTemp30 [k36 lr103:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l36:s104:k103:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l36:s106:k104:d1:s0)	 _forcond_7($39) :
led.c(l36:s107:k319:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l36:s108:k320:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l36:s109:k321:d1:s0)		iTemp31 [k37 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l36:s110:k106:d1:s0)		if iTemp31 [k37 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_7($8)
led.c(l36:s111:k322:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l36:s112:k323:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l36:s113:k324:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l36:s114:k113:d1:s0)		 goto _forcond_7($39)
led.c(l36:s115:k114:d0:s0)	 _forbreak_7($8) :
led.c(l37:s116:k115:d0:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
led.c(l37:s117:k116:d0:s0)		iTemp34 [k42 lr117:117 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l38:s118:k117:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l38:s120:k118:d1:s0)	 _forcond_8($42) :
led.c(l38:s121:k325:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l38:s122:k326:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l38:s123:k327:d1:s0)		iTemp35 [k43 lr123:124 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l38:s124:k120:d1:s0)		if iTemp35 [k43 lr123:124 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_8($9)
led.c(l38:s125:k328:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l38:s126:k329:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l38:s127:k330:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l38:s128:k127:d1:s0)		 goto _forcond_8($42)
led.c(l38:s129:k128:d0:s0)	 _forbreak_8($9) :
led.c(l39:s130:k129:d0:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
led.c(l39:s131:k130:d0:s0)		iTemp38 [k46 lr131:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l40:s132:k131:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l40:s134:k132:d1:s0)	 _forcond_9($45) :
led.c(l40:s135:k331:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l40:s136:k332:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l40:s137:k333:d1:s0)		iTemp39 [k47 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l40:s138:k134:d1:s0)		if iTemp39 [k47 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_9($10)
led.c(l40:s139:k334:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l40:s140:k335:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l40:s141:k336:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l40:s142:k141:d1:s0)		 goto _forcond_9($45)
led.c(l40:s143:k142:d0:s0)	 _forbreak_9($10) :
led.c(l41:s144:k143:d0:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
led.c(l41:s145:k144:d0:s0)		iTemp42 [k50 lr145:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l42:s146:k145:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l42:s148:k146:d1:s0)	 _forcond_10($48) :
led.c(l42:s149:k337:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l42:s150:k338:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l42:s151:k339:d1:s0)		iTemp43 [k51 lr151:152 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l42:s152:k148:d1:s0)		if iTemp43 [k51 lr151:152 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_10($11)
led.c(l42:s153:k340:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l42:s154:k341:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l42:s155:k342:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l42:s156:k155:d1:s0)		 goto _forcond_10($48)
led.c(l42:s157:k156:d0:s0)	 _forbreak_10($11) :
led.c(l43:s158:k157:d0:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
led.c(l43:s159:k158:d0:s0)		iTemp46 [k54 lr159:159 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l44:s160:k159:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l44:s162:k160:d1:s0)	 _forcond_11($51) :
led.c(l44:s163:k343:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l44:s164:k344:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l44:s165:k345:d1:s0)		iTemp47 [k55 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l44:s166:k162:d1:s0)		if iTemp47 [k55 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_11($12)
led.c(l44:s167:k346:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l44:s168:k347:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l44:s169:k348:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l44:s170:k169:d1:s0)		 goto _forcond_11($51)
led.c(l44:s171:k170:d0:s0)	 _forbreak_11($12) :
led.c(l45:s172:k171:d0:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
led.c(l45:s173:k172:d0:s0)		iTemp50 [k58 lr173:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l46:s174:k173:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l46:s176:k174:d1:s0)	 _forcond_12($54) :
led.c(l46:s177:k349:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s178:k350:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l46:s179:k351:d1:s0)		iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l46:s180:k176:d1:s0)		if iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_12($13)
led.c(l46:s181:k352:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s182:k353:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l46:s183:k354:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l46:s184:k183:d1:s0)		 goto _forcond_12($54)
led.c(l46:s185:k184:d0:s0)	 _forbreak_12($13) :
led.c(l47:s186:k185:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l47:s187:k186:d0:s0)		iTemp54 [k62 lr187:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l48:s188:k187:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l48:s190:k188:d1:s0)	 _forcond_13($57) :
led.c(l48:s191:k355:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s192:k356:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l48:s193:k357:d1:s0)		iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l48:s194:k190:d1:s0)		if iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_13($14)
led.c(l48:s195:k358:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s196:k359:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l48:s197:k360:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l48:s198:k197:d1:s0)		 goto _forcond_13($57)
led.c(l48:s199:k198:d0:s0)	 _forbreak_13($14) :
led.c(l49:s200:k199:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l49:s201:k200:d0:s0)		iTemp58 [k66 lr201:201 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l50:s202:k201:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l50:s204:k202:d1:s0)	 _forcond_14($60) :
led.c(l50:s205:k361:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s206:k362:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l50:s207:k363:d1:s0)		iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l50:s208:k204:d1:s0)		if iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_14($15)
led.c(l50:s209:k364:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s210:k365:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l50:s211:k366:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l50:s212:k211:d1:s0)		 goto _forcond_14($60)
led.c(l50:s213:k212:d0:s0)	 _forbreak_14($15) :
led.c(l51:s214:k213:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l51:s215:k214:d0:s0)		iTemp62 [k70 lr215:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l52:s216:k215:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l52:s218:k216:d1:s0)	 _forcond_15($63) :
led.c(l52:s219:k367:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s220:k368:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l52:s221:k369:d1:s0)		iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l52:s222:k218:d1:s0)		if iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _return($65)
led.c(l52:s223:k370:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s224:k371:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l52:s225:k372:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l52:s226:k225:d1:s0)		 goto _forcond_15($63)
led.c(l52:s227:k227:d0:s0)	 _return($65) :
led.c(l52:s228:k228:d0:s0)		eproc _sequencial [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}

----------------------------------------------------------------
Basic Block _eBBlock38 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 28 : bbnum = 27 1st iCode = 97 , last iCode = 100
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (97) (98) }

local defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (97) (98) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (89) (91) (97) (98) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (98) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (89) (97) (98) }

----------------------------------------------------------------
led.c(l34:s97:k316:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l34:s98:k317:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l34:s99:k318:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l34:s100:k99:d1:s0)		 goto _forcond_6($36)
led.c(l34:s101:k100:d0:s0)	 _forbreak_6($7) :
led.c(l35:s102:k101:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l35:s103:k102:d0:s0)		iTemp30 [k36 lr103:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l36:s104:k103:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l36:s106:k104:d1:s0)	 _forcond_7($39) :
led.c(l36:s107:k319:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l36:s108:k320:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l36:s109:k321:d1:s0)		iTemp31 [k37 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l36:s110:k106:d1:s0)		if iTemp31 [k37 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_7($8)
led.c(l36:s111:k322:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l36:s112:k323:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l36:s113:k324:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l36:s114:k113:d1:s0)		 goto _forcond_7($39)
led.c(l36:s115:k114:d0:s0)	 _forbreak_7($8) :
led.c(l37:s116:k115:d0:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
led.c(l37:s117:k116:d0:s0)		iTemp34 [k42 lr117:117 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l38:s118:k117:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l38:s120:k118:d1:s0)	 _forcond_8($42) :
led.c(l38:s121:k325:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l38:s122:k326:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l38:s123:k327:d1:s0)		iTemp35 [k43 lr123:124 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l38:s124:k120:d1:s0)		if iTemp35 [k43 lr123:124 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_8($9)
led.c(l38:s125:k328:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l38:s126:k329:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l38:s127:k330:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l38:s128:k127:d1:s0)		 goto _forcond_8($42)
led.c(l38:s129:k128:d0:s0)	 _forbreak_8($9) :
led.c(l39:s130:k129:d0:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
led.c(l39:s131:k130:d0:s0)		iTemp38 [k46 lr131:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l40:s132:k131:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l40:s134:k132:d1:s0)	 _forcond_9($45) :
led.c(l40:s135:k331:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l40:s136:k332:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l40:s137:k333:d1:s0)		iTemp39 [k47 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l40:s138:k134:d1:s0)		if iTemp39 [k47 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_9($10)
led.c(l40:s139:k334:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l40:s140:k335:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l40:s141:k336:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l40:s142:k141:d1:s0)		 goto _forcond_9($45)
led.c(l40:s143:k142:d0:s0)	 _forbreak_9($10) :
led.c(l41:s144:k143:d0:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
led.c(l41:s145:k144:d0:s0)		iTemp42 [k50 lr145:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l42:s146:k145:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l42:s148:k146:d1:s0)	 _forcond_10($48) :
led.c(l42:s149:k337:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l42:s150:k338:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l42:s151:k339:d1:s0)		iTemp43 [k51 lr151:152 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l42:s152:k148:d1:s0)		if iTemp43 [k51 lr151:152 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_10($11)
led.c(l42:s153:k340:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l42:s154:k341:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l42:s155:k342:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l42:s156:k155:d1:s0)		 goto _forcond_10($48)
led.c(l42:s157:k156:d0:s0)	 _forbreak_10($11) :
led.c(l43:s158:k157:d0:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
led.c(l43:s159:k158:d0:s0)		iTemp46 [k54 lr159:159 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l44:s160:k159:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l44:s162:k160:d1:s0)	 _forcond_11($51) :
led.c(l44:s163:k343:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l44:s164:k344:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l44:s165:k345:d1:s0)		iTemp47 [k55 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l44:s166:k162:d1:s0)		if iTemp47 [k55 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_11($12)
led.c(l44:s167:k346:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l44:s168:k347:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l44:s169:k348:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l44:s170:k169:d1:s0)		 goto _forcond_11($51)
led.c(l44:s171:k170:d0:s0)	 _forbreak_11($12) :
led.c(l45:s172:k171:d0:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
led.c(l45:s173:k172:d0:s0)		iTemp50 [k58 lr173:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l46:s174:k173:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l46:s176:k174:d1:s0)	 _forcond_12($54) :
led.c(l46:s177:k349:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s178:k350:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l46:s179:k351:d1:s0)		iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l46:s180:k176:d1:s0)		if iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_12($13)
led.c(l46:s181:k352:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s182:k353:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l46:s183:k354:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l46:s184:k183:d1:s0)		 goto _forcond_12($54)
led.c(l46:s185:k184:d0:s0)	 _forbreak_12($13) :
led.c(l47:s186:k185:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l47:s187:k186:d0:s0)		iTemp54 [k62 lr187:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l48:s188:k187:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l48:s190:k188:d1:s0)	 _forcond_13($57) :
led.c(l48:s191:k355:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s192:k356:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l48:s193:k357:d1:s0)		iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l48:s194:k190:d1:s0)		if iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_13($14)
led.c(l48:s195:k358:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s196:k359:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l48:s197:k360:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l48:s198:k197:d1:s0)		 goto _forcond_13($57)
led.c(l48:s199:k198:d0:s0)	 _forbreak_13($14) :
led.c(l49:s200:k199:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l49:s201:k200:d0:s0)		iTemp58 [k66 lr201:201 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l50:s202:k201:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l50:s204:k202:d1:s0)	 _forcond_14($60) :
led.c(l50:s205:k361:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s206:k362:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l50:s207:k363:d1:s0)		iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l50:s208:k204:d1:s0)		if iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_14($15)
led.c(l50:s209:k364:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s210:k365:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l50:s211:k366:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l50:s212:k211:d1:s0)		 goto _forcond_14($60)
led.c(l50:s213:k212:d0:s0)	 _forbreak_14($15) :
led.c(l51:s214:k213:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l51:s215:k214:d0:s0)		iTemp62 [k70 lr215:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l52:s216:k215:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l52:s218:k216:d1:s0)	 _forcond_15($63) :
led.c(l52:s219:k367:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s220:k368:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l52:s221:k369:d1:s0)		iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l52:s222:k218:d1:s0)		if iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _return($65)
led.c(l52:s223:k370:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s224:k371:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l52:s225:k372:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l52:s226:k225:d1:s0)		 goto _forcond_15($63)
led.c(l52:s227:k227:d0:s0)	 _return($65) :
led.c(l52:s228:k228:d0:s0)		eproc _sequencial [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}

----------------------------------------------------------------
Basic Block _forbreak_6 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 29 : bbnum = 28 1st iCode = 101 , last iCode = 104
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (103) }

local defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (102) (103) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (89) (91) (97) (98) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (103) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (102) }

----------------------------------------------------------------
led.c(l34:s101:k100:d0:s0)	 _forbreak_6($7) :
led.c(l35:s102:k101:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l35:s103:k102:d0:s0)		iTemp30 [k36 lr103:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l36:s104:k103:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l36:s106:k104:d1:s0)	 _forcond_7($39) :
led.c(l36:s107:k319:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l36:s108:k320:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l36:s109:k321:d1:s0)		iTemp31 [k37 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l36:s110:k106:d1:s0)		if iTemp31 [k37 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_7($8)
led.c(l36:s111:k322:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l36:s112:k323:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l36:s113:k324:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l36:s114:k113:d1:s0)		 goto _forcond_7($39)
led.c(l36:s115:k114:d0:s0)	 _forbreak_7($8) :
led.c(l37:s116:k115:d0:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
led.c(l37:s117:k116:d0:s0)		iTemp34 [k42 lr117:117 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l38:s118:k117:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l38:s120:k118:d1:s0)	 _forcond_8($42) :
led.c(l38:s121:k325:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l38:s122:k326:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l38:s123:k327:d1:s0)		iTemp35 [k43 lr123:124 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l38:s124:k120:d1:s0)		if iTemp35 [k43 lr123:124 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_8($9)
led.c(l38:s125:k328:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l38:s126:k329:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l38:s127:k330:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l38:s128:k127:d1:s0)		 goto _forcond_8($42)
led.c(l38:s129:k128:d0:s0)	 _forbreak_8($9) :
led.c(l39:s130:k129:d0:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
led.c(l39:s131:k130:d0:s0)		iTemp38 [k46 lr131:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l40:s132:k131:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l40:s134:k132:d1:s0)	 _forcond_9($45) :
led.c(l40:s135:k331:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l40:s136:k332:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l40:s137:k333:d1:s0)		iTemp39 [k47 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l40:s138:k134:d1:s0)		if iTemp39 [k47 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_9($10)
led.c(l40:s139:k334:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l40:s140:k335:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l40:s141:k336:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l40:s142:k141:d1:s0)		 goto _forcond_9($45)
led.c(l40:s143:k142:d0:s0)	 _forbreak_9($10) :
led.c(l41:s144:k143:d0:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
led.c(l41:s145:k144:d0:s0)		iTemp42 [k50 lr145:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l42:s146:k145:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l42:s148:k146:d1:s0)	 _forcond_10($48) :
led.c(l42:s149:k337:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l42:s150:k338:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l42:s151:k339:d1:s0)		iTemp43 [k51 lr151:152 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l42:s152:k148:d1:s0)		if iTemp43 [k51 lr151:152 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_10($11)
led.c(l42:s153:k340:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l42:s154:k341:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l42:s155:k342:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l42:s156:k155:d1:s0)		 goto _forcond_10($48)
led.c(l42:s157:k156:d0:s0)	 _forbreak_10($11) :
led.c(l43:s158:k157:d0:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
led.c(l43:s159:k158:d0:s0)		iTemp46 [k54 lr159:159 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l44:s160:k159:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l44:s162:k160:d1:s0)	 _forcond_11($51) :
led.c(l44:s163:k343:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l44:s164:k344:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l44:s165:k345:d1:s0)		iTemp47 [k55 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l44:s166:k162:d1:s0)		if iTemp47 [k55 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_11($12)
led.c(l44:s167:k346:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l44:s168:k347:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l44:s169:k348:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l44:s170:k169:d1:s0)		 goto _forcond_11($51)
led.c(l44:s171:k170:d0:s0)	 _forbreak_11($12) :
led.c(l45:s172:k171:d0:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
led.c(l45:s173:k172:d0:s0)		iTemp50 [k58 lr173:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l46:s174:k173:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l46:s176:k174:d1:s0)	 _forcond_12($54) :
led.c(l46:s177:k349:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s178:k350:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l46:s179:k351:d1:s0)		iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l46:s180:k176:d1:s0)		if iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_12($13)
led.c(l46:s181:k352:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s182:k353:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l46:s183:k354:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l46:s184:k183:d1:s0)		 goto _forcond_12($54)
led.c(l46:s185:k184:d0:s0)	 _forbreak_12($13) :
led.c(l47:s186:k185:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l47:s187:k186:d0:s0)		iTemp54 [k62 lr187:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l48:s188:k187:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l48:s190:k188:d1:s0)	 _forcond_13($57) :
led.c(l48:s191:k355:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s192:k356:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l48:s193:k357:d1:s0)		iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l48:s194:k190:d1:s0)		if iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_13($14)
led.c(l48:s195:k358:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s196:k359:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l48:s197:k360:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l48:s198:k197:d1:s0)		 goto _forcond_13($57)
led.c(l48:s199:k198:d0:s0)	 _forbreak_13($14) :
led.c(l49:s200:k199:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l49:s201:k200:d0:s0)		iTemp58 [k66 lr201:201 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l50:s202:k201:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l50:s204:k202:d1:s0)	 _forcond_14($60) :
led.c(l50:s205:k361:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s206:k362:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l50:s207:k363:d1:s0)		iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l50:s208:k204:d1:s0)		if iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_14($15)
led.c(l50:s209:k364:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s210:k365:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l50:s211:k366:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l50:s212:k211:d1:s0)		 goto _forcond_14($60)
led.c(l50:s213:k212:d0:s0)	 _forbreak_14($15) :
led.c(l51:s214:k213:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l51:s215:k214:d0:s0)		iTemp62 [k70 lr215:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l52:s216:k215:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l52:s218:k216:d1:s0)	 _forcond_15($63) :
led.c(l52:s219:k367:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s220:k368:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l52:s221:k369:d1:s0)		iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l52:s222:k218:d1:s0)		if iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _return($65)
led.c(l52:s223:k370:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s224:k371:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l52:s225:k372:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l52:s226:k225:d1:s0)		 goto _forcond_15($63)
led.c(l52:s227:k227:d0:s0)	 _return($65) :
led.c(l52:s228:k228:d0:s0)		eproc _sequencial [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}

----------------------------------------------------------------
Basic Block preHeaderLbl39 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 30 : bbnum = 29 1st iCode = 105 , last iCode = 105
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { }

local defines bitVector :
pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (103) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (103) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { }

----------------------------------------------------------------
led.c(l36:s105:k268:d0:s0)	 preHeaderLbl39($146) :
led.c(l36:s106:k104:d1:s0)	 _forcond_7($39) :
led.c(l36:s107:k319:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l36:s108:k320:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l36:s109:k321:d1:s0)		iTemp31 [k37 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l36:s110:k106:d1:s0)		if iTemp31 [k37 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_7($8)
led.c(l36:s111:k322:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l36:s112:k323:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l36:s113:k324:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l36:s114:k113:d1:s0)		 goto _forcond_7($39)
led.c(l36:s115:k114:d0:s0)	 _forbreak_7($8) :
led.c(l37:s116:k115:d0:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
led.c(l37:s117:k116:d0:s0)		iTemp34 [k42 lr117:117 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l38:s118:k117:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l38:s120:k118:d1:s0)	 _forcond_8($42) :
led.c(l38:s121:k325:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l38:s122:k326:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l38:s123:k327:d1:s0)		iTemp35 [k43 lr123:124 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l38:s124:k120:d1:s0)		if iTemp35 [k43 lr123:124 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_8($9)
led.c(l38:s125:k328:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l38:s126:k329:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l38:s127:k330:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l38:s128:k127:d1:s0)		 goto _forcond_8($42)
led.c(l38:s129:k128:d0:s0)	 _forbreak_8($9) :
led.c(l39:s130:k129:d0:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
led.c(l39:s131:k130:d0:s0)		iTemp38 [k46 lr131:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l40:s132:k131:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l40:s134:k132:d1:s0)	 _forcond_9($45) :
led.c(l40:s135:k331:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l40:s136:k332:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l40:s137:k333:d1:s0)		iTemp39 [k47 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l40:s138:k134:d1:s0)		if iTemp39 [k47 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_9($10)
led.c(l40:s139:k334:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l40:s140:k335:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l40:s141:k336:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l40:s142:k141:d1:s0)		 goto _forcond_9($45)
led.c(l40:s143:k142:d0:s0)	 _forbreak_9($10) :
led.c(l41:s144:k143:d0:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
led.c(l41:s145:k144:d0:s0)		iTemp42 [k50 lr145:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l42:s146:k145:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l42:s148:k146:d1:s0)	 _forcond_10($48) :
led.c(l42:s149:k337:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l42:s150:k338:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l42:s151:k339:d1:s0)		iTemp43 [k51 lr151:152 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l42:s152:k148:d1:s0)		if iTemp43 [k51 lr151:152 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_10($11)
led.c(l42:s153:k340:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l42:s154:k341:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l42:s155:k342:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l42:s156:k155:d1:s0)		 goto _forcond_10($48)
led.c(l42:s157:k156:d0:s0)	 _forbreak_10($11) :
led.c(l43:s158:k157:d0:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
led.c(l43:s159:k158:d0:s0)		iTemp46 [k54 lr159:159 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l44:s160:k159:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l44:s162:k160:d1:s0)	 _forcond_11($51) :
led.c(l44:s163:k343:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l44:s164:k344:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l44:s165:k345:d1:s0)		iTemp47 [k55 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l44:s166:k162:d1:s0)		if iTemp47 [k55 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_11($12)
led.c(l44:s167:k346:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l44:s168:k347:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l44:s169:k348:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l44:s170:k169:d1:s0)		 goto _forcond_11($51)
led.c(l44:s171:k170:d0:s0)	 _forbreak_11($12) :
led.c(l45:s172:k171:d0:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
led.c(l45:s173:k172:d0:s0)		iTemp50 [k58 lr173:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l46:s174:k173:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l46:s176:k174:d1:s0)	 _forcond_12($54) :
led.c(l46:s177:k349:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s178:k350:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l46:s179:k351:d1:s0)		iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l46:s180:k176:d1:s0)		if iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_12($13)
led.c(l46:s181:k352:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s182:k353:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l46:s183:k354:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l46:s184:k183:d1:s0)		 goto _forcond_12($54)
led.c(l46:s185:k184:d0:s0)	 _forbreak_12($13) :
led.c(l47:s186:k185:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l47:s187:k186:d0:s0)		iTemp54 [k62 lr187:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l48:s188:k187:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l48:s190:k188:d1:s0)	 _forcond_13($57) :
led.c(l48:s191:k355:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s192:k356:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l48:s193:k357:d1:s0)		iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l48:s194:k190:d1:s0)		if iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_13($14)
led.c(l48:s195:k358:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s196:k359:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l48:s197:k360:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l48:s198:k197:d1:s0)		 goto _forcond_13($57)
led.c(l48:s199:k198:d0:s0)	 _forbreak_13($14) :
led.c(l49:s200:k199:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l49:s201:k200:d0:s0)		iTemp58 [k66 lr201:201 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l50:s202:k201:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l50:s204:k202:d1:s0)	 _forcond_14($60) :
led.c(l50:s205:k361:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s206:k362:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l50:s207:k363:d1:s0)		iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l50:s208:k204:d1:s0)		if iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_14($15)
led.c(l50:s209:k364:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s210:k365:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l50:s211:k366:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l50:s212:k211:d1:s0)		 goto _forcond_14($60)
led.c(l50:s213:k212:d0:s0)	 _forbreak_14($15) :
led.c(l51:s214:k213:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l51:s215:k214:d0:s0)		iTemp62 [k70 lr215:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l52:s216:k215:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l52:s218:k216:d1:s0)	 _forcond_15($63) :
led.c(l52:s219:k367:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s220:k368:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l52:s221:k369:d1:s0)		iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l52:s222:k218:d1:s0)		if iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _return($65)
led.c(l52:s223:k370:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s224:k371:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l52:s225:k372:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l52:s226:k225:d1:s0)		 goto _forcond_15($63)
led.c(l52:s227:k227:d0:s0)	 _return($65) :
led.c(l52:s228:k228:d0:s0)		eproc _sequencial [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}

----------------------------------------------------------------
Basic Block _forcond_7 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 31 : bbnum = 30 1st iCode = 106 , last iCode = 110
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (105) }

local defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (105) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (103) (105) (111) (112) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (103) (105) (111) (112) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (103) (105) (112) }

----------------------------------------------------------------
led.c(l36:s106:k104:d1:s0)	 _forcond_7($39) :
led.c(l36:s107:k319:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l36:s108:k320:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l36:s109:k321:d1:s0)		iTemp31 [k37 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l36:s110:k106:d1:s0)		if iTemp31 [k37 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_7($8)
led.c(l36:s111:k322:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l36:s112:k323:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l36:s113:k324:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l36:s114:k113:d1:s0)		 goto _forcond_7($39)
led.c(l36:s115:k114:d0:s0)	 _forbreak_7($8) :
led.c(l37:s116:k115:d0:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
led.c(l37:s117:k116:d0:s0)		iTemp34 [k42 lr117:117 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l38:s118:k117:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l38:s120:k118:d1:s0)	 _forcond_8($42) :
led.c(l38:s121:k325:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l38:s122:k326:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l38:s123:k327:d1:s0)		iTemp35 [k43 lr123:124 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l38:s124:k120:d1:s0)		if iTemp35 [k43 lr123:124 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_8($9)
led.c(l38:s125:k328:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l38:s126:k329:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l38:s127:k330:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l38:s128:k127:d1:s0)		 goto _forcond_8($42)
led.c(l38:s129:k128:d0:s0)	 _forbreak_8($9) :
led.c(l39:s130:k129:d0:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
led.c(l39:s131:k130:d0:s0)		iTemp38 [k46 lr131:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l40:s132:k131:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l40:s134:k132:d1:s0)	 _forcond_9($45) :
led.c(l40:s135:k331:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l40:s136:k332:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l40:s137:k333:d1:s0)		iTemp39 [k47 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l40:s138:k134:d1:s0)		if iTemp39 [k47 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_9($10)
led.c(l40:s139:k334:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l40:s140:k335:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l40:s141:k336:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l40:s142:k141:d1:s0)		 goto _forcond_9($45)
led.c(l40:s143:k142:d0:s0)	 _forbreak_9($10) :
led.c(l41:s144:k143:d0:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
led.c(l41:s145:k144:d0:s0)		iTemp42 [k50 lr145:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l42:s146:k145:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l42:s148:k146:d1:s0)	 _forcond_10($48) :
led.c(l42:s149:k337:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l42:s150:k338:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l42:s151:k339:d1:s0)		iTemp43 [k51 lr151:152 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l42:s152:k148:d1:s0)		if iTemp43 [k51 lr151:152 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_10($11)
led.c(l42:s153:k340:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l42:s154:k341:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l42:s155:k342:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l42:s156:k155:d1:s0)		 goto _forcond_10($48)
led.c(l42:s157:k156:d0:s0)	 _forbreak_10($11) :
led.c(l43:s158:k157:d0:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
led.c(l43:s159:k158:d0:s0)		iTemp46 [k54 lr159:159 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l44:s160:k159:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l44:s162:k160:d1:s0)	 _forcond_11($51) :
led.c(l44:s163:k343:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l44:s164:k344:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l44:s165:k345:d1:s0)		iTemp47 [k55 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l44:s166:k162:d1:s0)		if iTemp47 [k55 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_11($12)
led.c(l44:s167:k346:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l44:s168:k347:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l44:s169:k348:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l44:s170:k169:d1:s0)		 goto _forcond_11($51)
led.c(l44:s171:k170:d0:s0)	 _forbreak_11($12) :
led.c(l45:s172:k171:d0:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
led.c(l45:s173:k172:d0:s0)		iTemp50 [k58 lr173:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l46:s174:k173:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l46:s176:k174:d1:s0)	 _forcond_12($54) :
led.c(l46:s177:k349:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s178:k350:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l46:s179:k351:d1:s0)		iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l46:s180:k176:d1:s0)		if iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_12($13)
led.c(l46:s181:k352:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s182:k353:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l46:s183:k354:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l46:s184:k183:d1:s0)		 goto _forcond_12($54)
led.c(l46:s185:k184:d0:s0)	 _forbreak_12($13) :
led.c(l47:s186:k185:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l47:s187:k186:d0:s0)		iTemp54 [k62 lr187:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l48:s188:k187:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l48:s190:k188:d1:s0)	 _forcond_13($57) :
led.c(l48:s191:k355:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s192:k356:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l48:s193:k357:d1:s0)		iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l48:s194:k190:d1:s0)		if iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_13($14)
led.c(l48:s195:k358:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s196:k359:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l48:s197:k360:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l48:s198:k197:d1:s0)		 goto _forcond_13($57)
led.c(l48:s199:k198:d0:s0)	 _forbreak_13($14) :
led.c(l49:s200:k199:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l49:s201:k200:d0:s0)		iTemp58 [k66 lr201:201 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l50:s202:k201:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l50:s204:k202:d1:s0)	 _forcond_14($60) :
led.c(l50:s205:k361:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s206:k362:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l50:s207:k363:d1:s0)		iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l50:s208:k204:d1:s0)		if iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_14($15)
led.c(l50:s209:k364:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s210:k365:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l50:s211:k366:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l50:s212:k211:d1:s0)		 goto _forcond_14($60)
led.c(l50:s213:k212:d0:s0)	 _forbreak_14($15) :
led.c(l51:s214:k213:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l51:s215:k214:d0:s0)		iTemp62 [k70 lr215:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l52:s216:k215:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l52:s218:k216:d1:s0)	 _forcond_15($63) :
led.c(l52:s219:k367:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s220:k368:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l52:s221:k369:d1:s0)		iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l52:s222:k218:d1:s0)		if iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _return($65)
led.c(l52:s223:k370:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s224:k371:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l52:s225:k372:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l52:s226:k225:d1:s0)		 goto _forcond_15($63)
led.c(l52:s227:k227:d0:s0)	 _return($65) :
led.c(l52:s228:k228:d0:s0)		eproc _sequencial [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}

----------------------------------------------------------------
Basic Block _eBBlock39 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 32 : bbnum = 31 1st iCode = 111 , last iCode = 114
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (111) (112) }

local defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (111) (112) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (103) (105) (111) (112) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (112) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (103) (111) (112) }

----------------------------------------------------------------
led.c(l36:s111:k322:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l36:s112:k323:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l36:s113:k324:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l36:s114:k113:d1:s0)		 goto _forcond_7($39)
led.c(l36:s115:k114:d0:s0)	 _forbreak_7($8) :
led.c(l37:s116:k115:d0:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
led.c(l37:s117:k116:d0:s0)		iTemp34 [k42 lr117:117 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l38:s118:k117:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l38:s120:k118:d1:s0)	 _forcond_8($42) :
led.c(l38:s121:k325:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l38:s122:k326:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l38:s123:k327:d1:s0)		iTemp35 [k43 lr123:124 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l38:s124:k120:d1:s0)		if iTemp35 [k43 lr123:124 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_8($9)
led.c(l38:s125:k328:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l38:s126:k329:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l38:s127:k330:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l38:s128:k127:d1:s0)		 goto _forcond_8($42)
led.c(l38:s129:k128:d0:s0)	 _forbreak_8($9) :
led.c(l39:s130:k129:d0:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
led.c(l39:s131:k130:d0:s0)		iTemp38 [k46 lr131:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l40:s132:k131:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l40:s134:k132:d1:s0)	 _forcond_9($45) :
led.c(l40:s135:k331:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l40:s136:k332:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l40:s137:k333:d1:s0)		iTemp39 [k47 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l40:s138:k134:d1:s0)		if iTemp39 [k47 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_9($10)
led.c(l40:s139:k334:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l40:s140:k335:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l40:s141:k336:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l40:s142:k141:d1:s0)		 goto _forcond_9($45)
led.c(l40:s143:k142:d0:s0)	 _forbreak_9($10) :
led.c(l41:s144:k143:d0:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
led.c(l41:s145:k144:d0:s0)		iTemp42 [k50 lr145:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l42:s146:k145:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l42:s148:k146:d1:s0)	 _forcond_10($48) :
led.c(l42:s149:k337:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l42:s150:k338:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l42:s151:k339:d1:s0)		iTemp43 [k51 lr151:152 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l42:s152:k148:d1:s0)		if iTemp43 [k51 lr151:152 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_10($11)
led.c(l42:s153:k340:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l42:s154:k341:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l42:s155:k342:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l42:s156:k155:d1:s0)		 goto _forcond_10($48)
led.c(l42:s157:k156:d0:s0)	 _forbreak_10($11) :
led.c(l43:s158:k157:d0:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
led.c(l43:s159:k158:d0:s0)		iTemp46 [k54 lr159:159 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l44:s160:k159:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l44:s162:k160:d1:s0)	 _forcond_11($51) :
led.c(l44:s163:k343:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l44:s164:k344:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l44:s165:k345:d1:s0)		iTemp47 [k55 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l44:s166:k162:d1:s0)		if iTemp47 [k55 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_11($12)
led.c(l44:s167:k346:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l44:s168:k347:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l44:s169:k348:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l44:s170:k169:d1:s0)		 goto _forcond_11($51)
led.c(l44:s171:k170:d0:s0)	 _forbreak_11($12) :
led.c(l45:s172:k171:d0:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
led.c(l45:s173:k172:d0:s0)		iTemp50 [k58 lr173:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l46:s174:k173:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l46:s176:k174:d1:s0)	 _forcond_12($54) :
led.c(l46:s177:k349:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s178:k350:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l46:s179:k351:d1:s0)		iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l46:s180:k176:d1:s0)		if iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_12($13)
led.c(l46:s181:k352:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s182:k353:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l46:s183:k354:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l46:s184:k183:d1:s0)		 goto _forcond_12($54)
led.c(l46:s185:k184:d0:s0)	 _forbreak_12($13) :
led.c(l47:s186:k185:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l47:s187:k186:d0:s0)		iTemp54 [k62 lr187:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l48:s188:k187:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l48:s190:k188:d1:s0)	 _forcond_13($57) :
led.c(l48:s191:k355:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s192:k356:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l48:s193:k357:d1:s0)		iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l48:s194:k190:d1:s0)		if iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_13($14)
led.c(l48:s195:k358:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s196:k359:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l48:s197:k360:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l48:s198:k197:d1:s0)		 goto _forcond_13($57)
led.c(l48:s199:k198:d0:s0)	 _forbreak_13($14) :
led.c(l49:s200:k199:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l49:s201:k200:d0:s0)		iTemp58 [k66 lr201:201 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l50:s202:k201:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l50:s204:k202:d1:s0)	 _forcond_14($60) :
led.c(l50:s205:k361:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s206:k362:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l50:s207:k363:d1:s0)		iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l50:s208:k204:d1:s0)		if iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_14($15)
led.c(l50:s209:k364:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s210:k365:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l50:s211:k366:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l50:s212:k211:d1:s0)		 goto _forcond_14($60)
led.c(l50:s213:k212:d0:s0)	 _forbreak_14($15) :
led.c(l51:s214:k213:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l51:s215:k214:d0:s0)		iTemp62 [k70 lr215:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l52:s216:k215:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l52:s218:k216:d1:s0)	 _forcond_15($63) :
led.c(l52:s219:k367:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s220:k368:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l52:s221:k369:d1:s0)		iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l52:s222:k218:d1:s0)		if iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _return($65)
led.c(l52:s223:k370:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s224:k371:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l52:s225:k372:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l52:s226:k225:d1:s0)		 goto _forcond_15($63)
led.c(l52:s227:k227:d0:s0)	 _return($65) :
led.c(l52:s228:k228:d0:s0)		eproc _sequencial [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}

----------------------------------------------------------------
Basic Block _forbreak_7 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 33 : bbnum = 32 1st iCode = 115 , last iCode = 118
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (117) }

local defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (116) (117) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (103) (105) (111) (112) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (117) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (116) }

----------------------------------------------------------------
led.c(l36:s115:k114:d0:s0)	 _forbreak_7($8) :
led.c(l37:s116:k115:d0:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
led.c(l37:s117:k116:d0:s0)		iTemp34 [k42 lr117:117 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l38:s118:k117:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l38:s120:k118:d1:s0)	 _forcond_8($42) :
led.c(l38:s121:k325:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l38:s122:k326:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l38:s123:k327:d1:s0)		iTemp35 [k43 lr123:124 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l38:s124:k120:d1:s0)		if iTemp35 [k43 lr123:124 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_8($9)
led.c(l38:s125:k328:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l38:s126:k329:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l38:s127:k330:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l38:s128:k127:d1:s0)		 goto _forcond_8($42)
led.c(l38:s129:k128:d0:s0)	 _forbreak_8($9) :
led.c(l39:s130:k129:d0:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
led.c(l39:s131:k130:d0:s0)		iTemp38 [k46 lr131:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l40:s132:k131:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l40:s134:k132:d1:s0)	 _forcond_9($45) :
led.c(l40:s135:k331:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l40:s136:k332:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l40:s137:k333:d1:s0)		iTemp39 [k47 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l40:s138:k134:d1:s0)		if iTemp39 [k47 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_9($10)
led.c(l40:s139:k334:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l40:s140:k335:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l40:s141:k336:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l40:s142:k141:d1:s0)		 goto _forcond_9($45)
led.c(l40:s143:k142:d0:s0)	 _forbreak_9($10) :
led.c(l41:s144:k143:d0:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
led.c(l41:s145:k144:d0:s0)		iTemp42 [k50 lr145:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l42:s146:k145:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l42:s148:k146:d1:s0)	 _forcond_10($48) :
led.c(l42:s149:k337:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l42:s150:k338:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l42:s151:k339:d1:s0)		iTemp43 [k51 lr151:152 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l42:s152:k148:d1:s0)		if iTemp43 [k51 lr151:152 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_10($11)
led.c(l42:s153:k340:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l42:s154:k341:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l42:s155:k342:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l42:s156:k155:d1:s0)		 goto _forcond_10($48)
led.c(l42:s157:k156:d0:s0)	 _forbreak_10($11) :
led.c(l43:s158:k157:d0:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
led.c(l43:s159:k158:d0:s0)		iTemp46 [k54 lr159:159 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l44:s160:k159:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l44:s162:k160:d1:s0)	 _forcond_11($51) :
led.c(l44:s163:k343:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l44:s164:k344:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l44:s165:k345:d1:s0)		iTemp47 [k55 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l44:s166:k162:d1:s0)		if iTemp47 [k55 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_11($12)
led.c(l44:s167:k346:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l44:s168:k347:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l44:s169:k348:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l44:s170:k169:d1:s0)		 goto _forcond_11($51)
led.c(l44:s171:k170:d0:s0)	 _forbreak_11($12) :
led.c(l45:s172:k171:d0:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
led.c(l45:s173:k172:d0:s0)		iTemp50 [k58 lr173:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l46:s174:k173:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l46:s176:k174:d1:s0)	 _forcond_12($54) :
led.c(l46:s177:k349:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s178:k350:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l46:s179:k351:d1:s0)		iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l46:s180:k176:d1:s0)		if iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_12($13)
led.c(l46:s181:k352:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s182:k353:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l46:s183:k354:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l46:s184:k183:d1:s0)		 goto _forcond_12($54)
led.c(l46:s185:k184:d0:s0)	 _forbreak_12($13) :
led.c(l47:s186:k185:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l47:s187:k186:d0:s0)		iTemp54 [k62 lr187:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l48:s188:k187:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l48:s190:k188:d1:s0)	 _forcond_13($57) :
led.c(l48:s191:k355:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s192:k356:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l48:s193:k357:d1:s0)		iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l48:s194:k190:d1:s0)		if iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_13($14)
led.c(l48:s195:k358:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s196:k359:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l48:s197:k360:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l48:s198:k197:d1:s0)		 goto _forcond_13($57)
led.c(l48:s199:k198:d0:s0)	 _forbreak_13($14) :
led.c(l49:s200:k199:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l49:s201:k200:d0:s0)		iTemp58 [k66 lr201:201 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l50:s202:k201:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l50:s204:k202:d1:s0)	 _forcond_14($60) :
led.c(l50:s205:k361:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s206:k362:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l50:s207:k363:d1:s0)		iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l50:s208:k204:d1:s0)		if iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_14($15)
led.c(l50:s209:k364:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s210:k365:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l50:s211:k366:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l50:s212:k211:d1:s0)		 goto _forcond_14($60)
led.c(l50:s213:k212:d0:s0)	 _forbreak_14($15) :
led.c(l51:s214:k213:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l51:s215:k214:d0:s0)		iTemp62 [k70 lr215:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l52:s216:k215:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l52:s218:k216:d1:s0)	 _forcond_15($63) :
led.c(l52:s219:k367:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s220:k368:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l52:s221:k369:d1:s0)		iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l52:s222:k218:d1:s0)		if iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _return($65)
led.c(l52:s223:k370:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s224:k371:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l52:s225:k372:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l52:s226:k225:d1:s0)		 goto _forcond_15($63)
led.c(l52:s227:k227:d0:s0)	 _return($65) :
led.c(l52:s228:k228:d0:s0)		eproc _sequencial [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}

----------------------------------------------------------------
Basic Block preHeaderLbl40 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 34 : bbnum = 33 1st iCode = 119 , last iCode = 119
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { }

local defines bitVector :
pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (117) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (117) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { }

----------------------------------------------------------------
led.c(l38:s119:k269:d0:s0)	 preHeaderLbl40($148) :
led.c(l38:s120:k118:d1:s0)	 _forcond_8($42) :
led.c(l38:s121:k325:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l38:s122:k326:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l38:s123:k327:d1:s0)		iTemp35 [k43 lr123:124 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l38:s124:k120:d1:s0)		if iTemp35 [k43 lr123:124 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_8($9)
led.c(l38:s125:k328:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l38:s126:k329:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l38:s127:k330:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l38:s128:k127:d1:s0)		 goto _forcond_8($42)
led.c(l38:s129:k128:d0:s0)	 _forbreak_8($9) :
led.c(l39:s130:k129:d0:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
led.c(l39:s131:k130:d0:s0)		iTemp38 [k46 lr131:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l40:s132:k131:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l40:s134:k132:d1:s0)	 _forcond_9($45) :
led.c(l40:s135:k331:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l40:s136:k332:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l40:s137:k333:d1:s0)		iTemp39 [k47 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l40:s138:k134:d1:s0)		if iTemp39 [k47 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_9($10)
led.c(l40:s139:k334:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l40:s140:k335:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l40:s141:k336:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l40:s142:k141:d1:s0)		 goto _forcond_9($45)
led.c(l40:s143:k142:d0:s0)	 _forbreak_9($10) :
led.c(l41:s144:k143:d0:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
led.c(l41:s145:k144:d0:s0)		iTemp42 [k50 lr145:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l42:s146:k145:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l42:s148:k146:d1:s0)	 _forcond_10($48) :
led.c(l42:s149:k337:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l42:s150:k338:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l42:s151:k339:d1:s0)		iTemp43 [k51 lr151:152 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l42:s152:k148:d1:s0)		if iTemp43 [k51 lr151:152 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_10($11)
led.c(l42:s153:k340:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l42:s154:k341:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l42:s155:k342:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l42:s156:k155:d1:s0)		 goto _forcond_10($48)
led.c(l42:s157:k156:d0:s0)	 _forbreak_10($11) :
led.c(l43:s158:k157:d0:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
led.c(l43:s159:k158:d0:s0)		iTemp46 [k54 lr159:159 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l44:s160:k159:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l44:s162:k160:d1:s0)	 _forcond_11($51) :
led.c(l44:s163:k343:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l44:s164:k344:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l44:s165:k345:d1:s0)		iTemp47 [k55 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l44:s166:k162:d1:s0)		if iTemp47 [k55 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_11($12)
led.c(l44:s167:k346:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l44:s168:k347:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l44:s169:k348:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l44:s170:k169:d1:s0)		 goto _forcond_11($51)
led.c(l44:s171:k170:d0:s0)	 _forbreak_11($12) :
led.c(l45:s172:k171:d0:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
led.c(l45:s173:k172:d0:s0)		iTemp50 [k58 lr173:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l46:s174:k173:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l46:s176:k174:d1:s0)	 _forcond_12($54) :
led.c(l46:s177:k349:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s178:k350:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l46:s179:k351:d1:s0)		iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l46:s180:k176:d1:s0)		if iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_12($13)
led.c(l46:s181:k352:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s182:k353:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l46:s183:k354:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l46:s184:k183:d1:s0)		 goto _forcond_12($54)
led.c(l46:s185:k184:d0:s0)	 _forbreak_12($13) :
led.c(l47:s186:k185:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l47:s187:k186:d0:s0)		iTemp54 [k62 lr187:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l48:s188:k187:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l48:s190:k188:d1:s0)	 _forcond_13($57) :
led.c(l48:s191:k355:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s192:k356:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l48:s193:k357:d1:s0)		iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l48:s194:k190:d1:s0)		if iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_13($14)
led.c(l48:s195:k358:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s196:k359:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l48:s197:k360:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l48:s198:k197:d1:s0)		 goto _forcond_13($57)
led.c(l48:s199:k198:d0:s0)	 _forbreak_13($14) :
led.c(l49:s200:k199:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l49:s201:k200:d0:s0)		iTemp58 [k66 lr201:201 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l50:s202:k201:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l50:s204:k202:d1:s0)	 _forcond_14($60) :
led.c(l50:s205:k361:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s206:k362:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l50:s207:k363:d1:s0)		iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l50:s208:k204:d1:s0)		if iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_14($15)
led.c(l50:s209:k364:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s210:k365:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l50:s211:k366:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l50:s212:k211:d1:s0)		 goto _forcond_14($60)
led.c(l50:s213:k212:d0:s0)	 _forbreak_14($15) :
led.c(l51:s214:k213:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l51:s215:k214:d0:s0)		iTemp62 [k70 lr215:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l52:s216:k215:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l52:s218:k216:d1:s0)	 _forcond_15($63) :
led.c(l52:s219:k367:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s220:k368:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l52:s221:k369:d1:s0)		iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l52:s222:k218:d1:s0)		if iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _return($65)
led.c(l52:s223:k370:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s224:k371:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l52:s225:k372:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l52:s226:k225:d1:s0)		 goto _forcond_15($63)
led.c(l52:s227:k227:d0:s0)	 _return($65) :
led.c(l52:s228:k228:d0:s0)		eproc _sequencial [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}

----------------------------------------------------------------
Basic Block _forcond_8 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 35 : bbnum = 34 1st iCode = 120 , last iCode = 124
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (119) }

local defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (119) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (117) (119) (125) (126) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (117) (119) (125) (126) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (117) (119) (126) }

----------------------------------------------------------------
led.c(l38:s120:k118:d1:s0)	 _forcond_8($42) :
led.c(l38:s121:k325:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l38:s122:k326:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l38:s123:k327:d1:s0)		iTemp35 [k43 lr123:124 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l38:s124:k120:d1:s0)		if iTemp35 [k43 lr123:124 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_8($9)
led.c(l38:s125:k328:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l38:s126:k329:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l38:s127:k330:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l38:s128:k127:d1:s0)		 goto _forcond_8($42)
led.c(l38:s129:k128:d0:s0)	 _forbreak_8($9) :
led.c(l39:s130:k129:d0:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
led.c(l39:s131:k130:d0:s0)		iTemp38 [k46 lr131:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l40:s132:k131:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l40:s134:k132:d1:s0)	 _forcond_9($45) :
led.c(l40:s135:k331:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l40:s136:k332:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l40:s137:k333:d1:s0)		iTemp39 [k47 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l40:s138:k134:d1:s0)		if iTemp39 [k47 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_9($10)
led.c(l40:s139:k334:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l40:s140:k335:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l40:s141:k336:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l40:s142:k141:d1:s0)		 goto _forcond_9($45)
led.c(l40:s143:k142:d0:s0)	 _forbreak_9($10) :
led.c(l41:s144:k143:d0:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
led.c(l41:s145:k144:d0:s0)		iTemp42 [k50 lr145:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l42:s146:k145:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l42:s148:k146:d1:s0)	 _forcond_10($48) :
led.c(l42:s149:k337:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l42:s150:k338:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l42:s151:k339:d1:s0)		iTemp43 [k51 lr151:152 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l42:s152:k148:d1:s0)		if iTemp43 [k51 lr151:152 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_10($11)
led.c(l42:s153:k340:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l42:s154:k341:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l42:s155:k342:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l42:s156:k155:d1:s0)		 goto _forcond_10($48)
led.c(l42:s157:k156:d0:s0)	 _forbreak_10($11) :
led.c(l43:s158:k157:d0:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
led.c(l43:s159:k158:d0:s0)		iTemp46 [k54 lr159:159 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l44:s160:k159:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l44:s162:k160:d1:s0)	 _forcond_11($51) :
led.c(l44:s163:k343:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l44:s164:k344:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l44:s165:k345:d1:s0)		iTemp47 [k55 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l44:s166:k162:d1:s0)		if iTemp47 [k55 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_11($12)
led.c(l44:s167:k346:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l44:s168:k347:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l44:s169:k348:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l44:s170:k169:d1:s0)		 goto _forcond_11($51)
led.c(l44:s171:k170:d0:s0)	 _forbreak_11($12) :
led.c(l45:s172:k171:d0:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
led.c(l45:s173:k172:d0:s0)		iTemp50 [k58 lr173:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l46:s174:k173:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l46:s176:k174:d1:s0)	 _forcond_12($54) :
led.c(l46:s177:k349:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s178:k350:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l46:s179:k351:d1:s0)		iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l46:s180:k176:d1:s0)		if iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_12($13)
led.c(l46:s181:k352:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s182:k353:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l46:s183:k354:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l46:s184:k183:d1:s0)		 goto _forcond_12($54)
led.c(l46:s185:k184:d0:s0)	 _forbreak_12($13) :
led.c(l47:s186:k185:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l47:s187:k186:d0:s0)		iTemp54 [k62 lr187:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l48:s188:k187:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l48:s190:k188:d1:s0)	 _forcond_13($57) :
led.c(l48:s191:k355:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s192:k356:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l48:s193:k357:d1:s0)		iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l48:s194:k190:d1:s0)		if iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_13($14)
led.c(l48:s195:k358:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s196:k359:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l48:s197:k360:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l48:s198:k197:d1:s0)		 goto _forcond_13($57)
led.c(l48:s199:k198:d0:s0)	 _forbreak_13($14) :
led.c(l49:s200:k199:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l49:s201:k200:d0:s0)		iTemp58 [k66 lr201:201 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l50:s202:k201:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l50:s204:k202:d1:s0)	 _forcond_14($60) :
led.c(l50:s205:k361:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s206:k362:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l50:s207:k363:d1:s0)		iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l50:s208:k204:d1:s0)		if iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_14($15)
led.c(l50:s209:k364:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s210:k365:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l50:s211:k366:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l50:s212:k211:d1:s0)		 goto _forcond_14($60)
led.c(l50:s213:k212:d0:s0)	 _forbreak_14($15) :
led.c(l51:s214:k213:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l51:s215:k214:d0:s0)		iTemp62 [k70 lr215:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l52:s216:k215:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l52:s218:k216:d1:s0)	 _forcond_15($63) :
led.c(l52:s219:k367:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s220:k368:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l52:s221:k369:d1:s0)		iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l52:s222:k218:d1:s0)		if iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _return($65)
led.c(l52:s223:k370:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s224:k371:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l52:s225:k372:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l52:s226:k225:d1:s0)		 goto _forcond_15($63)
led.c(l52:s227:k227:d0:s0)	 _return($65) :
led.c(l52:s228:k228:d0:s0)		eproc _sequencial [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}

----------------------------------------------------------------
Basic Block _eBBlock40 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 36 : bbnum = 35 1st iCode = 125 , last iCode = 128
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (125) (126) }

local defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (125) (126) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (117) (119) (125) (126) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (126) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (117) (125) (126) }

----------------------------------------------------------------
led.c(l38:s125:k328:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l38:s126:k329:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l38:s127:k330:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l38:s128:k127:d1:s0)		 goto _forcond_8($42)
led.c(l38:s129:k128:d0:s0)	 _forbreak_8($9) :
led.c(l39:s130:k129:d0:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
led.c(l39:s131:k130:d0:s0)		iTemp38 [k46 lr131:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l40:s132:k131:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l40:s134:k132:d1:s0)	 _forcond_9($45) :
led.c(l40:s135:k331:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l40:s136:k332:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l40:s137:k333:d1:s0)		iTemp39 [k47 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l40:s138:k134:d1:s0)		if iTemp39 [k47 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_9($10)
led.c(l40:s139:k334:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l40:s140:k335:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l40:s141:k336:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l40:s142:k141:d1:s0)		 goto _forcond_9($45)
led.c(l40:s143:k142:d0:s0)	 _forbreak_9($10) :
led.c(l41:s144:k143:d0:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
led.c(l41:s145:k144:d0:s0)		iTemp42 [k50 lr145:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l42:s146:k145:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l42:s148:k146:d1:s0)	 _forcond_10($48) :
led.c(l42:s149:k337:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l42:s150:k338:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l42:s151:k339:d1:s0)		iTemp43 [k51 lr151:152 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l42:s152:k148:d1:s0)		if iTemp43 [k51 lr151:152 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_10($11)
led.c(l42:s153:k340:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l42:s154:k341:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l42:s155:k342:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l42:s156:k155:d1:s0)		 goto _forcond_10($48)
led.c(l42:s157:k156:d0:s0)	 _forbreak_10($11) :
led.c(l43:s158:k157:d0:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
led.c(l43:s159:k158:d0:s0)		iTemp46 [k54 lr159:159 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l44:s160:k159:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l44:s162:k160:d1:s0)	 _forcond_11($51) :
led.c(l44:s163:k343:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l44:s164:k344:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l44:s165:k345:d1:s0)		iTemp47 [k55 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l44:s166:k162:d1:s0)		if iTemp47 [k55 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_11($12)
led.c(l44:s167:k346:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l44:s168:k347:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l44:s169:k348:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l44:s170:k169:d1:s0)		 goto _forcond_11($51)
led.c(l44:s171:k170:d0:s0)	 _forbreak_11($12) :
led.c(l45:s172:k171:d0:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
led.c(l45:s173:k172:d0:s0)		iTemp50 [k58 lr173:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l46:s174:k173:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l46:s176:k174:d1:s0)	 _forcond_12($54) :
led.c(l46:s177:k349:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s178:k350:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l46:s179:k351:d1:s0)		iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l46:s180:k176:d1:s0)		if iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_12($13)
led.c(l46:s181:k352:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s182:k353:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l46:s183:k354:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l46:s184:k183:d1:s0)		 goto _forcond_12($54)
led.c(l46:s185:k184:d0:s0)	 _forbreak_12($13) :
led.c(l47:s186:k185:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l47:s187:k186:d0:s0)		iTemp54 [k62 lr187:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l48:s188:k187:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l48:s190:k188:d1:s0)	 _forcond_13($57) :
led.c(l48:s191:k355:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s192:k356:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l48:s193:k357:d1:s0)		iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l48:s194:k190:d1:s0)		if iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_13($14)
led.c(l48:s195:k358:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s196:k359:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l48:s197:k360:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l48:s198:k197:d1:s0)		 goto _forcond_13($57)
led.c(l48:s199:k198:d0:s0)	 _forbreak_13($14) :
led.c(l49:s200:k199:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l49:s201:k200:d0:s0)		iTemp58 [k66 lr201:201 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l50:s202:k201:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l50:s204:k202:d1:s0)	 _forcond_14($60) :
led.c(l50:s205:k361:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s206:k362:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l50:s207:k363:d1:s0)		iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l50:s208:k204:d1:s0)		if iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_14($15)
led.c(l50:s209:k364:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s210:k365:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l50:s211:k366:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l50:s212:k211:d1:s0)		 goto _forcond_14($60)
led.c(l50:s213:k212:d0:s0)	 _forbreak_14($15) :
led.c(l51:s214:k213:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l51:s215:k214:d0:s0)		iTemp62 [k70 lr215:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l52:s216:k215:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l52:s218:k216:d1:s0)	 _forcond_15($63) :
led.c(l52:s219:k367:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s220:k368:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l52:s221:k369:d1:s0)		iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l52:s222:k218:d1:s0)		if iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _return($65)
led.c(l52:s223:k370:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s224:k371:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l52:s225:k372:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l52:s226:k225:d1:s0)		 goto _forcond_15($63)
led.c(l52:s227:k227:d0:s0)	 _return($65) :
led.c(l52:s228:k228:d0:s0)		eproc _sequencial [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}

----------------------------------------------------------------
Basic Block _forbreak_8 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 37 : bbnum = 36 1st iCode = 129 , last iCode = 132
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (131) }

local defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (130) (131) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (117) (119) (125) (126) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (131) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (130) }

----------------------------------------------------------------
led.c(l38:s129:k128:d0:s0)	 _forbreak_8($9) :
led.c(l39:s130:k129:d0:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
led.c(l39:s131:k130:d0:s0)		iTemp38 [k46 lr131:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l40:s132:k131:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l40:s134:k132:d1:s0)	 _forcond_9($45) :
led.c(l40:s135:k331:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l40:s136:k332:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l40:s137:k333:d1:s0)		iTemp39 [k47 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l40:s138:k134:d1:s0)		if iTemp39 [k47 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_9($10)
led.c(l40:s139:k334:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l40:s140:k335:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l40:s141:k336:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l40:s142:k141:d1:s0)		 goto _forcond_9($45)
led.c(l40:s143:k142:d0:s0)	 _forbreak_9($10) :
led.c(l41:s144:k143:d0:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
led.c(l41:s145:k144:d0:s0)		iTemp42 [k50 lr145:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l42:s146:k145:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l42:s148:k146:d1:s0)	 _forcond_10($48) :
led.c(l42:s149:k337:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l42:s150:k338:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l42:s151:k339:d1:s0)		iTemp43 [k51 lr151:152 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l42:s152:k148:d1:s0)		if iTemp43 [k51 lr151:152 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_10($11)
led.c(l42:s153:k340:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l42:s154:k341:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l42:s155:k342:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l42:s156:k155:d1:s0)		 goto _forcond_10($48)
led.c(l42:s157:k156:d0:s0)	 _forbreak_10($11) :
led.c(l43:s158:k157:d0:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
led.c(l43:s159:k158:d0:s0)		iTemp46 [k54 lr159:159 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l44:s160:k159:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l44:s162:k160:d1:s0)	 _forcond_11($51) :
led.c(l44:s163:k343:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l44:s164:k344:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l44:s165:k345:d1:s0)		iTemp47 [k55 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l44:s166:k162:d1:s0)		if iTemp47 [k55 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_11($12)
led.c(l44:s167:k346:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l44:s168:k347:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l44:s169:k348:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l44:s170:k169:d1:s0)		 goto _forcond_11($51)
led.c(l44:s171:k170:d0:s0)	 _forbreak_11($12) :
led.c(l45:s172:k171:d0:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
led.c(l45:s173:k172:d0:s0)		iTemp50 [k58 lr173:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l46:s174:k173:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l46:s176:k174:d1:s0)	 _forcond_12($54) :
led.c(l46:s177:k349:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s178:k350:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l46:s179:k351:d1:s0)		iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l46:s180:k176:d1:s0)		if iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_12($13)
led.c(l46:s181:k352:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s182:k353:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l46:s183:k354:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l46:s184:k183:d1:s0)		 goto _forcond_12($54)
led.c(l46:s185:k184:d0:s0)	 _forbreak_12($13) :
led.c(l47:s186:k185:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l47:s187:k186:d0:s0)		iTemp54 [k62 lr187:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l48:s188:k187:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l48:s190:k188:d1:s0)	 _forcond_13($57) :
led.c(l48:s191:k355:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s192:k356:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l48:s193:k357:d1:s0)		iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l48:s194:k190:d1:s0)		if iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_13($14)
led.c(l48:s195:k358:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s196:k359:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l48:s197:k360:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l48:s198:k197:d1:s0)		 goto _forcond_13($57)
led.c(l48:s199:k198:d0:s0)	 _forbreak_13($14) :
led.c(l49:s200:k199:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l49:s201:k200:d0:s0)		iTemp58 [k66 lr201:201 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l50:s202:k201:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l50:s204:k202:d1:s0)	 _forcond_14($60) :
led.c(l50:s205:k361:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s206:k362:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l50:s207:k363:d1:s0)		iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l50:s208:k204:d1:s0)		if iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_14($15)
led.c(l50:s209:k364:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s210:k365:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l50:s211:k366:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l50:s212:k211:d1:s0)		 goto _forcond_14($60)
led.c(l50:s213:k212:d0:s0)	 _forbreak_14($15) :
led.c(l51:s214:k213:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l51:s215:k214:d0:s0)		iTemp62 [k70 lr215:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l52:s216:k215:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l52:s218:k216:d1:s0)	 _forcond_15($63) :
led.c(l52:s219:k367:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s220:k368:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l52:s221:k369:d1:s0)		iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l52:s222:k218:d1:s0)		if iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _return($65)
led.c(l52:s223:k370:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s224:k371:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l52:s225:k372:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l52:s226:k225:d1:s0)		 goto _forcond_15($63)
led.c(l52:s227:k227:d0:s0)	 _return($65) :
led.c(l52:s228:k228:d0:s0)		eproc _sequencial [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}

----------------------------------------------------------------
Basic Block preHeaderLbl41 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 38 : bbnum = 37 1st iCode = 133 , last iCode = 133
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { }

local defines bitVector :
pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (131) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (131) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { }

----------------------------------------------------------------
led.c(l40:s133:k270:d0:s0)	 preHeaderLbl41($150) :
led.c(l40:s134:k132:d1:s0)	 _forcond_9($45) :
led.c(l40:s135:k331:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l40:s136:k332:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l40:s137:k333:d1:s0)		iTemp39 [k47 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l40:s138:k134:d1:s0)		if iTemp39 [k47 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_9($10)
led.c(l40:s139:k334:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l40:s140:k335:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l40:s141:k336:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l40:s142:k141:d1:s0)		 goto _forcond_9($45)
led.c(l40:s143:k142:d0:s0)	 _forbreak_9($10) :
led.c(l41:s144:k143:d0:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
led.c(l41:s145:k144:d0:s0)		iTemp42 [k50 lr145:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l42:s146:k145:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l42:s148:k146:d1:s0)	 _forcond_10($48) :
led.c(l42:s149:k337:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l42:s150:k338:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l42:s151:k339:d1:s0)		iTemp43 [k51 lr151:152 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l42:s152:k148:d1:s0)		if iTemp43 [k51 lr151:152 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_10($11)
led.c(l42:s153:k340:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l42:s154:k341:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l42:s155:k342:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l42:s156:k155:d1:s0)		 goto _forcond_10($48)
led.c(l42:s157:k156:d0:s0)	 _forbreak_10($11) :
led.c(l43:s158:k157:d0:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
led.c(l43:s159:k158:d0:s0)		iTemp46 [k54 lr159:159 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l44:s160:k159:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l44:s162:k160:d1:s0)	 _forcond_11($51) :
led.c(l44:s163:k343:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l44:s164:k344:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l44:s165:k345:d1:s0)		iTemp47 [k55 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l44:s166:k162:d1:s0)		if iTemp47 [k55 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_11($12)
led.c(l44:s167:k346:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l44:s168:k347:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l44:s169:k348:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l44:s170:k169:d1:s0)		 goto _forcond_11($51)
led.c(l44:s171:k170:d0:s0)	 _forbreak_11($12) :
led.c(l45:s172:k171:d0:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
led.c(l45:s173:k172:d0:s0)		iTemp50 [k58 lr173:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l46:s174:k173:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l46:s176:k174:d1:s0)	 _forcond_12($54) :
led.c(l46:s177:k349:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s178:k350:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l46:s179:k351:d1:s0)		iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l46:s180:k176:d1:s0)		if iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_12($13)
led.c(l46:s181:k352:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s182:k353:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l46:s183:k354:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l46:s184:k183:d1:s0)		 goto _forcond_12($54)
led.c(l46:s185:k184:d0:s0)	 _forbreak_12($13) :
led.c(l47:s186:k185:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l47:s187:k186:d0:s0)		iTemp54 [k62 lr187:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l48:s188:k187:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l48:s190:k188:d1:s0)	 _forcond_13($57) :
led.c(l48:s191:k355:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s192:k356:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l48:s193:k357:d1:s0)		iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l48:s194:k190:d1:s0)		if iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_13($14)
led.c(l48:s195:k358:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s196:k359:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l48:s197:k360:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l48:s198:k197:d1:s0)		 goto _forcond_13($57)
led.c(l48:s199:k198:d0:s0)	 _forbreak_13($14) :
led.c(l49:s200:k199:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l49:s201:k200:d0:s0)		iTemp58 [k66 lr201:201 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l50:s202:k201:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l50:s204:k202:d1:s0)	 _forcond_14($60) :
led.c(l50:s205:k361:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s206:k362:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l50:s207:k363:d1:s0)		iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l50:s208:k204:d1:s0)		if iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_14($15)
led.c(l50:s209:k364:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s210:k365:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l50:s211:k366:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l50:s212:k211:d1:s0)		 goto _forcond_14($60)
led.c(l50:s213:k212:d0:s0)	 _forbreak_14($15) :
led.c(l51:s214:k213:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l51:s215:k214:d0:s0)		iTemp62 [k70 lr215:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l52:s216:k215:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l52:s218:k216:d1:s0)	 _forcond_15($63) :
led.c(l52:s219:k367:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s220:k368:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l52:s221:k369:d1:s0)		iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l52:s222:k218:d1:s0)		if iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _return($65)
led.c(l52:s223:k370:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s224:k371:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l52:s225:k372:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l52:s226:k225:d1:s0)		 goto _forcond_15($63)
led.c(l52:s227:k227:d0:s0)	 _return($65) :
led.c(l52:s228:k228:d0:s0)		eproc _sequencial [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}

----------------------------------------------------------------
Basic Block _forcond_9 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 39 : bbnum = 38 1st iCode = 134 , last iCode = 138
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (133) }

local defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (133) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (131) (133) (139) (140) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (131) (133) (139) (140) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (131) (133) (140) }

----------------------------------------------------------------
led.c(l40:s134:k132:d1:s0)	 _forcond_9($45) :
led.c(l40:s135:k331:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l40:s136:k332:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l40:s137:k333:d1:s0)		iTemp39 [k47 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l40:s138:k134:d1:s0)		if iTemp39 [k47 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_9($10)
led.c(l40:s139:k334:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l40:s140:k335:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l40:s141:k336:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l40:s142:k141:d1:s0)		 goto _forcond_9($45)
led.c(l40:s143:k142:d0:s0)	 _forbreak_9($10) :
led.c(l41:s144:k143:d0:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
led.c(l41:s145:k144:d0:s0)		iTemp42 [k50 lr145:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l42:s146:k145:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l42:s148:k146:d1:s0)	 _forcond_10($48) :
led.c(l42:s149:k337:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l42:s150:k338:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l42:s151:k339:d1:s0)		iTemp43 [k51 lr151:152 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l42:s152:k148:d1:s0)		if iTemp43 [k51 lr151:152 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_10($11)
led.c(l42:s153:k340:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l42:s154:k341:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l42:s155:k342:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l42:s156:k155:d1:s0)		 goto _forcond_10($48)
led.c(l42:s157:k156:d0:s0)	 _forbreak_10($11) :
led.c(l43:s158:k157:d0:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
led.c(l43:s159:k158:d0:s0)		iTemp46 [k54 lr159:159 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l44:s160:k159:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l44:s162:k160:d1:s0)	 _forcond_11($51) :
led.c(l44:s163:k343:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l44:s164:k344:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l44:s165:k345:d1:s0)		iTemp47 [k55 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l44:s166:k162:d1:s0)		if iTemp47 [k55 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_11($12)
led.c(l44:s167:k346:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l44:s168:k347:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l44:s169:k348:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l44:s170:k169:d1:s0)		 goto _forcond_11($51)
led.c(l44:s171:k170:d0:s0)	 _forbreak_11($12) :
led.c(l45:s172:k171:d0:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
led.c(l45:s173:k172:d0:s0)		iTemp50 [k58 lr173:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l46:s174:k173:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l46:s176:k174:d1:s0)	 _forcond_12($54) :
led.c(l46:s177:k349:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s178:k350:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l46:s179:k351:d1:s0)		iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l46:s180:k176:d1:s0)		if iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_12($13)
led.c(l46:s181:k352:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s182:k353:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l46:s183:k354:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l46:s184:k183:d1:s0)		 goto _forcond_12($54)
led.c(l46:s185:k184:d0:s0)	 _forbreak_12($13) :
led.c(l47:s186:k185:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l47:s187:k186:d0:s0)		iTemp54 [k62 lr187:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l48:s188:k187:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l48:s190:k188:d1:s0)	 _forcond_13($57) :
led.c(l48:s191:k355:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s192:k356:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l48:s193:k357:d1:s0)		iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l48:s194:k190:d1:s0)		if iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_13($14)
led.c(l48:s195:k358:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s196:k359:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l48:s197:k360:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l48:s198:k197:d1:s0)		 goto _forcond_13($57)
led.c(l48:s199:k198:d0:s0)	 _forbreak_13($14) :
led.c(l49:s200:k199:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l49:s201:k200:d0:s0)		iTemp58 [k66 lr201:201 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l50:s202:k201:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l50:s204:k202:d1:s0)	 _forcond_14($60) :
led.c(l50:s205:k361:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s206:k362:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l50:s207:k363:d1:s0)		iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l50:s208:k204:d1:s0)		if iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_14($15)
led.c(l50:s209:k364:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s210:k365:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l50:s211:k366:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l50:s212:k211:d1:s0)		 goto _forcond_14($60)
led.c(l50:s213:k212:d0:s0)	 _forbreak_14($15) :
led.c(l51:s214:k213:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l51:s215:k214:d0:s0)		iTemp62 [k70 lr215:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l52:s216:k215:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l52:s218:k216:d1:s0)	 _forcond_15($63) :
led.c(l52:s219:k367:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s220:k368:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l52:s221:k369:d1:s0)		iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l52:s222:k218:d1:s0)		if iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _return($65)
led.c(l52:s223:k370:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s224:k371:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l52:s225:k372:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l52:s226:k225:d1:s0)		 goto _forcond_15($63)
led.c(l52:s227:k227:d0:s0)	 _return($65) :
led.c(l52:s228:k228:d0:s0)		eproc _sequencial [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}

----------------------------------------------------------------
Basic Block _eBBlock41 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 40 : bbnum = 39 1st iCode = 139 , last iCode = 142
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (139) (140) }

local defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (139) (140) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (131) (133) (139) (140) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (133) (139) (140) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (131) (139) (140) }

----------------------------------------------------------------
led.c(l40:s139:k334:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l40:s140:k335:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l40:s141:k336:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l40:s142:k141:d1:s0)		 goto _forcond_9($45)
led.c(l40:s143:k142:d0:s0)	 _forbreak_9($10) :
led.c(l41:s144:k143:d0:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
led.c(l41:s145:k144:d0:s0)		iTemp42 [k50 lr145:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l42:s146:k145:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l42:s148:k146:d1:s0)	 _forcond_10($48) :
led.c(l42:s149:k337:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l42:s150:k338:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l42:s151:k339:d1:s0)		iTemp43 [k51 lr151:152 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l42:s152:k148:d1:s0)		if iTemp43 [k51 lr151:152 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_10($11)
led.c(l42:s153:k340:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l42:s154:k341:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l42:s155:k342:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l42:s156:k155:d1:s0)		 goto _forcond_10($48)
led.c(l42:s157:k156:d0:s0)	 _forbreak_10($11) :
led.c(l43:s158:k157:d0:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
led.c(l43:s159:k158:d0:s0)		iTemp46 [k54 lr159:159 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l44:s160:k159:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l44:s162:k160:d1:s0)	 _forcond_11($51) :
led.c(l44:s163:k343:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l44:s164:k344:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l44:s165:k345:d1:s0)		iTemp47 [k55 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l44:s166:k162:d1:s0)		if iTemp47 [k55 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_11($12)
led.c(l44:s167:k346:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l44:s168:k347:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l44:s169:k348:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l44:s170:k169:d1:s0)		 goto _forcond_11($51)
led.c(l44:s171:k170:d0:s0)	 _forbreak_11($12) :
led.c(l45:s172:k171:d0:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
led.c(l45:s173:k172:d0:s0)		iTemp50 [k58 lr173:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l46:s174:k173:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l46:s176:k174:d1:s0)	 _forcond_12($54) :
led.c(l46:s177:k349:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s178:k350:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l46:s179:k351:d1:s0)		iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l46:s180:k176:d1:s0)		if iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_12($13)
led.c(l46:s181:k352:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s182:k353:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l46:s183:k354:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l46:s184:k183:d1:s0)		 goto _forcond_12($54)
led.c(l46:s185:k184:d0:s0)	 _forbreak_12($13) :
led.c(l47:s186:k185:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l47:s187:k186:d0:s0)		iTemp54 [k62 lr187:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l48:s188:k187:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l48:s190:k188:d1:s0)	 _forcond_13($57) :
led.c(l48:s191:k355:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s192:k356:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l48:s193:k357:d1:s0)		iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l48:s194:k190:d1:s0)		if iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_13($14)
led.c(l48:s195:k358:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s196:k359:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l48:s197:k360:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l48:s198:k197:d1:s0)		 goto _forcond_13($57)
led.c(l48:s199:k198:d0:s0)	 _forbreak_13($14) :
led.c(l49:s200:k199:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l49:s201:k200:d0:s0)		iTemp58 [k66 lr201:201 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l50:s202:k201:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l50:s204:k202:d1:s0)	 _forcond_14($60) :
led.c(l50:s205:k361:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s206:k362:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l50:s207:k363:d1:s0)		iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l50:s208:k204:d1:s0)		if iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_14($15)
led.c(l50:s209:k364:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s210:k365:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l50:s211:k366:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l50:s212:k211:d1:s0)		 goto _forcond_14($60)
led.c(l50:s213:k212:d0:s0)	 _forbreak_14($15) :
led.c(l51:s214:k213:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l51:s215:k214:d0:s0)		iTemp62 [k70 lr215:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l52:s216:k215:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l52:s218:k216:d1:s0)	 _forcond_15($63) :
led.c(l52:s219:k367:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s220:k368:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l52:s221:k369:d1:s0)		iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l52:s222:k218:d1:s0)		if iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _return($65)
led.c(l52:s223:k370:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s224:k371:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l52:s225:k372:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l52:s226:k225:d1:s0)		 goto _forcond_15($63)
led.c(l52:s227:k227:d0:s0)	 _return($65) :
led.c(l52:s228:k228:d0:s0)		eproc _sequencial [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}

----------------------------------------------------------------
Basic Block _forbreak_9 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 41 : bbnum = 40 1st iCode = 143 , last iCode = 146
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (145) }

local defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (144) (145) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (131) (133) (139) (140) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (133) (139) (144) (145) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (144) }

----------------------------------------------------------------
led.c(l40:s143:k142:d0:s0)	 _forbreak_9($10) :
led.c(l41:s144:k143:d0:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
led.c(l41:s145:k144:d0:s0)		iTemp42 [k50 lr145:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l42:s146:k145:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l42:s148:k146:d1:s0)	 _forcond_10($48) :
led.c(l42:s149:k337:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l42:s150:k338:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l42:s151:k339:d1:s0)		iTemp43 [k51 lr151:152 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l42:s152:k148:d1:s0)		if iTemp43 [k51 lr151:152 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_10($11)
led.c(l42:s153:k340:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l42:s154:k341:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l42:s155:k342:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l42:s156:k155:d1:s0)		 goto _forcond_10($48)
led.c(l42:s157:k156:d0:s0)	 _forbreak_10($11) :
led.c(l43:s158:k157:d0:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
led.c(l43:s159:k158:d0:s0)		iTemp46 [k54 lr159:159 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l44:s160:k159:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l44:s162:k160:d1:s0)	 _forcond_11($51) :
led.c(l44:s163:k343:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l44:s164:k344:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l44:s165:k345:d1:s0)		iTemp47 [k55 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l44:s166:k162:d1:s0)		if iTemp47 [k55 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_11($12)
led.c(l44:s167:k346:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l44:s168:k347:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l44:s169:k348:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l44:s170:k169:d1:s0)		 goto _forcond_11($51)
led.c(l44:s171:k170:d0:s0)	 _forbreak_11($12) :
led.c(l45:s172:k171:d0:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
led.c(l45:s173:k172:d0:s0)		iTemp50 [k58 lr173:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l46:s174:k173:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l46:s176:k174:d1:s0)	 _forcond_12($54) :
led.c(l46:s177:k349:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s178:k350:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l46:s179:k351:d1:s0)		iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l46:s180:k176:d1:s0)		if iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_12($13)
led.c(l46:s181:k352:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s182:k353:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l46:s183:k354:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l46:s184:k183:d1:s0)		 goto _forcond_12($54)
led.c(l46:s185:k184:d0:s0)	 _forbreak_12($13) :
led.c(l47:s186:k185:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l47:s187:k186:d0:s0)		iTemp54 [k62 lr187:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l48:s188:k187:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l48:s190:k188:d1:s0)	 _forcond_13($57) :
led.c(l48:s191:k355:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s192:k356:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l48:s193:k357:d1:s0)		iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l48:s194:k190:d1:s0)		if iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_13($14)
led.c(l48:s195:k358:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s196:k359:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l48:s197:k360:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l48:s198:k197:d1:s0)		 goto _forcond_13($57)
led.c(l48:s199:k198:d0:s0)	 _forbreak_13($14) :
led.c(l49:s200:k199:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l49:s201:k200:d0:s0)		iTemp58 [k66 lr201:201 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l50:s202:k201:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l50:s204:k202:d1:s0)	 _forcond_14($60) :
led.c(l50:s205:k361:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s206:k362:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l50:s207:k363:d1:s0)		iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l50:s208:k204:d1:s0)		if iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_14($15)
led.c(l50:s209:k364:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s210:k365:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l50:s211:k366:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l50:s212:k211:d1:s0)		 goto _forcond_14($60)
led.c(l50:s213:k212:d0:s0)	 _forbreak_14($15) :
led.c(l51:s214:k213:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l51:s215:k214:d0:s0)		iTemp62 [k70 lr215:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l52:s216:k215:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l52:s218:k216:d1:s0)	 _forcond_15($63) :
led.c(l52:s219:k367:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s220:k368:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l52:s221:k369:d1:s0)		iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l52:s222:k218:d1:s0)		if iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _return($65)
led.c(l52:s223:k370:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s224:k371:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l52:s225:k372:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l52:s226:k225:d1:s0)		 goto _forcond_15($63)
led.c(l52:s227:k227:d0:s0)	 _return($65) :
led.c(l52:s228:k228:d0:s0)		eproc _sequencial [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}

----------------------------------------------------------------
Basic Block preHeaderLbl42 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 42 : bbnum = 41 1st iCode = 147 , last iCode = 147
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { }

local defines bitVector :
pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (133) (139) (144) (145) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (133) (139) (144) (145) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { }

----------------------------------------------------------------
led.c(l42:s147:k271:d0:s0)	 preHeaderLbl42($152) :
led.c(l42:s148:k146:d1:s0)	 _forcond_10($48) :
led.c(l42:s149:k337:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l42:s150:k338:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l42:s151:k339:d1:s0)		iTemp43 [k51 lr151:152 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l42:s152:k148:d1:s0)		if iTemp43 [k51 lr151:152 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_10($11)
led.c(l42:s153:k340:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l42:s154:k341:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l42:s155:k342:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l42:s156:k155:d1:s0)		 goto _forcond_10($48)
led.c(l42:s157:k156:d0:s0)	 _forbreak_10($11) :
led.c(l43:s158:k157:d0:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
led.c(l43:s159:k158:d0:s0)		iTemp46 [k54 lr159:159 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l44:s160:k159:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l44:s162:k160:d1:s0)	 _forcond_11($51) :
led.c(l44:s163:k343:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l44:s164:k344:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l44:s165:k345:d1:s0)		iTemp47 [k55 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l44:s166:k162:d1:s0)		if iTemp47 [k55 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_11($12)
led.c(l44:s167:k346:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l44:s168:k347:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l44:s169:k348:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l44:s170:k169:d1:s0)		 goto _forcond_11($51)
led.c(l44:s171:k170:d0:s0)	 _forbreak_11($12) :
led.c(l45:s172:k171:d0:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
led.c(l45:s173:k172:d0:s0)		iTemp50 [k58 lr173:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l46:s174:k173:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l46:s176:k174:d1:s0)	 _forcond_12($54) :
led.c(l46:s177:k349:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s178:k350:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l46:s179:k351:d1:s0)		iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l46:s180:k176:d1:s0)		if iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_12($13)
led.c(l46:s181:k352:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s182:k353:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l46:s183:k354:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l46:s184:k183:d1:s0)		 goto _forcond_12($54)
led.c(l46:s185:k184:d0:s0)	 _forbreak_12($13) :
led.c(l47:s186:k185:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l47:s187:k186:d0:s0)		iTemp54 [k62 lr187:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l48:s188:k187:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l48:s190:k188:d1:s0)	 _forcond_13($57) :
led.c(l48:s191:k355:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s192:k356:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l48:s193:k357:d1:s0)		iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l48:s194:k190:d1:s0)		if iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_13($14)
led.c(l48:s195:k358:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s196:k359:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l48:s197:k360:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l48:s198:k197:d1:s0)		 goto _forcond_13($57)
led.c(l48:s199:k198:d0:s0)	 _forbreak_13($14) :
led.c(l49:s200:k199:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l49:s201:k200:d0:s0)		iTemp58 [k66 lr201:201 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l50:s202:k201:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l50:s204:k202:d1:s0)	 _forcond_14($60) :
led.c(l50:s205:k361:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s206:k362:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l50:s207:k363:d1:s0)		iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l50:s208:k204:d1:s0)		if iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_14($15)
led.c(l50:s209:k364:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s210:k365:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l50:s211:k366:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l50:s212:k211:d1:s0)		 goto _forcond_14($60)
led.c(l50:s213:k212:d0:s0)	 _forbreak_14($15) :
led.c(l51:s214:k213:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l51:s215:k214:d0:s0)		iTemp62 [k70 lr215:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l52:s216:k215:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l52:s218:k216:d1:s0)	 _forcond_15($63) :
led.c(l52:s219:k367:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s220:k368:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l52:s221:k369:d1:s0)		iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l52:s222:k218:d1:s0)		if iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _return($65)
led.c(l52:s223:k370:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s224:k371:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l52:s225:k372:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l52:s226:k225:d1:s0)		 goto _forcond_15($63)
led.c(l52:s227:k227:d0:s0)	 _return($65) :
led.c(l52:s228:k228:d0:s0)		eproc _sequencial [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}

----------------------------------------------------------------
Basic Block _forcond_10 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 43 : bbnum = 42 1st iCode = 148 , last iCode = 152
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (147) }

local defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (147) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (133) (139) (144) (145) (147) (153) (154) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (133) (139) (144) (145) (147) (153) (154) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (145) (147) (154) }

----------------------------------------------------------------
led.c(l42:s148:k146:d1:s0)	 _forcond_10($48) :
led.c(l42:s149:k337:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l42:s150:k338:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l42:s151:k339:d1:s0)		iTemp43 [k51 lr151:152 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l42:s152:k148:d1:s0)		if iTemp43 [k51 lr151:152 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_10($11)
led.c(l42:s153:k340:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l42:s154:k341:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l42:s155:k342:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l42:s156:k155:d1:s0)		 goto _forcond_10($48)
led.c(l42:s157:k156:d0:s0)	 _forbreak_10($11) :
led.c(l43:s158:k157:d0:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
led.c(l43:s159:k158:d0:s0)		iTemp46 [k54 lr159:159 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l44:s160:k159:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l44:s162:k160:d1:s0)	 _forcond_11($51) :
led.c(l44:s163:k343:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l44:s164:k344:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l44:s165:k345:d1:s0)		iTemp47 [k55 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l44:s166:k162:d1:s0)		if iTemp47 [k55 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_11($12)
led.c(l44:s167:k346:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l44:s168:k347:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l44:s169:k348:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l44:s170:k169:d1:s0)		 goto _forcond_11($51)
led.c(l44:s171:k170:d0:s0)	 _forbreak_11($12) :
led.c(l45:s172:k171:d0:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
led.c(l45:s173:k172:d0:s0)		iTemp50 [k58 lr173:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l46:s174:k173:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l46:s176:k174:d1:s0)	 _forcond_12($54) :
led.c(l46:s177:k349:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s178:k350:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l46:s179:k351:d1:s0)		iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l46:s180:k176:d1:s0)		if iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_12($13)
led.c(l46:s181:k352:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s182:k353:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l46:s183:k354:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l46:s184:k183:d1:s0)		 goto _forcond_12($54)
led.c(l46:s185:k184:d0:s0)	 _forbreak_12($13) :
led.c(l47:s186:k185:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l47:s187:k186:d0:s0)		iTemp54 [k62 lr187:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l48:s188:k187:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l48:s190:k188:d1:s0)	 _forcond_13($57) :
led.c(l48:s191:k355:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s192:k356:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l48:s193:k357:d1:s0)		iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l48:s194:k190:d1:s0)		if iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_13($14)
led.c(l48:s195:k358:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s196:k359:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l48:s197:k360:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l48:s198:k197:d1:s0)		 goto _forcond_13($57)
led.c(l48:s199:k198:d0:s0)	 _forbreak_13($14) :
led.c(l49:s200:k199:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l49:s201:k200:d0:s0)		iTemp58 [k66 lr201:201 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l50:s202:k201:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l50:s204:k202:d1:s0)	 _forcond_14($60) :
led.c(l50:s205:k361:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s206:k362:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l50:s207:k363:d1:s0)		iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l50:s208:k204:d1:s0)		if iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_14($15)
led.c(l50:s209:k364:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s210:k365:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l50:s211:k366:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l50:s212:k211:d1:s0)		 goto _forcond_14($60)
led.c(l50:s213:k212:d0:s0)	 _forbreak_14($15) :
led.c(l51:s214:k213:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l51:s215:k214:d0:s0)		iTemp62 [k70 lr215:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l52:s216:k215:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l52:s218:k216:d1:s0)	 _forcond_15($63) :
led.c(l52:s219:k367:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s220:k368:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l52:s221:k369:d1:s0)		iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l52:s222:k218:d1:s0)		if iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _return($65)
led.c(l52:s223:k370:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s224:k371:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l52:s225:k372:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l52:s226:k225:d1:s0)		 goto _forcond_15($63)
led.c(l52:s227:k227:d0:s0)	 _return($65) :
led.c(l52:s228:k228:d0:s0)		eproc _sequencial [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}

----------------------------------------------------------------
Basic Block _eBBlock42 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 44 : bbnum = 43 1st iCode = 153 , last iCode = 156
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (153) (154) }

local defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (153) (154) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (133) (139) (144) (145) (147) (153) (154) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (133) (139) (144) (147) (153) (154) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (145) (153) (154) }

----------------------------------------------------------------
led.c(l42:s153:k340:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l42:s154:k341:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l42:s155:k342:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l42:s156:k155:d1:s0)		 goto _forcond_10($48)
led.c(l42:s157:k156:d0:s0)	 _forbreak_10($11) :
led.c(l43:s158:k157:d0:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
led.c(l43:s159:k158:d0:s0)		iTemp46 [k54 lr159:159 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l44:s160:k159:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l44:s162:k160:d1:s0)	 _forcond_11($51) :
led.c(l44:s163:k343:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l44:s164:k344:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l44:s165:k345:d1:s0)		iTemp47 [k55 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l44:s166:k162:d1:s0)		if iTemp47 [k55 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_11($12)
led.c(l44:s167:k346:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l44:s168:k347:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l44:s169:k348:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l44:s170:k169:d1:s0)		 goto _forcond_11($51)
led.c(l44:s171:k170:d0:s0)	 _forbreak_11($12) :
led.c(l45:s172:k171:d0:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
led.c(l45:s173:k172:d0:s0)		iTemp50 [k58 lr173:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l46:s174:k173:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l46:s176:k174:d1:s0)	 _forcond_12($54) :
led.c(l46:s177:k349:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s178:k350:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l46:s179:k351:d1:s0)		iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l46:s180:k176:d1:s0)		if iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_12($13)
led.c(l46:s181:k352:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s182:k353:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l46:s183:k354:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l46:s184:k183:d1:s0)		 goto _forcond_12($54)
led.c(l46:s185:k184:d0:s0)	 _forbreak_12($13) :
led.c(l47:s186:k185:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l47:s187:k186:d0:s0)		iTemp54 [k62 lr187:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l48:s188:k187:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l48:s190:k188:d1:s0)	 _forcond_13($57) :
led.c(l48:s191:k355:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s192:k356:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l48:s193:k357:d1:s0)		iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l48:s194:k190:d1:s0)		if iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_13($14)
led.c(l48:s195:k358:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s196:k359:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l48:s197:k360:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l48:s198:k197:d1:s0)		 goto _forcond_13($57)
led.c(l48:s199:k198:d0:s0)	 _forbreak_13($14) :
led.c(l49:s200:k199:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l49:s201:k200:d0:s0)		iTemp58 [k66 lr201:201 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l50:s202:k201:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l50:s204:k202:d1:s0)	 _forcond_14($60) :
led.c(l50:s205:k361:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s206:k362:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l50:s207:k363:d1:s0)		iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l50:s208:k204:d1:s0)		if iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_14($15)
led.c(l50:s209:k364:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s210:k365:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l50:s211:k366:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l50:s212:k211:d1:s0)		 goto _forcond_14($60)
led.c(l50:s213:k212:d0:s0)	 _forbreak_14($15) :
led.c(l51:s214:k213:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l51:s215:k214:d0:s0)		iTemp62 [k70 lr215:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l52:s216:k215:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l52:s218:k216:d1:s0)	 _forcond_15($63) :
led.c(l52:s219:k367:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s220:k368:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l52:s221:k369:d1:s0)		iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l52:s222:k218:d1:s0)		if iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _return($65)
led.c(l52:s223:k370:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s224:k371:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l52:s225:k372:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l52:s226:k225:d1:s0)		 goto _forcond_15($63)
led.c(l52:s227:k227:d0:s0)	 _return($65) :
led.c(l52:s228:k228:d0:s0)		eproc _sequencial [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}

----------------------------------------------------------------
Basic Block _forbreak_10 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 45 : bbnum = 44 1st iCode = 157 , last iCode = 160
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (159) }

local defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (158) (159) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (133) (139) (144) (145) (147) (153) (154) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (133) (139) (144) (147) (153) (158) (159) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (158) }

----------------------------------------------------------------
led.c(l42:s157:k156:d0:s0)	 _forbreak_10($11) :
led.c(l43:s158:k157:d0:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
led.c(l43:s159:k158:d0:s0)		iTemp46 [k54 lr159:159 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l44:s160:k159:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l44:s162:k160:d1:s0)	 _forcond_11($51) :
led.c(l44:s163:k343:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l44:s164:k344:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l44:s165:k345:d1:s0)		iTemp47 [k55 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l44:s166:k162:d1:s0)		if iTemp47 [k55 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_11($12)
led.c(l44:s167:k346:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l44:s168:k347:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l44:s169:k348:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l44:s170:k169:d1:s0)		 goto _forcond_11($51)
led.c(l44:s171:k170:d0:s0)	 _forbreak_11($12) :
led.c(l45:s172:k171:d0:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
led.c(l45:s173:k172:d0:s0)		iTemp50 [k58 lr173:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l46:s174:k173:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l46:s176:k174:d1:s0)	 _forcond_12($54) :
led.c(l46:s177:k349:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s178:k350:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l46:s179:k351:d1:s0)		iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l46:s180:k176:d1:s0)		if iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_12($13)
led.c(l46:s181:k352:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s182:k353:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l46:s183:k354:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l46:s184:k183:d1:s0)		 goto _forcond_12($54)
led.c(l46:s185:k184:d0:s0)	 _forbreak_12($13) :
led.c(l47:s186:k185:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l47:s187:k186:d0:s0)		iTemp54 [k62 lr187:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l48:s188:k187:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l48:s190:k188:d1:s0)	 _forcond_13($57) :
led.c(l48:s191:k355:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s192:k356:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l48:s193:k357:d1:s0)		iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l48:s194:k190:d1:s0)		if iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_13($14)
led.c(l48:s195:k358:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s196:k359:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l48:s197:k360:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l48:s198:k197:d1:s0)		 goto _forcond_13($57)
led.c(l48:s199:k198:d0:s0)	 _forbreak_13($14) :
led.c(l49:s200:k199:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l49:s201:k200:d0:s0)		iTemp58 [k66 lr201:201 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l50:s202:k201:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l50:s204:k202:d1:s0)	 _forcond_14($60) :
led.c(l50:s205:k361:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s206:k362:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l50:s207:k363:d1:s0)		iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l50:s208:k204:d1:s0)		if iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_14($15)
led.c(l50:s209:k364:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s210:k365:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l50:s211:k366:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l50:s212:k211:d1:s0)		 goto _forcond_14($60)
led.c(l50:s213:k212:d0:s0)	 _forbreak_14($15) :
led.c(l51:s214:k213:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l51:s215:k214:d0:s0)		iTemp62 [k70 lr215:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l52:s216:k215:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l52:s218:k216:d1:s0)	 _forcond_15($63) :
led.c(l52:s219:k367:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s220:k368:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l52:s221:k369:d1:s0)		iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l52:s222:k218:d1:s0)		if iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _return($65)
led.c(l52:s223:k370:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s224:k371:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l52:s225:k372:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l52:s226:k225:d1:s0)		 goto _forcond_15($63)
led.c(l52:s227:k227:d0:s0)	 _return($65) :
led.c(l52:s228:k228:d0:s0)		eproc _sequencial [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}

----------------------------------------------------------------
Basic Block preHeaderLbl43 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 46 : bbnum = 45 1st iCode = 161 , last iCode = 161
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { }

local defines bitVector :
pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (133) (139) (144) (147) (153) (158) (159) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (133) (139) (144) (147) (153) (158) (159) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { }

----------------------------------------------------------------
led.c(l44:s161:k272:d0:s0)	 preHeaderLbl43($154) :
led.c(l44:s162:k160:d1:s0)	 _forcond_11($51) :
led.c(l44:s163:k343:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l44:s164:k344:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l44:s165:k345:d1:s0)		iTemp47 [k55 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l44:s166:k162:d1:s0)		if iTemp47 [k55 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_11($12)
led.c(l44:s167:k346:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l44:s168:k347:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l44:s169:k348:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l44:s170:k169:d1:s0)		 goto _forcond_11($51)
led.c(l44:s171:k170:d0:s0)	 _forbreak_11($12) :
led.c(l45:s172:k171:d0:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
led.c(l45:s173:k172:d0:s0)		iTemp50 [k58 lr173:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l46:s174:k173:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l46:s176:k174:d1:s0)	 _forcond_12($54) :
led.c(l46:s177:k349:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s178:k350:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l46:s179:k351:d1:s0)		iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l46:s180:k176:d1:s0)		if iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_12($13)
led.c(l46:s181:k352:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s182:k353:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l46:s183:k354:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l46:s184:k183:d1:s0)		 goto _forcond_12($54)
led.c(l46:s185:k184:d0:s0)	 _forbreak_12($13) :
led.c(l47:s186:k185:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l47:s187:k186:d0:s0)		iTemp54 [k62 lr187:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l48:s188:k187:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l48:s190:k188:d1:s0)	 _forcond_13($57) :
led.c(l48:s191:k355:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s192:k356:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l48:s193:k357:d1:s0)		iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l48:s194:k190:d1:s0)		if iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_13($14)
led.c(l48:s195:k358:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s196:k359:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l48:s197:k360:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l48:s198:k197:d1:s0)		 goto _forcond_13($57)
led.c(l48:s199:k198:d0:s0)	 _forbreak_13($14) :
led.c(l49:s200:k199:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l49:s201:k200:d0:s0)		iTemp58 [k66 lr201:201 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l50:s202:k201:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l50:s204:k202:d1:s0)	 _forcond_14($60) :
led.c(l50:s205:k361:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s206:k362:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l50:s207:k363:d1:s0)		iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l50:s208:k204:d1:s0)		if iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_14($15)
led.c(l50:s209:k364:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s210:k365:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l50:s211:k366:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l50:s212:k211:d1:s0)		 goto _forcond_14($60)
led.c(l50:s213:k212:d0:s0)	 _forbreak_14($15) :
led.c(l51:s214:k213:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l51:s215:k214:d0:s0)		iTemp62 [k70 lr215:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l52:s216:k215:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l52:s218:k216:d1:s0)	 _forcond_15($63) :
led.c(l52:s219:k367:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s220:k368:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l52:s221:k369:d1:s0)		iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l52:s222:k218:d1:s0)		if iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _return($65)
led.c(l52:s223:k370:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s224:k371:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l52:s225:k372:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l52:s226:k225:d1:s0)		 goto _forcond_15($63)
led.c(l52:s227:k227:d0:s0)	 _return($65) :
led.c(l52:s228:k228:d0:s0)		eproc _sequencial [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}

----------------------------------------------------------------
Basic Block _forcond_11 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 47 : bbnum = 46 1st iCode = 162 , last iCode = 166
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (161) }

local defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (161) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (133) (139) (144) (147) (153) (158) (159) (161) (167) (168) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (133) (139) (144) (147) (153) (158) (159) (161) (167) (168) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (159) (161) (168) }

----------------------------------------------------------------
led.c(l44:s162:k160:d1:s0)	 _forcond_11($51) :
led.c(l44:s163:k343:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l44:s164:k344:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l44:s165:k345:d1:s0)		iTemp47 [k55 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l44:s166:k162:d1:s0)		if iTemp47 [k55 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_11($12)
led.c(l44:s167:k346:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l44:s168:k347:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l44:s169:k348:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l44:s170:k169:d1:s0)		 goto _forcond_11($51)
led.c(l44:s171:k170:d0:s0)	 _forbreak_11($12) :
led.c(l45:s172:k171:d0:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
led.c(l45:s173:k172:d0:s0)		iTemp50 [k58 lr173:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l46:s174:k173:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l46:s176:k174:d1:s0)	 _forcond_12($54) :
led.c(l46:s177:k349:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s178:k350:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l46:s179:k351:d1:s0)		iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l46:s180:k176:d1:s0)		if iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_12($13)
led.c(l46:s181:k352:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s182:k353:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l46:s183:k354:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l46:s184:k183:d1:s0)		 goto _forcond_12($54)
led.c(l46:s185:k184:d0:s0)	 _forbreak_12($13) :
led.c(l47:s186:k185:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l47:s187:k186:d0:s0)		iTemp54 [k62 lr187:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l48:s188:k187:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l48:s190:k188:d1:s0)	 _forcond_13($57) :
led.c(l48:s191:k355:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s192:k356:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l48:s193:k357:d1:s0)		iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l48:s194:k190:d1:s0)		if iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_13($14)
led.c(l48:s195:k358:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s196:k359:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l48:s197:k360:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l48:s198:k197:d1:s0)		 goto _forcond_13($57)
led.c(l48:s199:k198:d0:s0)	 _forbreak_13($14) :
led.c(l49:s200:k199:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l49:s201:k200:d0:s0)		iTemp58 [k66 lr201:201 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l50:s202:k201:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l50:s204:k202:d1:s0)	 _forcond_14($60) :
led.c(l50:s205:k361:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s206:k362:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l50:s207:k363:d1:s0)		iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l50:s208:k204:d1:s0)		if iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_14($15)
led.c(l50:s209:k364:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s210:k365:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l50:s211:k366:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l50:s212:k211:d1:s0)		 goto _forcond_14($60)
led.c(l50:s213:k212:d0:s0)	 _forbreak_14($15) :
led.c(l51:s214:k213:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l51:s215:k214:d0:s0)		iTemp62 [k70 lr215:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l52:s216:k215:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l52:s218:k216:d1:s0)	 _forcond_15($63) :
led.c(l52:s219:k367:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s220:k368:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l52:s221:k369:d1:s0)		iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l52:s222:k218:d1:s0)		if iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _return($65)
led.c(l52:s223:k370:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s224:k371:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l52:s225:k372:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l52:s226:k225:d1:s0)		 goto _forcond_15($63)
led.c(l52:s227:k227:d0:s0)	 _return($65) :
led.c(l52:s228:k228:d0:s0)		eproc _sequencial [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}

----------------------------------------------------------------
Basic Block _eBBlock43 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 48 : bbnum = 47 1st iCode = 167 , last iCode = 170
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (167) (168) }

local defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (167) (168) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (133) (139) (144) (147) (153) (158) (159) (161) (167) (168) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (133) (139) (144) (147) (153) (158) (161) (167) (168) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (159) (167) (168) }

----------------------------------------------------------------
led.c(l44:s167:k346:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l44:s168:k347:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l44:s169:k348:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l44:s170:k169:d1:s0)		 goto _forcond_11($51)
led.c(l44:s171:k170:d0:s0)	 _forbreak_11($12) :
led.c(l45:s172:k171:d0:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
led.c(l45:s173:k172:d0:s0)		iTemp50 [k58 lr173:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l46:s174:k173:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l46:s176:k174:d1:s0)	 _forcond_12($54) :
led.c(l46:s177:k349:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s178:k350:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l46:s179:k351:d1:s0)		iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l46:s180:k176:d1:s0)		if iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_12($13)
led.c(l46:s181:k352:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s182:k353:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l46:s183:k354:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l46:s184:k183:d1:s0)		 goto _forcond_12($54)
led.c(l46:s185:k184:d0:s0)	 _forbreak_12($13) :
led.c(l47:s186:k185:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l47:s187:k186:d0:s0)		iTemp54 [k62 lr187:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l48:s188:k187:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l48:s190:k188:d1:s0)	 _forcond_13($57) :
led.c(l48:s191:k355:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s192:k356:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l48:s193:k357:d1:s0)		iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l48:s194:k190:d1:s0)		if iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_13($14)
led.c(l48:s195:k358:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s196:k359:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l48:s197:k360:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l48:s198:k197:d1:s0)		 goto _forcond_13($57)
led.c(l48:s199:k198:d0:s0)	 _forbreak_13($14) :
led.c(l49:s200:k199:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l49:s201:k200:d0:s0)		iTemp58 [k66 lr201:201 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l50:s202:k201:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l50:s204:k202:d1:s0)	 _forcond_14($60) :
led.c(l50:s205:k361:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s206:k362:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l50:s207:k363:d1:s0)		iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l50:s208:k204:d1:s0)		if iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_14($15)
led.c(l50:s209:k364:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s210:k365:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l50:s211:k366:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l50:s212:k211:d1:s0)		 goto _forcond_14($60)
led.c(l50:s213:k212:d0:s0)	 _forbreak_14($15) :
led.c(l51:s214:k213:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l51:s215:k214:d0:s0)		iTemp62 [k70 lr215:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l52:s216:k215:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l52:s218:k216:d1:s0)	 _forcond_15($63) :
led.c(l52:s219:k367:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s220:k368:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l52:s221:k369:d1:s0)		iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l52:s222:k218:d1:s0)		if iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _return($65)
led.c(l52:s223:k370:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s224:k371:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l52:s225:k372:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l52:s226:k225:d1:s0)		 goto _forcond_15($63)
led.c(l52:s227:k227:d0:s0)	 _return($65) :
led.c(l52:s228:k228:d0:s0)		eproc _sequencial [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}

----------------------------------------------------------------
Basic Block _forbreak_11 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 49 : bbnum = 48 1st iCode = 171 , last iCode = 174
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (173) }

local defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (172) (173) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (133) (139) (144) (147) (153) (158) (159) (161) (167) (168) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (133) (139) (144) (147) (153) (158) (161) (167) (172) (173) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (172) }

----------------------------------------------------------------
led.c(l44:s171:k170:d0:s0)	 _forbreak_11($12) :
led.c(l45:s172:k171:d0:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
led.c(l45:s173:k172:d0:s0)		iTemp50 [k58 lr173:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l46:s174:k173:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l46:s176:k174:d1:s0)	 _forcond_12($54) :
led.c(l46:s177:k349:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s178:k350:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l46:s179:k351:d1:s0)		iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l46:s180:k176:d1:s0)		if iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_12($13)
led.c(l46:s181:k352:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s182:k353:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l46:s183:k354:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l46:s184:k183:d1:s0)		 goto _forcond_12($54)
led.c(l46:s185:k184:d0:s0)	 _forbreak_12($13) :
led.c(l47:s186:k185:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l47:s187:k186:d0:s0)		iTemp54 [k62 lr187:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l48:s188:k187:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l48:s190:k188:d1:s0)	 _forcond_13($57) :
led.c(l48:s191:k355:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s192:k356:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l48:s193:k357:d1:s0)		iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l48:s194:k190:d1:s0)		if iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_13($14)
led.c(l48:s195:k358:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s196:k359:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l48:s197:k360:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l48:s198:k197:d1:s0)		 goto _forcond_13($57)
led.c(l48:s199:k198:d0:s0)	 _forbreak_13($14) :
led.c(l49:s200:k199:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l49:s201:k200:d0:s0)		iTemp58 [k66 lr201:201 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l50:s202:k201:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l50:s204:k202:d1:s0)	 _forcond_14($60) :
led.c(l50:s205:k361:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s206:k362:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l50:s207:k363:d1:s0)		iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l50:s208:k204:d1:s0)		if iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_14($15)
led.c(l50:s209:k364:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s210:k365:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l50:s211:k366:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l50:s212:k211:d1:s0)		 goto _forcond_14($60)
led.c(l50:s213:k212:d0:s0)	 _forbreak_14($15) :
led.c(l51:s214:k213:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l51:s215:k214:d0:s0)		iTemp62 [k70 lr215:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l52:s216:k215:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l52:s218:k216:d1:s0)	 _forcond_15($63) :
led.c(l52:s219:k367:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s220:k368:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l52:s221:k369:d1:s0)		iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l52:s222:k218:d1:s0)		if iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _return($65)
led.c(l52:s223:k370:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s224:k371:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l52:s225:k372:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l52:s226:k225:d1:s0)		 goto _forcond_15($63)
led.c(l52:s227:k227:d0:s0)	 _return($65) :
led.c(l52:s228:k228:d0:s0)		eproc _sequencial [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}

----------------------------------------------------------------
Basic Block preHeaderLbl44 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 50 : bbnum = 49 1st iCode = 175 , last iCode = 175
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { }

local defines bitVector :
pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (133) (139) (144) (147) (153) (158) (161) (167) (172) (173) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (133) (139) (144) (147) (153) (158) (161) (167) (172) (173) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { }

----------------------------------------------------------------
led.c(l46:s175:k273:d0:s0)	 preHeaderLbl44($156) :
led.c(l46:s176:k174:d1:s0)	 _forcond_12($54) :
led.c(l46:s177:k349:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s178:k350:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l46:s179:k351:d1:s0)		iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l46:s180:k176:d1:s0)		if iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_12($13)
led.c(l46:s181:k352:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s182:k353:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l46:s183:k354:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l46:s184:k183:d1:s0)		 goto _forcond_12($54)
led.c(l46:s185:k184:d0:s0)	 _forbreak_12($13) :
led.c(l47:s186:k185:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l47:s187:k186:d0:s0)		iTemp54 [k62 lr187:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l48:s188:k187:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l48:s190:k188:d1:s0)	 _forcond_13($57) :
led.c(l48:s191:k355:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s192:k356:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l48:s193:k357:d1:s0)		iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l48:s194:k190:d1:s0)		if iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_13($14)
led.c(l48:s195:k358:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s196:k359:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l48:s197:k360:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l48:s198:k197:d1:s0)		 goto _forcond_13($57)
led.c(l48:s199:k198:d0:s0)	 _forbreak_13($14) :
led.c(l49:s200:k199:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l49:s201:k200:d0:s0)		iTemp58 [k66 lr201:201 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l50:s202:k201:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l50:s204:k202:d1:s0)	 _forcond_14($60) :
led.c(l50:s205:k361:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s206:k362:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l50:s207:k363:d1:s0)		iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l50:s208:k204:d1:s0)		if iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_14($15)
led.c(l50:s209:k364:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s210:k365:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l50:s211:k366:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l50:s212:k211:d1:s0)		 goto _forcond_14($60)
led.c(l50:s213:k212:d0:s0)	 _forbreak_14($15) :
led.c(l51:s214:k213:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l51:s215:k214:d0:s0)		iTemp62 [k70 lr215:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l52:s216:k215:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l52:s218:k216:d1:s0)	 _forcond_15($63) :
led.c(l52:s219:k367:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s220:k368:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l52:s221:k369:d1:s0)		iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l52:s222:k218:d1:s0)		if iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _return($65)
led.c(l52:s223:k370:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s224:k371:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l52:s225:k372:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l52:s226:k225:d1:s0)		 goto _forcond_15($63)
led.c(l52:s227:k227:d0:s0)	 _return($65) :
led.c(l52:s228:k228:d0:s0)		eproc _sequencial [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}

----------------------------------------------------------------
Basic Block _forcond_12 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 51 : bbnum = 50 1st iCode = 176 , last iCode = 180
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (175) }

local defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (175) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (133) (139) (144) (147) (153) (158) (161) (167) (172) (173) (175) (181) (182) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (133) (139) (144) (147) (153) (158) (161) (167) (172) (173) (175) (181) (182) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (173) (175) (182) }

----------------------------------------------------------------
led.c(l46:s176:k174:d1:s0)	 _forcond_12($54) :
led.c(l46:s177:k349:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s178:k350:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l46:s179:k351:d1:s0)		iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l46:s180:k176:d1:s0)		if iTemp51 [k59 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_12($13)
led.c(l46:s181:k352:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s182:k353:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l46:s183:k354:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l46:s184:k183:d1:s0)		 goto _forcond_12($54)
led.c(l46:s185:k184:d0:s0)	 _forbreak_12($13) :
led.c(l47:s186:k185:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l47:s187:k186:d0:s0)		iTemp54 [k62 lr187:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l48:s188:k187:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l48:s190:k188:d1:s0)	 _forcond_13($57) :
led.c(l48:s191:k355:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s192:k356:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l48:s193:k357:d1:s0)		iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l48:s194:k190:d1:s0)		if iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_13($14)
led.c(l48:s195:k358:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s196:k359:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l48:s197:k360:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l48:s198:k197:d1:s0)		 goto _forcond_13($57)
led.c(l48:s199:k198:d0:s0)	 _forbreak_13($14) :
led.c(l49:s200:k199:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l49:s201:k200:d0:s0)		iTemp58 [k66 lr201:201 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l50:s202:k201:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l50:s204:k202:d1:s0)	 _forcond_14($60) :
led.c(l50:s205:k361:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s206:k362:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l50:s207:k363:d1:s0)		iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l50:s208:k204:d1:s0)		if iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_14($15)
led.c(l50:s209:k364:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s210:k365:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l50:s211:k366:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l50:s212:k211:d1:s0)		 goto _forcond_14($60)
led.c(l50:s213:k212:d0:s0)	 _forbreak_14($15) :
led.c(l51:s214:k213:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l51:s215:k214:d0:s0)		iTemp62 [k70 lr215:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l52:s216:k215:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l52:s218:k216:d1:s0)	 _forcond_15($63) :
led.c(l52:s219:k367:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s220:k368:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l52:s221:k369:d1:s0)		iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l52:s222:k218:d1:s0)		if iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _return($65)
led.c(l52:s223:k370:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s224:k371:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l52:s225:k372:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l52:s226:k225:d1:s0)		 goto _forcond_15($63)
led.c(l52:s227:k227:d0:s0)	 _return($65) :
led.c(l52:s228:k228:d0:s0)		eproc _sequencial [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}

----------------------------------------------------------------
Basic Block _eBBlock44 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 52 : bbnum = 51 1st iCode = 181 , last iCode = 184
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (181) (182) }

local defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (181) (182) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (133) (139) (144) (147) (153) (158) (161) (167) (172) (173) (175) (181) (182) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (133) (139) (144) (147) (153) (158) (161) (167) (172) (175) (181) (182) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (173) (181) (182) }

----------------------------------------------------------------
led.c(l46:s181:k352:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l46:s182:k353:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l46:s183:k354:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l46:s184:k183:d1:s0)		 goto _forcond_12($54)
led.c(l46:s185:k184:d0:s0)	 _forbreak_12($13) :
led.c(l47:s186:k185:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l47:s187:k186:d0:s0)		iTemp54 [k62 lr187:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l48:s188:k187:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l48:s190:k188:d1:s0)	 _forcond_13($57) :
led.c(l48:s191:k355:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s192:k356:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l48:s193:k357:d1:s0)		iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l48:s194:k190:d1:s0)		if iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_13($14)
led.c(l48:s195:k358:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s196:k359:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l48:s197:k360:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l48:s198:k197:d1:s0)		 goto _forcond_13($57)
led.c(l48:s199:k198:d0:s0)	 _forbreak_13($14) :
led.c(l49:s200:k199:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l49:s201:k200:d0:s0)		iTemp58 [k66 lr201:201 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l50:s202:k201:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l50:s204:k202:d1:s0)	 _forcond_14($60) :
led.c(l50:s205:k361:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s206:k362:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l50:s207:k363:d1:s0)		iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l50:s208:k204:d1:s0)		if iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_14($15)
led.c(l50:s209:k364:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s210:k365:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l50:s211:k366:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l50:s212:k211:d1:s0)		 goto _forcond_14($60)
led.c(l50:s213:k212:d0:s0)	 _forbreak_14($15) :
led.c(l51:s214:k213:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l51:s215:k214:d0:s0)		iTemp62 [k70 lr215:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l52:s216:k215:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l52:s218:k216:d1:s0)	 _forcond_15($63) :
led.c(l52:s219:k367:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s220:k368:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l52:s221:k369:d1:s0)		iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l52:s222:k218:d1:s0)		if iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _return($65)
led.c(l52:s223:k370:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s224:k371:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l52:s225:k372:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l52:s226:k225:d1:s0)		 goto _forcond_15($63)
led.c(l52:s227:k227:d0:s0)	 _return($65) :
led.c(l52:s228:k228:d0:s0)		eproc _sequencial [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}

----------------------------------------------------------------
Basic Block _forbreak_12 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 53 : bbnum = 52 1st iCode = 185 , last iCode = 188
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (187) }

local defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (186) (187) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (133) (139) (144) (147) (153) (158) (161) (167) (172) (173) (175) (181) (182) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (133) (139) (144) (147) (153) (158) (161) (167) (172) (175) (181) (186) (187) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (186) }

----------------------------------------------------------------
led.c(l46:s185:k184:d0:s0)	 _forbreak_12($13) :
led.c(l47:s186:k185:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l47:s187:k186:d0:s0)		iTemp54 [k62 lr187:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l48:s188:k187:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l48:s190:k188:d1:s0)	 _forcond_13($57) :
led.c(l48:s191:k355:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s192:k356:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l48:s193:k357:d1:s0)		iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l48:s194:k190:d1:s0)		if iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_13($14)
led.c(l48:s195:k358:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s196:k359:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l48:s197:k360:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l48:s198:k197:d1:s0)		 goto _forcond_13($57)
led.c(l48:s199:k198:d0:s0)	 _forbreak_13($14) :
led.c(l49:s200:k199:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l49:s201:k200:d0:s0)		iTemp58 [k66 lr201:201 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l50:s202:k201:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l50:s204:k202:d1:s0)	 _forcond_14($60) :
led.c(l50:s205:k361:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s206:k362:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l50:s207:k363:d1:s0)		iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l50:s208:k204:d1:s0)		if iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_14($15)
led.c(l50:s209:k364:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s210:k365:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l50:s211:k366:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l50:s212:k211:d1:s0)		 goto _forcond_14($60)
led.c(l50:s213:k212:d0:s0)	 _forbreak_14($15) :
led.c(l51:s214:k213:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l51:s215:k214:d0:s0)		iTemp62 [k70 lr215:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l52:s216:k215:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l52:s218:k216:d1:s0)	 _forcond_15($63) :
led.c(l52:s219:k367:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s220:k368:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l52:s221:k369:d1:s0)		iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l52:s222:k218:d1:s0)		if iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _return($65)
led.c(l52:s223:k370:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s224:k371:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l52:s225:k372:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l52:s226:k225:d1:s0)		 goto _forcond_15($63)
led.c(l52:s227:k227:d0:s0)	 _return($65) :
led.c(l52:s228:k228:d0:s0)		eproc _sequencial [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}

----------------------------------------------------------------
Basic Block preHeaderLbl45 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 54 : bbnum = 53 1st iCode = 189 , last iCode = 189
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { }

local defines bitVector :
pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (133) (139) (144) (147) (153) (158) (161) (167) (172) (175) (181) (186) (187) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (133) (139) (144) (147) (153) (158) (161) (167) (172) (175) (181) (186) (187) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { }

----------------------------------------------------------------
led.c(l48:s189:k274:d0:s0)	 preHeaderLbl45($158) :
led.c(l48:s190:k188:d1:s0)	 _forcond_13($57) :
led.c(l48:s191:k355:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s192:k356:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l48:s193:k357:d1:s0)		iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l48:s194:k190:d1:s0)		if iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_13($14)
led.c(l48:s195:k358:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s196:k359:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l48:s197:k360:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l48:s198:k197:d1:s0)		 goto _forcond_13($57)
led.c(l48:s199:k198:d0:s0)	 _forbreak_13($14) :
led.c(l49:s200:k199:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l49:s201:k200:d0:s0)		iTemp58 [k66 lr201:201 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l50:s202:k201:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l50:s204:k202:d1:s0)	 _forcond_14($60) :
led.c(l50:s205:k361:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s206:k362:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l50:s207:k363:d1:s0)		iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l50:s208:k204:d1:s0)		if iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_14($15)
led.c(l50:s209:k364:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s210:k365:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l50:s211:k366:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l50:s212:k211:d1:s0)		 goto _forcond_14($60)
led.c(l50:s213:k212:d0:s0)	 _forbreak_14($15) :
led.c(l51:s214:k213:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l51:s215:k214:d0:s0)		iTemp62 [k70 lr215:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l52:s216:k215:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l52:s218:k216:d1:s0)	 _forcond_15($63) :
led.c(l52:s219:k367:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s220:k368:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l52:s221:k369:d1:s0)		iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l52:s222:k218:d1:s0)		if iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _return($65)
led.c(l52:s223:k370:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s224:k371:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l52:s225:k372:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l52:s226:k225:d1:s0)		 goto _forcond_15($63)
led.c(l52:s227:k227:d0:s0)	 _return($65) :
led.c(l52:s228:k228:d0:s0)		eproc _sequencial [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}

----------------------------------------------------------------
Basic Block _forcond_13 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 55 : bbnum = 54 1st iCode = 190 , last iCode = 194
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (189) }

local defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (189) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (133) (139) (144) (147) (153) (158) (161) (167) (172) (175) (181) (186) (187) (189) (195) (196) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (133) (139) (144) (147) (153) (158) (161) (167) (172) (175) (181) (186) (187) (189) (195) (196) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (187) (189) (196) }

----------------------------------------------------------------
led.c(l48:s190:k188:d1:s0)	 _forcond_13($57) :
led.c(l48:s191:k355:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s192:k356:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l48:s193:k357:d1:s0)		iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l48:s194:k190:d1:s0)		if iTemp55 [k63 lr193:194 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_13($14)
led.c(l48:s195:k358:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s196:k359:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l48:s197:k360:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l48:s198:k197:d1:s0)		 goto _forcond_13($57)
led.c(l48:s199:k198:d0:s0)	 _forbreak_13($14) :
led.c(l49:s200:k199:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l49:s201:k200:d0:s0)		iTemp58 [k66 lr201:201 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l50:s202:k201:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l50:s204:k202:d1:s0)	 _forcond_14($60) :
led.c(l50:s205:k361:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s206:k362:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l50:s207:k363:d1:s0)		iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l50:s208:k204:d1:s0)		if iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_14($15)
led.c(l50:s209:k364:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s210:k365:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l50:s211:k366:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l50:s212:k211:d1:s0)		 goto _forcond_14($60)
led.c(l50:s213:k212:d0:s0)	 _forbreak_14($15) :
led.c(l51:s214:k213:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l51:s215:k214:d0:s0)		iTemp62 [k70 lr215:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l52:s216:k215:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l52:s218:k216:d1:s0)	 _forcond_15($63) :
led.c(l52:s219:k367:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s220:k368:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l52:s221:k369:d1:s0)		iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l52:s222:k218:d1:s0)		if iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _return($65)
led.c(l52:s223:k370:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s224:k371:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l52:s225:k372:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l52:s226:k225:d1:s0)		 goto _forcond_15($63)
led.c(l52:s227:k227:d0:s0)	 _return($65) :
led.c(l52:s228:k228:d0:s0)		eproc _sequencial [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}

----------------------------------------------------------------
Basic Block _eBBlock45 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 56 : bbnum = 55 1st iCode = 195 , last iCode = 198
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (195) (196) }

local defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (195) (196) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (133) (139) (144) (147) (153) (158) (161) (167) (172) (175) (181) (186) (187) (189) (195) (196) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (133) (139) (144) (147) (153) (158) (161) (167) (172) (175) (181) (186) (189) (195) (196) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (187) (195) (196) }

----------------------------------------------------------------
led.c(l48:s195:k358:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l48:s196:k359:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l48:s197:k360:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l48:s198:k197:d1:s0)		 goto _forcond_13($57)
led.c(l48:s199:k198:d0:s0)	 _forbreak_13($14) :
led.c(l49:s200:k199:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l49:s201:k200:d0:s0)		iTemp58 [k66 lr201:201 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l50:s202:k201:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l50:s204:k202:d1:s0)	 _forcond_14($60) :
led.c(l50:s205:k361:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s206:k362:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l50:s207:k363:d1:s0)		iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l50:s208:k204:d1:s0)		if iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_14($15)
led.c(l50:s209:k364:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s210:k365:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l50:s211:k366:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l50:s212:k211:d1:s0)		 goto _forcond_14($60)
led.c(l50:s213:k212:d0:s0)	 _forbreak_14($15) :
led.c(l51:s214:k213:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l51:s215:k214:d0:s0)		iTemp62 [k70 lr215:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l52:s216:k215:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l52:s218:k216:d1:s0)	 _forcond_15($63) :
led.c(l52:s219:k367:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s220:k368:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l52:s221:k369:d1:s0)		iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l52:s222:k218:d1:s0)		if iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _return($65)
led.c(l52:s223:k370:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s224:k371:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l52:s225:k372:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l52:s226:k225:d1:s0)		 goto _forcond_15($63)
led.c(l52:s227:k227:d0:s0)	 _return($65) :
led.c(l52:s228:k228:d0:s0)		eproc _sequencial [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}

----------------------------------------------------------------
Basic Block _forbreak_13 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 57 : bbnum = 56 1st iCode = 199 , last iCode = 202
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (201) }

local defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (200) (201) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (133) (139) (144) (147) (153) (158) (161) (167) (172) (175) (181) (186) (187) (189) (195) (196) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (133) (139) (144) (147) (153) (158) (161) (167) (172) (175) (181) (186) (189) (195) (200) (201) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (200) }

----------------------------------------------------------------
led.c(l48:s199:k198:d0:s0)	 _forbreak_13($14) :
led.c(l49:s200:k199:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l49:s201:k200:d0:s0)		iTemp58 [k66 lr201:201 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l50:s202:k201:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l50:s204:k202:d1:s0)	 _forcond_14($60) :
led.c(l50:s205:k361:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s206:k362:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l50:s207:k363:d1:s0)		iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l50:s208:k204:d1:s0)		if iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_14($15)
led.c(l50:s209:k364:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s210:k365:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l50:s211:k366:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l50:s212:k211:d1:s0)		 goto _forcond_14($60)
led.c(l50:s213:k212:d0:s0)	 _forbreak_14($15) :
led.c(l51:s214:k213:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l51:s215:k214:d0:s0)		iTemp62 [k70 lr215:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l52:s216:k215:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l52:s218:k216:d1:s0)	 _forcond_15($63) :
led.c(l52:s219:k367:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s220:k368:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l52:s221:k369:d1:s0)		iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l52:s222:k218:d1:s0)		if iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _return($65)
led.c(l52:s223:k370:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s224:k371:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l52:s225:k372:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l52:s226:k225:d1:s0)		 goto _forcond_15($63)
led.c(l52:s227:k227:d0:s0)	 _return($65) :
led.c(l52:s228:k228:d0:s0)		eproc _sequencial [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}

----------------------------------------------------------------
Basic Block preHeaderLbl46 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 58 : bbnum = 57 1st iCode = 203 , last iCode = 203
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { }

local defines bitVector :
pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (133) (139) (144) (147) (153) (158) (161) (167) (172) (175) (181) (186) (189) (195) (200) (201) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (133) (139) (144) (147) (153) (158) (161) (167) (172) (175) (181) (186) (189) (195) (200) (201) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { }

----------------------------------------------------------------
led.c(l50:s203:k275:d0:s0)	 preHeaderLbl46($160) :
led.c(l50:s204:k202:d1:s0)	 _forcond_14($60) :
led.c(l50:s205:k361:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s206:k362:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l50:s207:k363:d1:s0)		iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l50:s208:k204:d1:s0)		if iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_14($15)
led.c(l50:s209:k364:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s210:k365:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l50:s211:k366:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l50:s212:k211:d1:s0)		 goto _forcond_14($60)
led.c(l50:s213:k212:d0:s0)	 _forbreak_14($15) :
led.c(l51:s214:k213:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l51:s215:k214:d0:s0)		iTemp62 [k70 lr215:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l52:s216:k215:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l52:s218:k216:d1:s0)	 _forcond_15($63) :
led.c(l52:s219:k367:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s220:k368:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l52:s221:k369:d1:s0)		iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l52:s222:k218:d1:s0)		if iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _return($65)
led.c(l52:s223:k370:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s224:k371:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l52:s225:k372:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l52:s226:k225:d1:s0)		 goto _forcond_15($63)
led.c(l52:s227:k227:d0:s0)	 _return($65) :
led.c(l52:s228:k228:d0:s0)		eproc _sequencial [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}

----------------------------------------------------------------
Basic Block _forcond_14 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 59 : bbnum = 58 1st iCode = 204 , last iCode = 208
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (203) }

local defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (203) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (133) (139) (144) (147) (153) (158) (161) (167) (172) (175) (181) (186) (189) (195) (200) (201) (203) (209) (210) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (133) (139) (144) (147) (153) (158) (161) (167) (172) (175) (181) (186) (189) (195) (200) (201) (203) (209) (210) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (201) (203) (210) }

----------------------------------------------------------------
led.c(l50:s204:k202:d1:s0)	 _forcond_14($60) :
led.c(l50:s205:k361:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s206:k362:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l50:s207:k363:d1:s0)		iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l50:s208:k204:d1:s0)		if iTemp59 [k67 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_14($15)
led.c(l50:s209:k364:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s210:k365:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l50:s211:k366:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l50:s212:k211:d1:s0)		 goto _forcond_14($60)
led.c(l50:s213:k212:d0:s0)	 _forbreak_14($15) :
led.c(l51:s214:k213:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l51:s215:k214:d0:s0)		iTemp62 [k70 lr215:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l52:s216:k215:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l52:s218:k216:d1:s0)	 _forcond_15($63) :
led.c(l52:s219:k367:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s220:k368:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l52:s221:k369:d1:s0)		iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l52:s222:k218:d1:s0)		if iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _return($65)
led.c(l52:s223:k370:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s224:k371:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l52:s225:k372:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l52:s226:k225:d1:s0)		 goto _forcond_15($63)
led.c(l52:s227:k227:d0:s0)	 _return($65) :
led.c(l52:s228:k228:d0:s0)		eproc _sequencial [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}

----------------------------------------------------------------
Basic Block _eBBlock46 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 60 : bbnum = 59 1st iCode = 209 , last iCode = 212
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (209) (210) }

local defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (209) (210) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (133) (139) (144) (147) (153) (158) (161) (167) (172) (175) (181) (186) (189) (195) (200) (201) (203) (209) (210) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (133) (139) (144) (147) (153) (158) (161) (167) (172) (175) (181) (186) (189) (195) (200) (203) (209) (210) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (201) (209) (210) }

----------------------------------------------------------------
led.c(l50:s209:k364:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l50:s210:k365:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l50:s211:k366:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l50:s212:k211:d1:s0)		 goto _forcond_14($60)
led.c(l50:s213:k212:d0:s0)	 _forbreak_14($15) :
led.c(l51:s214:k213:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l51:s215:k214:d0:s0)		iTemp62 [k70 lr215:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l52:s216:k215:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l52:s218:k216:d1:s0)	 _forcond_15($63) :
led.c(l52:s219:k367:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s220:k368:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l52:s221:k369:d1:s0)		iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l52:s222:k218:d1:s0)		if iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _return($65)
led.c(l52:s223:k370:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s224:k371:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l52:s225:k372:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l52:s226:k225:d1:s0)		 goto _forcond_15($63)
led.c(l52:s227:k227:d0:s0)	 _return($65) :
led.c(l52:s228:k228:d0:s0)		eproc _sequencial [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}

----------------------------------------------------------------
Basic Block _forbreak_14 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 61 : bbnum = 60 1st iCode = 213 , last iCode = 216
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (215) }

local defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (214) (215) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (133) (139) (144) (147) (153) (158) (161) (167) (172) (175) (181) (186) (189) (195) (200) (201) (203) (209) (210) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (133) (139) (144) (147) (153) (158) (161) (167) (172) (175) (181) (186) (189) (195) (200) (203) (209) (214) (215) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (214) }

----------------------------------------------------------------
led.c(l50:s213:k212:d0:s0)	 _forbreak_14($15) :
led.c(l51:s214:k213:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l51:s215:k214:d0:s0)		iTemp62 [k70 lr215:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k40 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l52:s216:k215:d0:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l52:s218:k216:d1:s0)	 _forcond_15($63) :
led.c(l52:s219:k367:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s220:k368:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l52:s221:k369:d1:s0)		iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l52:s222:k218:d1:s0)		if iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _return($65)
led.c(l52:s223:k370:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s224:k371:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l52:s225:k372:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l52:s226:k225:d1:s0)		 goto _forcond_15($63)
led.c(l52:s227:k227:d0:s0)	 _return($65) :
led.c(l52:s228:k228:d0:s0)		eproc _sequencial [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}

----------------------------------------------------------------
Basic Block preHeaderLbl47 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 62 : bbnum = 61 1st iCode = 217 , last iCode = 217
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { }

local defines bitVector :
pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (133) (139) (144) (147) (153) (158) (161) (167) (172) (175) (181) (186) (189) (195) (200) (203) (209) (214) (215) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (133) (139) (144) (147) (153) (158) (161) (167) (172) (175) (181) (186) (189) (195) (200) (203) (209) (214) (215) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { }

----------------------------------------------------------------
led.c(l52:s217:k276:d0:s0)	 preHeaderLbl47($162) :
led.c(l52:s218:k216:d1:s0)	 _forcond_15($63) :
led.c(l52:s219:k367:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s220:k368:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l52:s221:k369:d1:s0)		iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l52:s222:k218:d1:s0)		if iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _return($65)
led.c(l52:s223:k370:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s224:k371:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l52:s225:k372:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l52:s226:k225:d1:s0)		 goto _forcond_15($63)
led.c(l52:s227:k227:d0:s0)	 _return($65) :
led.c(l52:s228:k228:d0:s0)		eproc _sequencial [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}

----------------------------------------------------------------
Basic Block _forcond_15 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 63 : bbnum = 62 1st iCode = 218 , last iCode = 222
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (217) }

local defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (217) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (133) (139) (144) (147) (153) (158) (161) (167) (172) (175) (181) (186) (189) (195) (200) (203) (209) (214) (215) (217) (223) (224) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (133) (139) (144) (147) (153) (158) (161) (167) (172) (175) (181) (186) (189) (195) (200) (203) (209) (214) (215) (217) (223) (224) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (215) (217) (224) }

----------------------------------------------------------------
led.c(l52:s218:k216:d1:s0)	 _forcond_15($63) :
led.c(l52:s219:k367:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s220:k368:d1:s0)		send iTemp0 [k2 lr3:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_tempo_1_7}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l52:s221:k369:d1:s0)		iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k74 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l52:s222:k218:d1:s0)		if iTemp63 [k71 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _return($65)
led.c(l52:s223:k370:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s224:k371:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l52:s225:k372:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l52:s226:k225:d1:s0)		 goto _forcond_15($63)
led.c(l52:s227:k227:d0:s0)	 _return($65) :
led.c(l52:s228:k228:d0:s0)		eproc _sequencial [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}

----------------------------------------------------------------
Basic Block _eBBlock47 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 64 : bbnum = 63 1st iCode = 223 , last iCode = 226
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (223) (224) }

local defines bitVector :bitvector Size = 277 bSize = 35
Bits on { (223) (224) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (133) (139) (144) (147) (153) (158) (161) (167) (172) (175) (181) (186) (189) (195) (200) (203) (209) (214) (215) (217) (223) (224) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (133) (139) (144) (147) (153) (158) (161) (167) (172) (175) (181) (186) (189) (195) (200) (203) (209) (214) (217) (223) (224) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (215) (223) (224) }

----------------------------------------------------------------
led.c(l52:s223:k370:d1:s0)		send iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l52:s224:k371:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l52:s225:k372:d1:s0)		iTemp2 [k7 lr6:226 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _sequencial_i_1_8}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k75 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l52:s226:k225:d1:s0)		 goto _forcond_15($63)
led.c(l52:s227:k227:d0:s0)	 _return($65) :
led.c(l52:s228:k228:d0:s0)		eproc _sequencial [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}

----------------------------------------------------------------
Basic Block _return : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 65 : bbnum = 64 1st iCode = 227 , last iCode = 228
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 277 bSize = 35
Bits on { }

local defines bitVector :
pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (133) (139) (144) (147) (153) (158) (161) (167) (172) (175) (181) (186) (189) (195) (200) (203) (209) (214) (215) (217) (223) (224) }

outDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { (2) (4) (7) (13) (18) (21) (27) (32) (35) (41) (46) (49) (55) (60) (63) (69) (74) (77) (83) (88) (91) (97) (102) (105) (111) (116) (119) (125) (130) (133) (139) (144) (147) (153) (158) (161) (167) (172) (175) (181) (186) (189) (195) (200) (203) (209) (214) (215) (217) (223) (224) }

usesDefs Set bitvector :bitvector Size = 277 bSize = 35
Bits on { }

----------------------------------------------------------------
led.c(l52:s227:k227:d0:s0)	 _return($65) :
led.c(l52:s228:k228:d0:s0)		eproc _sequencial [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x3
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x3
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x0
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x1
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x2
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x3
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x3
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x2
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x1
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x0
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x8
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x8
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x3
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x2
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x1
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x0
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x8
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x8
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x3
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x2
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x1
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x0
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x8
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x8
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x3
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x2
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x1
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x0
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x8
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x8
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x3
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x2
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x1
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x0
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x8
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x8
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x3
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x2
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x1
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x0
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x8
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x8
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x3
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x2
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x1
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x0
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x8
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x8
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x3
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x2
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x1
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x0
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x8
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x8
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x3
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x2
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x1
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x0
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x8
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x8
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x3
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x2
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x1
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x0
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x8
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x8
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x3
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x2
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x1
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x0
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x8
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x8
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x3
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x2
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x1
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x0
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x8
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x8
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x3
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x2
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x1
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x0
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x8
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x8
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x3
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x2
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x1
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x0
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x8
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x8
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x3
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x2
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x1
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x0
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x8
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x8
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x3
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x2
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x1
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x0
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x8
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x8
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x3
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_freeAllRegs
leaving
<><><><><><><><><><><><><><><><><>
<><><><><><><><><><><><><><><><><>
starting	/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic16/ralloc.c:pic16_assignRegisters
ebbs before optimizing:

----------------------------------------------------------------
Basic Block _entry : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 1 : bbnum = 0 1st iCode = 1 , last iCode = 8
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 157 bSize = 20
Bits on { (2) (7) }

local defines bitVector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (7) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :
outDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (7) }

usesDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) }

----------------------------------------------------------------
led.c(l55:s1:k0:d0:s0)	 _entry($34) :
led.c(l55:s2:k1:d0:s0)		proc _atoa [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}
led.c(l55:s3:k2:d0:s0)	iTemp0 [k2 lr3:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9} = recv _atoa [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}
led.c(l57:s4:k3:d0:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
led.c(l57:s5:k4:d0:s0)		iTemp1 [k6 lr5:5 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l58:s6:k5:d0:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
led.c(l58:s7:k6:d0:s0)		iTemp2 [k7 lr7:7 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l59:s8:k7:d0:s0)		iTemp3 [k8 lr8:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10} := 0 {float literal}

----------------------------------------------------------------
Basic Block preHeaderLbl16 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 2 : bbnum = 1 1st iCode = 9 , last iCode = 9
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 157 bSize = 20
Bits on { }

local defines bitVector :
pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (7) }

outDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (7) }

usesDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { }

----------------------------------------------------------------
led.c(l59:s9:k149:d0:s0)	 preHeaderLbl16($68) :

----------------------------------------------------------------
Basic Block _forcond_16 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 3 : bbnum = 2 1st iCode = 10 , last iCode = 14
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 157 bSize = 20
Bits on { (9) }

local defines bitVector :bitvector Size = 157 bSize = 20
Bits on { (9) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (7) (9) (15) (16) }

outDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (7) (9) (15) (16) }

usesDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (7) (9) (16) }

----------------------------------------------------------------
led.c(l59:s10:k8:d1:s0)	 _forcond_16($10) :
led.c(l59:s11:k157:d1:s0)		send iTemp3 [k8 lr8:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}{argreg = 1}
led.c(l59:s12:k158:d1:s0)		send iTemp0 [k2 lr3:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}{argreg = 2}
led.c(l59:s13:k159:d1:s0)		iTemp4 [k10 lr13:14 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l59:s14:k10:d1:s0)		if iTemp4 [k10 lr13:14 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _forbreak_16($1)

----------------------------------------------------------------
Basic Block _eBBlock16 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 4 : bbnum = 3 1st iCode = 15 , last iCode = 19
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 157 bSize = 20
Bits on { (15) (16) }

local defines bitVector :bitvector Size = 157 bSize = 20
Bits on { (15) (16) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (7) (9) (15) (16) }

outDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (16) }

usesDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (7) (15) (16) }

----------------------------------------------------------------
led.c(l59:s15:k160:d1:s0)		send iTemp3 [k8 lr8:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}{argreg = 1}
led.c(l59:s16:k161:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l59:s17:k162:d1:s0)		iTemp6 [k12 lr17:18 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float fixed} = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l59:s18:k16:d1:s0)		iTemp3 [k8 lr8:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10} := iTemp6 [k12 lr17:18 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float fixed}
led.c(l59:s19:k17:d1:s0)		 goto _forcond_16($10)

----------------------------------------------------------------
Basic Block _forbreak_16 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 5 : bbnum = 4 1st iCode = 20 , last iCode = 25
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 157 bSize = 20
Bits on { (23) }

local defines bitVector :bitvector Size = 157 bSize = 20
Bits on { (20) (22) (23) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (7) (9) (15) (16) }

outDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (23) }

usesDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (20) (22) }

----------------------------------------------------------------
led.c(l59:s20:k18:d0:s0)	 _forbreak_16($1) :
led.c(l60:s21:k19:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l60:s22:k20:d0:s0)		iTemp7 [k13 lr22:22 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l61:s23:k21:d0:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
led.c(l61:s24:k22:d0:s0)		iTemp8 [k14 lr24:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l62:s25:k23:d0:s0)		iTemp3 [k8 lr8:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10} := 0 {float literal}

----------------------------------------------------------------
Basic Block preHeaderLbl17 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 6 : bbnum = 5 1st iCode = 26 , last iCode = 26
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 157 bSize = 20
Bits on { }

local defines bitVector :
pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (23) }

outDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (23) }

usesDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { }

----------------------------------------------------------------
led.c(l62:s26:k150:d0:s0)	 preHeaderLbl17($70) :

----------------------------------------------------------------
Basic Block _forcond_17 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 7 : bbnum = 6 1st iCode = 27 , last iCode = 31
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 157 bSize = 20
Bits on { (25) }

local defines bitVector :bitvector Size = 157 bSize = 20
Bits on { (25) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (23) (25) (31) (32) }

outDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (23) (25) (31) (32) }

usesDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (23) (25) (32) }

----------------------------------------------------------------
led.c(l62:s27:k24:d1:s0)	 _forcond_17($13) :
led.c(l62:s28:k163:d1:s0)		send iTemp3 [k8 lr8:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}{argreg = 1}
led.c(l62:s29:k164:d1:s0)		send iTemp0 [k2 lr3:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}{argreg = 2}
led.c(l62:s30:k165:d1:s0)		iTemp9 [k15 lr30:31 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l62:s31:k26:d1:s0)		if iTemp9 [k15 lr30:31 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _forbreak_17($2)

----------------------------------------------------------------
Basic Block _eBBlock17 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 8 : bbnum = 7 1st iCode = 32 , last iCode = 36
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 157 bSize = 20
Bits on { (31) (32) }

local defines bitVector :bitvector Size = 157 bSize = 20
Bits on { (31) (32) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (23) (25) (31) (32) }

outDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (25) (31) (32) }

usesDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (23) (31) (32) }

----------------------------------------------------------------
led.c(l62:s32:k166:d1:s0)		send iTemp3 [k8 lr8:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}{argreg = 1}
led.c(l62:s33:k167:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l62:s34:k168:d1:s0)		iTemp11 [k17 lr34:35 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float fixed} = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l62:s35:k32:d1:s0)		iTemp3 [k8 lr8:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10} := iTemp11 [k17 lr34:35 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float fixed}
led.c(l62:s36:k33:d1:s0)		 goto _forcond_17($13)

----------------------------------------------------------------
Basic Block _forbreak_17 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 9 : bbnum = 8 1st iCode = 37 , last iCode = 42
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 157 bSize = 20
Bits on { (39) }

local defines bitVector :bitvector Size = 157 bSize = 20
Bits on { (36) (38) (39) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (23) (25) (31) (32) }

outDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (25) (31) (36) (38) (39) }

usesDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (36) (38) }

----------------------------------------------------------------
led.c(l62:s37:k34:d0:s0)	 _forbreak_17($2) :
led.c(l63:s38:k35:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l63:s39:k36:d0:s0)		iTemp12 [k18 lr39:39 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l64:s40:k37:d0:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
led.c(l64:s41:k38:d0:s0)		iTemp13 [k19 lr41:41 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l65:s42:k39:d0:s0)		iTemp3 [k8 lr8:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10} := 0 {float literal}

----------------------------------------------------------------
Basic Block preHeaderLbl18 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 10 : bbnum = 9 1st iCode = 43 , last iCode = 43
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 157 bSize = 20
Bits on { }

local defines bitVector :
pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (25) (31) (36) (38) (39) }

outDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (25) (31) (36) (38) (39) }

usesDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { }

----------------------------------------------------------------
led.c(l65:s43:k151:d0:s0)	 preHeaderLbl18($72) :

----------------------------------------------------------------
Basic Block _forcond_18 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 11 : bbnum = 10 1st iCode = 44 , last iCode = 48
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 157 bSize = 20
Bits on { (41) }

local defines bitVector :bitvector Size = 157 bSize = 20
Bits on { (41) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (25) (31) (36) (38) (39) (41) (47) (48) }

outDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (25) (31) (36) (38) (39) (41) (47) (48) }

usesDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (39) (41) (48) }

----------------------------------------------------------------
led.c(l65:s44:k40:d1:s0)	 _forcond_18($16) :
led.c(l65:s45:k169:d1:s0)		send iTemp3 [k8 lr8:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}{argreg = 1}
led.c(l65:s46:k170:d1:s0)		send iTemp0 [k2 lr3:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}{argreg = 2}
led.c(l65:s47:k171:d1:s0)		iTemp14 [k20 lr47:48 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l65:s48:k42:d1:s0)		if iTemp14 [k20 lr47:48 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _forbreak_18($3)

----------------------------------------------------------------
Basic Block _eBBlock18 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 12 : bbnum = 11 1st iCode = 49 , last iCode = 53
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 157 bSize = 20
Bits on { (47) (48) }

local defines bitVector :bitvector Size = 157 bSize = 20
Bits on { (47) (48) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (25) (31) (36) (38) (39) (41) (47) (48) }

outDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (25) (31) (36) (38) (41) (47) (48) }

usesDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (39) (47) (48) }

----------------------------------------------------------------
led.c(l65:s49:k172:d1:s0)		send iTemp3 [k8 lr8:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}{argreg = 1}
led.c(l65:s50:k173:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l65:s51:k174:d1:s0)		iTemp16 [k22 lr51:52 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float fixed} = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l65:s52:k48:d1:s0)		iTemp3 [k8 lr8:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10} := iTemp16 [k22 lr51:52 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float fixed}
led.c(l65:s53:k49:d1:s0)		 goto _forcond_18($16)

----------------------------------------------------------------
Basic Block _forbreak_18 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 13 : bbnum = 12 1st iCode = 54 , last iCode = 59
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 157 bSize = 20
Bits on { (55) }

local defines bitVector :bitvector Size = 157 bSize = 20
Bits on { (52) (54) (55) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (25) (31) (36) (38) (39) (41) (47) (48) }

outDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (25) (31) (36) (38) (41) (47) (52) (54) (55) }

usesDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (52) (54) }

----------------------------------------------------------------
led.c(l65:s54:k50:d0:s0)	 _forbreak_18($3) :
led.c(l66:s55:k51:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l66:s56:k52:d0:s0)		iTemp17 [k23 lr56:56 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l67:s57:k53:d0:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
led.c(l67:s58:k54:d0:s0)		iTemp18 [k24 lr58:58 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l68:s59:k55:d0:s0)		iTemp3 [k8 lr8:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10} := 0 {float literal}

----------------------------------------------------------------
Basic Block preHeaderLbl19 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 14 : bbnum = 13 1st iCode = 60 , last iCode = 60
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 157 bSize = 20
Bits on { }

local defines bitVector :
pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (25) (31) (36) (38) (41) (47) (52) (54) (55) }

outDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (25) (31) (36) (38) (41) (47) (52) (54) (55) }

usesDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { }

----------------------------------------------------------------
led.c(l68:s60:k152:d0:s0)	 preHeaderLbl19($74) :

----------------------------------------------------------------
Basic Block _forcond_19 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 15 : bbnum = 14 1st iCode = 61 , last iCode = 65
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 157 bSize = 20
Bits on { (57) }

local defines bitVector :bitvector Size = 157 bSize = 20
Bits on { (57) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (25) (31) (36) (38) (41) (47) (52) (54) (55) (57) (63) (64) }

outDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (25) (31) (36) (38) (41) (47) (52) (54) (55) (57) (63) (64) }

usesDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (55) (57) (64) }

----------------------------------------------------------------
led.c(l68:s61:k56:d1:s0)	 _forcond_19($19) :
led.c(l68:s62:k175:d1:s0)		send iTemp3 [k8 lr8:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}{argreg = 1}
led.c(l68:s63:k176:d1:s0)		send iTemp0 [k2 lr3:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}{argreg = 2}
led.c(l68:s64:k177:d1:s0)		iTemp19 [k25 lr64:65 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l68:s65:k58:d1:s0)		if iTemp19 [k25 lr64:65 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _forbreak_19($4)

----------------------------------------------------------------
Basic Block _eBBlock19 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 16 : bbnum = 15 1st iCode = 66 , last iCode = 70
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 157 bSize = 20
Bits on { (63) (64) }

local defines bitVector :bitvector Size = 157 bSize = 20
Bits on { (63) (64) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (25) (31) (36) (38) (41) (47) (52) (54) (55) (57) (63) (64) }

outDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (25) (31) (36) (38) (41) (47) (52) (54) (57) (63) (64) }

usesDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (55) (63) (64) }

----------------------------------------------------------------
led.c(l68:s66:k178:d1:s0)		send iTemp3 [k8 lr8:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}{argreg = 1}
led.c(l68:s67:k179:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l68:s68:k180:d1:s0)		iTemp21 [k27 lr68:69 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float fixed} = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l68:s69:k64:d1:s0)		iTemp3 [k8 lr8:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10} := iTemp21 [k27 lr68:69 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float fixed}
led.c(l68:s70:k65:d1:s0)		 goto _forcond_19($19)

----------------------------------------------------------------
Basic Block _forbreak_19 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 17 : bbnum = 16 1st iCode = 71 , last iCode = 76
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 157 bSize = 20
Bits on { (71) }

local defines bitVector :bitvector Size = 157 bSize = 20
Bits on { (68) (70) (71) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (25) (31) (36) (38) (41) (47) (52) (54) (55) (57) (63) (64) }

outDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (25) (31) (36) (38) (41) (47) (52) (54) (57) (63) (68) (70) (71) }

usesDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (68) (70) }

----------------------------------------------------------------
led.c(l68:s71:k66:d0:s0)	 _forbreak_19($4) :
led.c(l69:s72:k67:d0:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
led.c(l69:s73:k68:d0:s0)		iTemp22 [k30 lr73:73 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l70:s74:k69:d0:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
led.c(l70:s75:k70:d0:s0)		iTemp23 [k31 lr75:75 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l71:s76:k71:d0:s0)		iTemp3 [k8 lr8:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10} := 0 {float literal}

----------------------------------------------------------------
Basic Block preHeaderLbl20 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 18 : bbnum = 17 1st iCode = 77 , last iCode = 77
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 157 bSize = 20
Bits on { }

local defines bitVector :
pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (25) (31) (36) (38) (41) (47) (52) (54) (57) (63) (68) (70) (71) }

outDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (25) (31) (36) (38) (41) (47) (52) (54) (57) (63) (68) (70) (71) }

usesDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { }

----------------------------------------------------------------
led.c(l71:s77:k153:d0:s0)	 preHeaderLbl20($76) :

----------------------------------------------------------------
Basic Block _forcond_20 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 19 : bbnum = 18 1st iCode = 78 , last iCode = 82
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 157 bSize = 20
Bits on { (73) }

local defines bitVector :bitvector Size = 157 bSize = 20
Bits on { (73) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (25) (31) (36) (38) (41) (47) (52) (54) (57) (63) (68) (70) (71) (73) (79) (80) }

outDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (25) (31) (36) (38) (41) (47) (52) (54) (57) (63) (68) (70) (71) (73) (79) (80) }

usesDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (71) (73) (80) }

----------------------------------------------------------------
led.c(l71:s78:k72:d1:s0)	 _forcond_20($22) :
led.c(l71:s79:k181:d1:s0)		send iTemp3 [k8 lr8:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}{argreg = 1}
led.c(l71:s80:k182:d1:s0)		send iTemp0 [k2 lr3:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}{argreg = 2}
led.c(l71:s81:k183:d1:s0)		iTemp24 [k32 lr81:82 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l71:s82:k74:d1:s0)		if iTemp24 [k32 lr81:82 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _forbreak_20($5)

----------------------------------------------------------------
Basic Block _eBBlock20 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 20 : bbnum = 19 1st iCode = 83 , last iCode = 87
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 157 bSize = 20
Bits on { (79) (80) }

local defines bitVector :bitvector Size = 157 bSize = 20
Bits on { (79) (80) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (25) (31) (36) (38) (41) (47) (52) (54) (57) (63) (68) (70) (71) (73) (79) (80) }

outDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (25) (31) (36) (38) (41) (47) (52) (54) (57) (63) (68) (70) (73) (79) (80) }

usesDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (71) (79) (80) }

----------------------------------------------------------------
led.c(l71:s83:k184:d1:s0)		send iTemp3 [k8 lr8:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}{argreg = 1}
led.c(l71:s84:k185:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l71:s85:k186:d1:s0)		iTemp26 [k34 lr85:86 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float fixed} = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l71:s86:k80:d1:s0)		iTemp3 [k8 lr8:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10} := iTemp26 [k34 lr85:86 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float fixed}
led.c(l71:s87:k81:d1:s0)		 goto _forcond_20($22)

----------------------------------------------------------------
Basic Block _forbreak_20 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 21 : bbnum = 20 1st iCode = 88 , last iCode = 93
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 157 bSize = 20
Bits on { (87) }

local defines bitVector :bitvector Size = 157 bSize = 20
Bits on { (84) (86) (87) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (25) (31) (36) (38) (41) (47) (52) (54) (57) (63) (68) (70) (71) (73) (79) (80) }

outDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (25) (31) (36) (38) (41) (47) (52) (54) (57) (63) (68) (70) (73) (79) (84) (86) (87) }

usesDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (84) (86) }

----------------------------------------------------------------
led.c(l71:s88:k82:d0:s0)	 _forbreak_20($5) :
led.c(l72:s89:k83:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l72:s90:k84:d0:s0)		iTemp27 [k35 lr90:90 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l73:s91:k85:d0:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
led.c(l73:s92:k86:d0:s0)		iTemp28 [k36 lr92:92 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l74:s93:k87:d0:s0)		iTemp3 [k8 lr8:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10} := 0 {float literal}

----------------------------------------------------------------
Basic Block preHeaderLbl21 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 22 : bbnum = 21 1st iCode = 94 , last iCode = 94
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 157 bSize = 20
Bits on { }

local defines bitVector :
pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (25) (31) (36) (38) (41) (47) (52) (54) (57) (63) (68) (70) (73) (79) (84) (86) (87) }

outDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (25) (31) (36) (38) (41) (47) (52) (54) (57) (63) (68) (70) (73) (79) (84) (86) (87) }

usesDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { }

----------------------------------------------------------------
led.c(l74:s94:k154:d0:s0)	 preHeaderLbl21($78) :

----------------------------------------------------------------
Basic Block _forcond_21 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 23 : bbnum = 22 1st iCode = 95 , last iCode = 99
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 157 bSize = 20
Bits on { (89) }

local defines bitVector :bitvector Size = 157 bSize = 20
Bits on { (89) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (25) (31) (36) (38) (41) (47) (52) (54) (57) (63) (68) (70) (73) (79) (84) (86) (87) (89) (95) (96) }

outDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (25) (31) (36) (38) (41) (47) (52) (54) (57) (63) (68) (70) (73) (79) (84) (86) (87) (89) (95) (96) }

usesDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (87) (89) (96) }

----------------------------------------------------------------
led.c(l74:s95:k88:d1:s0)	 _forcond_21($25) :
led.c(l74:s96:k187:d1:s0)		send iTemp3 [k8 lr8:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}{argreg = 1}
led.c(l74:s97:k188:d1:s0)		send iTemp0 [k2 lr3:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}{argreg = 2}
led.c(l74:s98:k189:d1:s0)		iTemp29 [k37 lr98:99 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l74:s99:k90:d1:s0)		if iTemp29 [k37 lr98:99 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _forbreak_21($6)

----------------------------------------------------------------
Basic Block _eBBlock21 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 24 : bbnum = 23 1st iCode = 100 , last iCode = 104
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 157 bSize = 20
Bits on { (95) (96) }

local defines bitVector :bitvector Size = 157 bSize = 20
Bits on { (95) (96) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (25) (31) (36) (38) (41) (47) (52) (54) (57) (63) (68) (70) (73) (79) (84) (86) (87) (89) (95) (96) }

outDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (25) (31) (36) (38) (41) (47) (52) (54) (57) (63) (68) (70) (73) (79) (84) (86) (89) (95) (96) }

usesDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (87) (95) (96) }

----------------------------------------------------------------
led.c(l74:s100:k190:d1:s0)		send iTemp3 [k8 lr8:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}{argreg = 1}
led.c(l74:s101:k191:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l74:s102:k192:d1:s0)		iTemp31 [k39 lr102:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float fixed} = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l74:s103:k96:d1:s0)		iTemp3 [k8 lr8:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10} := iTemp31 [k39 lr102:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float fixed}
led.c(l74:s104:k97:d1:s0)		 goto _forcond_21($25)

----------------------------------------------------------------
Basic Block _forbreak_21 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 25 : bbnum = 24 1st iCode = 105 , last iCode = 110
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 157 bSize = 20
Bits on { (103) }

local defines bitVector :bitvector Size = 157 bSize = 20
Bits on { (100) (102) (103) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (25) (31) (36) (38) (41) (47) (52) (54) (57) (63) (68) (70) (73) (79) (84) (86) (87) (89) (95) (96) }

outDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (25) (31) (36) (38) (41) (47) (52) (54) (57) (63) (68) (70) (73) (79) (84) (86) (89) (95) (100) (102) (103) }

usesDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (100) (102) }

----------------------------------------------------------------
led.c(l74:s105:k98:d0:s0)	 _forbreak_21($6) :
led.c(l75:s106:k99:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l75:s107:k100:d0:s0)		iTemp32 [k40 lr107:107 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l76:s108:k101:d0:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
led.c(l76:s109:k102:d0:s0)		iTemp33 [k41 lr109:109 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l77:s110:k103:d0:s0)		iTemp3 [k8 lr8:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10} := 0 {float literal}

----------------------------------------------------------------
Basic Block preHeaderLbl22 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 26 : bbnum = 25 1st iCode = 111 , last iCode = 111
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 157 bSize = 20
Bits on { }

local defines bitVector :
pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (25) (31) (36) (38) (41) (47) (52) (54) (57) (63) (68) (70) (73) (79) (84) (86) (89) (95) (100) (102) (103) }

outDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (25) (31) (36) (38) (41) (47) (52) (54) (57) (63) (68) (70) (73) (79) (84) (86) (89) (95) (100) (102) (103) }

usesDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { }

----------------------------------------------------------------
led.c(l77:s111:k155:d0:s0)	 preHeaderLbl22($80) :

----------------------------------------------------------------
Basic Block _forcond_22 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 27 : bbnum = 26 1st iCode = 112 , last iCode = 116
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 157 bSize = 20
Bits on { (105) }

local defines bitVector :bitvector Size = 157 bSize = 20
Bits on { (105) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (25) (31) (36) (38) (41) (47) (52) (54) (57) (63) (68) (70) (73) (79) (84) (86) (89) (95) (100) (102) (103) (105) (111) (112) }

outDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (25) (31) (36) (38) (41) (47) (52) (54) (57) (63) (68) (70) (73) (79) (84) (86) (89) (95) (100) (102) (103) (105) (111) (112) }

usesDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (103) (105) (112) }

----------------------------------------------------------------
led.c(l77:s112:k104:d1:s0)	 _forcond_22($28) :
led.c(l77:s113:k193:d1:s0)		send iTemp3 [k8 lr8:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}{argreg = 1}
led.c(l77:s114:k194:d1:s0)		send iTemp0 [k2 lr3:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}{argreg = 2}
led.c(l77:s115:k195:d1:s0)		iTemp34 [k42 lr115:116 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l77:s116:k106:d1:s0)		if iTemp34 [k42 lr115:116 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _forbreak_22($7)

----------------------------------------------------------------
Basic Block _eBBlock22 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 28 : bbnum = 27 1st iCode = 117 , last iCode = 121
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 157 bSize = 20
Bits on { (111) (112) }

local defines bitVector :bitvector Size = 157 bSize = 20
Bits on { (111) (112) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (25) (31) (36) (38) (41) (47) (52) (54) (57) (63) (68) (70) (73) (79) (84) (86) (89) (95) (100) (102) (103) (105) (111) (112) }

outDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (25) (31) (36) (38) (41) (47) (52) (54) (57) (63) (68) (70) (73) (79) (84) (86) (89) (95) (100) (102) (105) (111) (112) }

usesDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (103) (111) (112) }

----------------------------------------------------------------
led.c(l77:s117:k196:d1:s0)		send iTemp3 [k8 lr8:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}{argreg = 1}
led.c(l77:s118:k197:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l77:s119:k198:d1:s0)		iTemp36 [k44 lr119:120 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float fixed} = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l77:s120:k112:d1:s0)		iTemp3 [k8 lr8:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10} := iTemp36 [k44 lr119:120 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float fixed}
led.c(l77:s121:k113:d1:s0)		 goto _forcond_22($28)

----------------------------------------------------------------
Basic Block _forbreak_22 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 29 : bbnum = 28 1st iCode = 122 , last iCode = 127
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 157 bSize = 20
Bits on { (119) }

local defines bitVector :bitvector Size = 157 bSize = 20
Bits on { (116) (118) (119) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (25) (31) (36) (38) (41) (47) (52) (54) (57) (63) (68) (70) (73) (79) (84) (86) (89) (95) (100) (102) (103) (105) (111) (112) }

outDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (25) (31) (36) (38) (41) (47) (52) (54) (57) (63) (68) (70) (73) (79) (84) (86) (89) (95) (100) (102) (105) (111) (116) (118) (119) }

usesDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (116) (118) }

----------------------------------------------------------------
led.c(l77:s122:k114:d0:s0)	 _forbreak_22($7) :
led.c(l78:s123:k115:d0:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
led.c(l78:s124:k116:d0:s0)		iTemp37 [k45 lr124:124 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l79:s125:k117:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l79:s126:k118:d0:s0)		iTemp38 [k46 lr126:126 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l80:s127:k119:d0:s0)		iTemp3 [k8 lr8:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10} := 0 {float literal}

----------------------------------------------------------------
Basic Block preHeaderLbl23 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 30 : bbnum = 29 1st iCode = 128 , last iCode = 128
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 157 bSize = 20
Bits on { }

local defines bitVector :
pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (25) (31) (36) (38) (41) (47) (52) (54) (57) (63) (68) (70) (73) (79) (84) (86) (89) (95) (100) (102) (105) (111) (116) (118) (119) }

outDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (25) (31) (36) (38) (41) (47) (52) (54) (57) (63) (68) (70) (73) (79) (84) (86) (89) (95) (100) (102) (105) (111) (116) (118) (119) }

usesDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { }

----------------------------------------------------------------
led.c(l80:s128:k156:d0:s0)	 preHeaderLbl23($82) :

----------------------------------------------------------------
Basic Block _forcond_23 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 31 : bbnum = 30 1st iCode = 129 , last iCode = 133
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 157 bSize = 20
Bits on { (121) }

local defines bitVector :bitvector Size = 157 bSize = 20
Bits on { (121) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (25) (31) (36) (38) (41) (47) (52) (54) (57) (63) (68) (70) (73) (79) (84) (86) (89) (95) (100) (102) (105) (111) (116) (118) (119) (121) (127) (128) }

outDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (25) (31) (36) (38) (41) (47) (52) (54) (57) (63) (68) (70) (73) (79) (84) (86) (89) (95) (100) (102) (105) (111) (116) (118) (119) (121) (127) (128) }

usesDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (119) (121) (128) }

----------------------------------------------------------------
led.c(l80:s129:k120:d1:s0)	 _forcond_23($31) :
led.c(l80:s130:k199:d1:s0)		send iTemp3 [k8 lr8:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}{argreg = 1}
led.c(l80:s131:k200:d1:s0)		send iTemp0 [k2 lr3:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}{argreg = 2}
led.c(l80:s132:k201:d1:s0)		iTemp39 [k47 lr132:133 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l80:s133:k122:d1:s0)		if iTemp39 [k47 lr132:133 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _return($33)

----------------------------------------------------------------
Basic Block _eBBlock23 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 32 : bbnum = 31 1st iCode = 134 , last iCode = 138
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 157 bSize = 20
Bits on { (127) (128) }

local defines bitVector :bitvector Size = 157 bSize = 20
Bits on { (127) (128) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (25) (31) (36) (38) (41) (47) (52) (54) (57) (63) (68) (70) (73) (79) (84) (86) (89) (95) (100) (102) (105) (111) (116) (118) (119) (121) (127) (128) }

outDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (25) (31) (36) (38) (41) (47) (52) (54) (57) (63) (68) (70) (73) (79) (84) (86) (89) (95) (100) (102) (105) (111) (116) (118) (121) (127) (128) }

usesDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (119) (127) (128) }

----------------------------------------------------------------
led.c(l80:s134:k202:d1:s0)		send iTemp3 [k8 lr8:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}{argreg = 1}
led.c(l80:s135:k203:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l80:s136:k204:d1:s0)		iTemp41 [k49 lr136:137 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float fixed} = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l80:s137:k128:d1:s0)		iTemp3 [k8 lr8:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10} := iTemp41 [k49 lr136:137 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float fixed}
led.c(l80:s138:k129:d1:s0)		 goto _forcond_23($31)

----------------------------------------------------------------
Basic Block _return : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 33 : bbnum = 32 1st iCode = 139 , last iCode = 140
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 157 bSize = 20
Bits on { }

local defines bitVector :
pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (25) (31) (36) (38) (41) (47) (52) (54) (57) (63) (68) (70) (73) (79) (84) (86) (89) (95) (100) (102) (105) (111) (116) (118) (119) (121) (127) (128) }

outDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (25) (31) (36) (38) (41) (47) (52) (54) (57) (63) (68) (70) (73) (79) (84) (86) (89) (95) (100) (102) (105) (111) (116) (118) (119) (121) (127) (128) }

usesDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { }

----------------------------------------------------------------
led.c(l80:s139:k131:d0:s0)	 _return($33) :
led.c(l80:s140:k132:d0:s0)		eproc _atoa [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}
pic16_freeAllRegs
pic16_packRegisters
3007	packRegsForAssign
ic->op = =
  result:iTemp3 [k8 lr8:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}
  left:
  right:0 {float literal}
 3015 - actuall processing
  3027 - not packing - right is not temp
pic16_allocDirReg BAD, op is NULL
  result:iTemp3 [k8 lr8:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}
  left:
  right:0 {float literal}
 4213
x  left:_atoa [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}
    c   Symbol type: void function ( float fixed) fixed
 4213
x  left:_atoa [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}
    c   Symbol type: void function ( float fixed) fixed
  result:iTemp0 [k2 lr3:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}
          Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
packForReceive
  result:iTemp0 [k2 lr3:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}
  left:_atoa [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}
  right:
  hey we can remove this unnecessary assign
  4191 - pointer reg req = 0
 4213
x  left:_ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
    c   Symbol type: void function ( char fixed) fixed
  result:iTemp1 [k6 lr5:5 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed}
          Symbol type: void fixed
  4191 - pointer reg req = 0
 4213
  4191 - pointer reg req = 0
 4213
x  left:_ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
    c   Symbol type: void function ( char fixed) fixed
  result:iTemp2 [k7 lr7:7 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed}
          Symbol type: void fixed
  4191 - pointer reg req = 0
 4213
  result:iTemp3 [k8 lr8:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}
          Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
 4213
pic16_packRegisters
 4213
x  left:iTemp3 [k8 lr8:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}
    c   Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp0 [k2 lr3:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}
    c   Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
x  left:___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
    c   Symbol type: char function ( float fixed, float fixed) fixed
  result:iTemp4 [k10 lr13:14 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
          Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp4 [k10 lr13:14 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
    c   Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
3007	packRegsForAssign
ic->op = =
  result:iTemp3 [k8 lr8:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}
  left:
  right:iTemp6 [k12 lr17:18 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float fixed}
 3015 - actuall processing
3072	Searching for iTempNN
  3097 - dic result key == ic right key -- pointer set=N
  packing. removing iTemp6
  replacing with iTemp6
  3199
  result:iTemp3 [k8 lr8:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}
  left:
  right:iTemp6 [k12 lr17:18 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float fixed}
x  left:iTemp3 [k8 lr8:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}
    c   Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
  4191 - pointer reg req = 0
 4213
x  left:___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
    c   Symbol type: float function ( float fixed, float fixed) fixed
  result:iTemp3 [k8 lr8:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}
          Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
 4213
pic16_packRegisters
3007	packRegsForAssign
ic->op = =
  result:iTemp3 [k8 lr8:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}
  left:
  right:0 {float literal}
 3015 - actuall processing
  3027 - not packing - right is not temp
pic16_allocDirReg BAD, op is NULL
  result:iTemp3 [k8 lr8:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}
  left:
  right:0 {float literal}
 4213
  4191 - pointer reg req = 0
 4213
x  left:_ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
    c   Symbol type: void function ( char fixed) fixed
  result:iTemp7 [k13 lr22:22 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed}
          Symbol type: void fixed
  4191 - pointer reg req = 0
 4213
  4191 - pointer reg req = 0
 4213
x  left:_ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
    c   Symbol type: void function ( char fixed) fixed
  result:iTemp8 [k14 lr24:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed}
          Symbol type: void fixed
  4191 - pointer reg req = 0
 4213
  result:iTemp3 [k8 lr8:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}
          Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
 4213
pic16_packRegisters
 4213
x  left:iTemp3 [k8 lr8:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}
    c   Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp0 [k2 lr3:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}
    c   Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
x  left:___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
    c   Symbol type: char function ( float fixed, float fixed) fixed
  result:iTemp9 [k15 lr30:31 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
          Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp9 [k15 lr30:31 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
    c   Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
3007	packRegsForAssign
ic->op = =
  result:iTemp3 [k8 lr8:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}
  left:
  right:iTemp11 [k17 lr34:35 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float fixed}
 3015 - actuall processing
3072	Searching for iTempNN
  3097 - dic result key == ic right key -- pointer set=N
  packing. removing iTemp11
  replacing with iTemp11
  3199
  result:iTemp3 [k8 lr8:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}
  left:
  right:iTemp11 [k17 lr34:35 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float fixed}
x  left:iTemp3 [k8 lr8:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}
    c   Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
  4191 - pointer reg req = 0
 4213
x  left:___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
    c   Symbol type: float function ( float fixed, float fixed) fixed
  result:iTemp3 [k8 lr8:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}
          Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
 4213
pic16_packRegisters
3007	packRegsForAssign
ic->op = =
  result:iTemp3 [k8 lr8:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}
  left:
  right:0 {float literal}
 3015 - actuall processing
  3027 - not packing - right is not temp
pic16_allocDirReg BAD, op is NULL
  result:iTemp3 [k8 lr8:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}
  left:
  right:0 {float literal}
 4213
  4191 - pointer reg req = 0
 4213
x  left:_ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
    c   Symbol type: void function ( char fixed) fixed
  result:iTemp12 [k18 lr39:39 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed}
          Symbol type: void fixed
  4191 - pointer reg req = 0
 4213
  4191 - pointer reg req = 0
 4213
x  left:_ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
    c   Symbol type: void function ( char fixed) fixed
  result:iTemp13 [k19 lr41:41 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed}
          Symbol type: void fixed
  4191 - pointer reg req = 0
 4213
  result:iTemp3 [k8 lr8:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}
          Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
 4213
pic16_packRegisters
 4213
x  left:iTemp3 [k8 lr8:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}
    c   Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp0 [k2 lr3:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}
    c   Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
x  left:___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
    c   Symbol type: char function ( float fixed, float fixed) fixed
  result:iTemp14 [k20 lr47:48 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
          Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp14 [k20 lr47:48 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
    c   Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
3007	packRegsForAssign
ic->op = =
  result:iTemp3 [k8 lr8:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}
  left:
  right:iTemp16 [k22 lr51:52 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float fixed}
 3015 - actuall processing
3072	Searching for iTempNN
  3097 - dic result key == ic right key -- pointer set=N
  packing. removing iTemp16
  replacing with iTemp16
  3199
  result:iTemp3 [k8 lr8:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}
  left:
  right:iTemp16 [k22 lr51:52 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float fixed}
x  left:iTemp3 [k8 lr8:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}
    c   Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
  4191 - pointer reg req = 0
 4213
x  left:___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
    c   Symbol type: float function ( float fixed, float fixed) fixed
  result:iTemp3 [k8 lr8:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}
          Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
 4213
pic16_packRegisters
3007	packRegsForAssign
ic->op = =
  result:iTemp3 [k8 lr8:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}
  left:
  right:0 {float literal}
 3015 - actuall processing
  3027 - not packing - right is not temp
pic16_allocDirReg BAD, op is NULL
  result:iTemp3 [k8 lr8:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}
  left:
  right:0 {float literal}
 4213
  4191 - pointer reg req = 0
 4213
x  left:_ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
    c   Symbol type: void function ( char fixed) fixed
  result:iTemp17 [k23 lr56:56 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed}
          Symbol type: void fixed
  4191 - pointer reg req = 0
 4213
  4191 - pointer reg req = 0
 4213
x  left:_ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
    c   Symbol type: void function ( char fixed) fixed
  result:iTemp18 [k24 lr58:58 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed}
          Symbol type: void fixed
  4191 - pointer reg req = 0
 4213
  result:iTemp3 [k8 lr8:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}
          Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
 4213
pic16_packRegisters
 4213
x  left:iTemp3 [k8 lr8:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}
    c   Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp0 [k2 lr3:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}
    c   Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
x  left:___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
    c   Symbol type: char function ( float fixed, float fixed) fixed
  result:iTemp19 [k25 lr64:65 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
          Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp19 [k25 lr64:65 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
    c   Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
3007	packRegsForAssign
ic->op = =
  result:iTemp3 [k8 lr8:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}
  left:
  right:iTemp21 [k27 lr68:69 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float fixed}
 3015 - actuall processing
3072	Searching for iTempNN
  3097 - dic result key == ic right key -- pointer set=N
  packing. removing iTemp21
  replacing with iTemp21
  3199
  result:iTemp3 [k8 lr8:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}
  left:
  right:iTemp21 [k27 lr68:69 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float fixed}
x  left:iTemp3 [k8 lr8:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}
    c   Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
  4191 - pointer reg req = 0
 4213
x  left:___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
    c   Symbol type: float function ( float fixed, float fixed) fixed
  result:iTemp3 [k8 lr8:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}
          Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
 4213
pic16_packRegisters
3007	packRegsForAssign
ic->op = =
  result:iTemp3 [k8 lr8:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}
  left:
  right:0 {float literal}
 3015 - actuall processing
  3027 - not packing - right is not temp
pic16_allocDirReg BAD, op is NULL
  result:iTemp3 [k8 lr8:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}
  left:
  right:0 {float literal}
 4213
  4191 - pointer reg req = 0
 4213
x  left:_desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
    c   Symbol type: void function ( char fixed) fixed
  result:iTemp22 [k30 lr73:73 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed}
          Symbol type: void fixed
  4191 - pointer reg req = 0
 4213
  4191 - pointer reg req = 0
 4213
x  left:_desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
    c   Symbol type: void function ( char fixed) fixed
  result:iTemp23 [k31 lr75:75 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed}
          Symbol type: void fixed
  4191 - pointer reg req = 0
 4213
  result:iTemp3 [k8 lr8:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}
          Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
 4213
pic16_packRegisters
 4213
x  left:iTemp3 [k8 lr8:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}
    c   Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp0 [k2 lr3:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}
    c   Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
x  left:___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
    c   Symbol type: char function ( float fixed, float fixed) fixed
  result:iTemp24 [k32 lr81:82 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
          Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp24 [k32 lr81:82 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
    c   Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
3007	packRegsForAssign
ic->op = =
  result:iTemp3 [k8 lr8:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}
  left:
  right:iTemp26 [k34 lr85:86 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float fixed}
 3015 - actuall processing
3072	Searching for iTempNN
  3097 - dic result key == ic right key -- pointer set=N
  packing. removing iTemp26
  replacing with iTemp26
  3199
  result:iTemp3 [k8 lr8:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}
  left:
  right:iTemp26 [k34 lr85:86 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float fixed}
x  left:iTemp3 [k8 lr8:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}
    c   Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
  4191 - pointer reg req = 0
 4213
x  left:___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
    c   Symbol type: float function ( float fixed, float fixed) fixed
  result:iTemp3 [k8 lr8:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}
          Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
 4213
pic16_packRegisters
3007	packRegsForAssign
ic->op = =
  result:iTemp3 [k8 lr8:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}
  left:
  right:0 {float literal}
 3015 - actuall processing
  3027 - not packing - right is not temp
pic16_allocDirReg BAD, op is NULL
  result:iTemp3 [k8 lr8:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}
  left:
  right:0 {float literal}
 4213
  4191 - pointer reg req = 0
 4213
x  left:_desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
    c   Symbol type: void function ( char fixed) fixed
  result:iTemp27 [k35 lr90:90 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed}
          Symbol type: void fixed
  4191 - pointer reg req = 0
 4213
  4191 - pointer reg req = 0
 4213
x  left:_desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
    c   Symbol type: void function ( char fixed) fixed
  result:iTemp28 [k36 lr92:92 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed}
          Symbol type: void fixed
  4191 - pointer reg req = 0
 4213
  result:iTemp3 [k8 lr8:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}
          Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
 4213
pic16_packRegisters
 4213
x  left:iTemp3 [k8 lr8:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}
    c   Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp0 [k2 lr3:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}
    c   Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
x  left:___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
    c   Symbol type: char function ( float fixed, float fixed) fixed
  result:iTemp29 [k37 lr98:99 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
          Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp29 [k37 lr98:99 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
    c   Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
3007	packRegsForAssign
ic->op = =
  result:iTemp3 [k8 lr8:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}
  left:
  right:iTemp31 [k39 lr102:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float fixed}
 3015 - actuall processing
3072	Searching for iTempNN
  3097 - dic result key == ic right key -- pointer set=N
  packing. removing iTemp31
  replacing with iTemp31
  3199
  result:iTemp3 [k8 lr8:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}
  left:
  right:iTemp31 [k39 lr102:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float fixed}
x  left:iTemp3 [k8 lr8:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}
    c   Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
  4191 - pointer reg req = 0
 4213
x  left:___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
    c   Symbol type: float function ( float fixed, float fixed) fixed
  result:iTemp3 [k8 lr8:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}
          Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
 4213
pic16_packRegisters
3007	packRegsForAssign
ic->op = =
  result:iTemp3 [k8 lr8:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}
  left:
  right:0 {float literal}
 3015 - actuall processing
  3027 - not packing - right is not temp
pic16_allocDirReg BAD, op is NULL
  result:iTemp3 [k8 lr8:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}
  left:
  right:0 {float literal}
 4213
  4191 - pointer reg req = 0
 4213
x  left:_desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
    c   Symbol type: void function ( char fixed) fixed
  result:iTemp32 [k40 lr107:107 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed}
          Symbol type: void fixed
  4191 - pointer reg req = 0
 4213
  4191 - pointer reg req = 0
 4213
x  left:_desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
    c   Symbol type: void function ( char fixed) fixed
  result:iTemp33 [k41 lr109:109 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed}
          Symbol type: void fixed
  4191 - pointer reg req = 0
 4213
  result:iTemp3 [k8 lr8:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}
          Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
 4213
pic16_packRegisters
 4213
x  left:iTemp3 [k8 lr8:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}
    c   Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp0 [k2 lr3:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}
    c   Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
x  left:___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
    c   Symbol type: char function ( float fixed, float fixed) fixed
  result:iTemp34 [k42 lr115:116 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
          Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp34 [k42 lr115:116 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
    c   Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
3007	packRegsForAssign
ic->op = =
  result:iTemp3 [k8 lr8:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}
  left:
  right:iTemp36 [k44 lr119:120 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float fixed}
 3015 - actuall processing
3072	Searching for iTempNN
  3097 - dic result key == ic right key -- pointer set=N
  packing. removing iTemp36
  replacing with iTemp36
  3199
  result:iTemp3 [k8 lr8:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}
  left:
  right:iTemp36 [k44 lr119:120 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float fixed}
x  left:iTemp3 [k8 lr8:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}
    c   Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
  4191 - pointer reg req = 0
 4213
x  left:___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
    c   Symbol type: float function ( float fixed, float fixed) fixed
  result:iTemp3 [k8 lr8:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}
          Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
 4213
pic16_packRegisters
3007	packRegsForAssign
ic->op = =
  result:iTemp3 [k8 lr8:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}
  left:
  right:0 {float literal}
 3015 - actuall processing
  3027 - not packing - right is not temp
pic16_allocDirReg BAD, op is NULL
  result:iTemp3 [k8 lr8:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}
  left:
  right:0 {float literal}
 4213
  4191 - pointer reg req = 0
 4213
x  left:_desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
    c   Symbol type: void function ( char fixed) fixed
  result:iTemp37 [k45 lr124:124 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed}
          Symbol type: void fixed
  4191 - pointer reg req = 0
 4213
  4191 - pointer reg req = 0
 4213
x  left:_desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
    c   Symbol type: void function ( char fixed) fixed
  result:iTemp38 [k46 lr126:126 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed}
          Symbol type: void fixed
  4191 - pointer reg req = 0
 4213
  result:iTemp3 [k8 lr8:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}
          Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
 4213
pic16_packRegisters
 4213
x  left:iTemp3 [k8 lr8:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}
    c   Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp0 [k2 lr3:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}
    c   Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
x  left:___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
    c   Symbol type: char function ( float fixed, float fixed) fixed
  result:iTemp39 [k47 lr132:133 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
          Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp39 [k47 lr132:133 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
    c   Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
3007	packRegsForAssign
ic->op = =
  result:iTemp3 [k8 lr8:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}
  left:
  right:iTemp41 [k49 lr136:137 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float fixed}
 3015 - actuall processing
3072	Searching for iTempNN
  3097 - dic result key == ic right key -- pointer set=N
  packing. removing iTemp41
  replacing with iTemp41
  3199
  result:iTemp3 [k8 lr8:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}
  left:
  right:iTemp41 [k49 lr136:137 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float fixed}
x  left:iTemp3 [k8 lr8:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}
    c   Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
  4191 - pointer reg req = 0
 4213
x  left:___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
    c   Symbol type: float function ( float fixed, float fixed) fixed
  result:iTemp3 [k8 lr8:138 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}
          Symbol type: float fixed
  4191 - pointer reg req = 0
 4213
 4213
pic16_packRegisters
 4213
x  left:_atoa [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}
    c   Symbol type: void function ( float fixed) fixed
 4213
regTypeNum
  2754 - iTemp0
  2765 - itemp register
  reg name iTemp0,  reg type REG_GPR
  2754 - iTemp1
  2754 - iTemp2
  2754 - iTemp3
  2765 - itemp register
  reg name iTemp3,  reg type REG_GPR
  2754 - iTemp4
  2765 - itemp register
  reg name iTemp4,  reg type REG_GPR
  2754 - iTemp7
  2754 - iTemp8
  2754 - iTemp9
  2765 - itemp register
  reg name iTemp9,  reg type REG_GPR
  2754 - iTemp12
  2754 - iTemp13
  2754 - iTemp14
  2765 - itemp register
  reg name iTemp14,  reg type REG_GPR
  2754 - iTemp17
  2754 - iTemp18
  2754 - iTemp19
  2765 - itemp register
  reg name iTemp19,  reg type REG_GPR
  2754 - iTemp22
  2754 - iTemp23
  2754 - iTemp24
  2765 - itemp register
  reg name iTemp24,  reg type REG_GPR
  2754 - iTemp27
  2754 - iTemp28
  2754 - iTemp29
  2765 - itemp register
  reg name iTemp29,  reg type REG_GPR
  2754 - iTemp32
  2754 - iTemp33
  2754 - iTemp34
  2765 - itemp register
  reg name iTemp34,  reg type REG_GPR
  2754 - iTemp37
  2754 - iTemp38
  2754 - iTemp39
  2765 - itemp register
  reg name iTemp39,  reg type REG_GPR
serialRegAssign
  op: LABEL
deassignLRs
  op: FUNCTION
pic16_allocDirReg:815 symbol name _atoa
  827  storage class 0 
 838  specifier
_atoa [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}
pic16_allocDirReg:861 sym: atoa in codespace
deassignLRs
  op: RECEIVE
pic16_allocDirReg:815 symbol name _atoa
  827  storage class 0 
 838  specifier
_atoa [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}
pic16_allocDirReg:861 sym: atoa in codespace
deassignLRs
willCauseSpill
computeSpillable
When I get clever, I'll optimize the receive logic
bitvector Size = 277 bSize = 35
Bits on { (2) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 8 (0x8)
getRegGpr
allocReg of type REG_GPR for register rIdx: 8 (0x8)
getRegGpr
allocReg of type REG_GPR for register rIdx: 8 (0x8)
getRegGpr
allocReg of type REG_GPR for register rIdx: 8 (0x8)
  2457 - 
  2471 - 
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name _ligaled
  827  storage class 0 
 838  specifier
_ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
pic16_allocDirReg:861 sym: ligaled in codespace
deassignLRs
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name _ligaled
  827  storage class 0 
 838  specifier
_ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
pic16_allocDirReg:861 sym: ligaled in codespace
deassignLRs
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 277 bSize = 35
Bits on { (2) (8) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 8 (0x8)
getRegGpr
allocReg of type REG_GPR for register rIdx: 8 (0x8)
getRegGpr
allocReg of type REG_GPR for register rIdx: 8 (0x8)
getRegGpr
allocReg of type REG_GPR for register rIdx: 8 (0x8)
  2457 - 
  2471 - 
  op: LABEL
deassignLRs
  op: LABEL
deassignLRs
  op: SEND
deassignLRs
  op: SEND
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name ___fslt
  827  storage class 0 
 832  integral
 838  specifier
___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
pic16_allocDirReg:861 sym: __fslt in codespace
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 277 bSize = 35
Bits on { (2) (8) (10) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 8 (0x8)
  2457 - 
  2471 - 
  op: IFX
pic16_allocDirReg BAD, op is NULL
deassignLRs
freeReg
  op: SEND
deassignLRs
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name ___fsadd
  827  storage class 0 
 838  specifier
___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
pic16_allocDirReg:861 sym: __fsadd in codespace
deassignLRs
  op: GOTO
deassignLRs
  op: LABEL
deassignLRs
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name _ligaled
  827  storage class 0 
 838  specifier
_ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
pic16_allocDirReg:861 sym: ligaled in codespace
deassignLRs
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name _ligaled
  827  storage class 0 
 838  specifier
_ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
pic16_allocDirReg:861 sym: ligaled in codespace
deassignLRs
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: LABEL
deassignLRs
  op: LABEL
deassignLRs
  op: SEND
deassignLRs
  op: SEND
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name ___fslt
  827  storage class 0 
 832  integral
 838  specifier
___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
pic16_allocDirReg:861 sym: __fslt in codespace
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 277 bSize = 35
Bits on { (2) (8) (15) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 8 (0x8)
  2457 - 
  2471 - 
  op: IFX
pic16_allocDirReg BAD, op is NULL
deassignLRs
freeReg
  op: SEND
deassignLRs
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name ___fsadd
  827  storage class 0 
 838  specifier
___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
pic16_allocDirReg:861 sym: __fsadd in codespace
deassignLRs
  op: GOTO
deassignLRs
  op: LABEL
deassignLRs
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name _ligaled
  827  storage class 0 
 838  specifier
_ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
pic16_allocDirReg:861 sym: ligaled in codespace
deassignLRs
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name _ligaled
  827  storage class 0 
 838  specifier
_ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
pic16_allocDirReg:861 sym: ligaled in codespace
deassignLRs
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: LABEL
deassignLRs
  op: LABEL
deassignLRs
  op: SEND
deassignLRs
  op: SEND
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name ___fslt
  827  storage class 0 
 832  integral
 838  specifier
___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
pic16_allocDirReg:861 sym: __fslt in codespace
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 277 bSize = 35
Bits on { (2) (8) (20) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 8 (0x8)
  2457 - 
  2471 - 
  op: IFX
pic16_allocDirReg BAD, op is NULL
deassignLRs
freeReg
  op: SEND
deassignLRs
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name ___fsadd
  827  storage class 0 
 838  specifier
___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
pic16_allocDirReg:861 sym: __fsadd in codespace
deassignLRs
  op: GOTO
deassignLRs
  op: LABEL
deassignLRs
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name _ligaled
  827  storage class 0 
 838  specifier
_ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
pic16_allocDirReg:861 sym: ligaled in codespace
deassignLRs
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name _ligaled
  827  storage class 0 
 838  specifier
_ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
pic16_allocDirReg:861 sym: ligaled in codespace
deassignLRs
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: LABEL
deassignLRs
  op: LABEL
deassignLRs
  op: SEND
deassignLRs
  op: SEND
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name ___fslt
  827  storage class 0 
 832  integral
 838  specifier
___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
pic16_allocDirReg:861 sym: __fslt in codespace
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 277 bSize = 35
Bits on { (2) (8) (25) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 8 (0x8)
  2457 - 
  2471 - 
  op: IFX
pic16_allocDirReg BAD, op is NULL
deassignLRs
freeReg
  op: SEND
deassignLRs
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name ___fsadd
  827  storage class 0 
 838  specifier
___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
pic16_allocDirReg:861 sym: __fsadd in codespace
deassignLRs
  op: GOTO
deassignLRs
  op: LABEL
deassignLRs
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name _desligaled
  827  storage class 0 
 838  specifier
_desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
pic16_allocDirReg:861 sym: desligaled in codespace
deassignLRs
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name _desligaled
  827  storage class 0 
 838  specifier
_desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
pic16_allocDirReg:861 sym: desligaled in codespace
deassignLRs
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: LABEL
deassignLRs
  op: LABEL
deassignLRs
  op: SEND
deassignLRs
  op: SEND
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name ___fslt
  827  storage class 0 
 832  integral
 838  specifier
___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
pic16_allocDirReg:861 sym: __fslt in codespace
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 277 bSize = 35
Bits on { (2) (8) (32) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 8 (0x8)
  2457 - 
  2471 - 
  op: IFX
pic16_allocDirReg BAD, op is NULL
deassignLRs
freeReg
  op: SEND
deassignLRs
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name ___fsadd
  827  storage class 0 
 838  specifier
___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
pic16_allocDirReg:861 sym: __fsadd in codespace
deassignLRs
  op: GOTO
deassignLRs
  op: LABEL
deassignLRs
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name _desligaled
  827  storage class 0 
 838  specifier
_desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
pic16_allocDirReg:861 sym: desligaled in codespace
deassignLRs
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name _desligaled
  827  storage class 0 
 838  specifier
_desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
pic16_allocDirReg:861 sym: desligaled in codespace
deassignLRs
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: LABEL
deassignLRs
  op: LABEL
deassignLRs
  op: SEND
deassignLRs
  op: SEND
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name ___fslt
  827  storage class 0 
 832  integral
 838  specifier
___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
pic16_allocDirReg:861 sym: __fslt in codespace
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 277 bSize = 35
Bits on { (2) (8) (37) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 8 (0x8)
  2457 - 
  2471 - 
  op: IFX
pic16_allocDirReg BAD, op is NULL
deassignLRs
freeReg
  op: SEND
deassignLRs
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name ___fsadd
  827  storage class 0 
 838  specifier
___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
pic16_allocDirReg:861 sym: __fsadd in codespace
deassignLRs
  op: GOTO
deassignLRs
  op: LABEL
deassignLRs
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name _desligaled
  827  storage class 0 
 838  specifier
_desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
pic16_allocDirReg:861 sym: desligaled in codespace
deassignLRs
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name _desligaled
  827  storage class 0 
 838  specifier
_desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
pic16_allocDirReg:861 sym: desligaled in codespace
deassignLRs
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: LABEL
deassignLRs
  op: LABEL
deassignLRs
  op: SEND
deassignLRs
  op: SEND
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name ___fslt
  827  storage class 0 
 832  integral
 838  specifier
___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
pic16_allocDirReg:861 sym: __fslt in codespace
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 277 bSize = 35
Bits on { (2) (8) (42) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 8 (0x8)
  2457 - 
  2471 - 
  op: IFX
pic16_allocDirReg BAD, op is NULL
deassignLRs
freeReg
  op: SEND
deassignLRs
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name ___fsadd
  827  storage class 0 
 838  specifier
___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
pic16_allocDirReg:861 sym: __fsadd in codespace
deassignLRs
  op: GOTO
deassignLRs
  op: LABEL
deassignLRs
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name _desligaled
  827  storage class 0 
 838  specifier
_desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
pic16_allocDirReg:861 sym: desligaled in codespace
deassignLRs
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name _desligaled
  827  storage class 0 
 838  specifier
_desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
pic16_allocDirReg:861 sym: desligaled in codespace
deassignLRs
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: LABEL
deassignLRs
  op: LABEL
deassignLRs
  op: SEND
deassignLRs
  op: SEND
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name ___fslt
  827  storage class 0 
 832  integral
 838  specifier
___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
pic16_allocDirReg:861 sym: __fslt in codespace
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 277 bSize = 35
Bits on { (2) (8) (47) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 8 (0x8)
  2457 - 
  2471 - 
  op: IFX
pic16_allocDirReg BAD, op is NULL
deassignLRs
freeReg
  op: SEND
deassignLRs
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name ___fsadd
  827  storage class 0 
 838  specifier
___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
pic16_allocDirReg:861 sym: __fsadd in codespace
deassignLRs
  op: GOTO
deassignLRs
freeReg
freeReg
freeReg
freeReg
freeReg
freeReg
freeReg
freeReg
  op: LABEL
deassignLRs
  op: ENDFUNCTION
pic16_allocDirReg:815 symbol name _atoa
  827  storage class 0 
 838  specifier
_atoa [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}
pic16_allocDirReg:861 sym: atoa in codespace
deassignLRs
createRegMask
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
ebbs after optimizing:

----------------------------------------------------------------
Basic Block _entry : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 1 : bbnum = 0 1st iCode = 1 , last iCode = 8
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 157 bSize = 20
Bits on { (2) (7) }

local defines bitVector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (7) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :
outDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (7) }

usesDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) }

----------------------------------------------------------------
led.c(l55:s1:k0:d0:s0)	 _entry($34) :
led.c(l55:s2:k1:d0:s0)		proc _atoa [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}
led.c(l55:s3:k2:d0:s0)	iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ] = recv _atoa [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}
led.c(l57:s4:k3:d0:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
led.c(l57:s5:k4:d0:s0)		iTemp1 [k6 lr5:5 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l58:s6:k5:d0:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
led.c(l58:s7:k6:d0:s0)		iTemp2 [k7 lr7:7 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l59:s8:k7:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l59:s10:k8:d1:s0)	 _forcond_16($10) :
led.c(l59:s11:k157:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l59:s12:k158:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l59:s13:k159:d1:s0)		iTemp4 [k10 lr13:14 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l59:s14:k10:d1:s0)		if iTemp4 [k10 lr13:14 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_16($1)
led.c(l59:s15:k160:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l59:s16:k161:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l59:s17:k162:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l59:s18:k17:d1:s0)		 goto _forcond_16($10)
led.c(l59:s19:k18:d0:s0)	 _forbreak_16($1) :
led.c(l60:s20:k19:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l60:s21:k20:d0:s0)		iTemp7 [k13 lr21:21 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l61:s22:k21:d0:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
led.c(l61:s23:k22:d0:s0)		iTemp8 [k14 lr23:23 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l62:s24:k23:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l62:s26:k24:d1:s0)	 _forcond_17($13) :
led.c(l62:s27:k163:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l62:s28:k164:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l62:s29:k165:d1:s0)		iTemp9 [k15 lr29:30 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l62:s30:k26:d1:s0)		if iTemp9 [k15 lr29:30 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_17($2)
led.c(l62:s31:k166:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l62:s32:k167:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l62:s33:k168:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l62:s34:k33:d1:s0)		 goto _forcond_17($13)
led.c(l62:s35:k34:d0:s0)	 _forbreak_17($2) :
led.c(l63:s36:k35:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l63:s37:k36:d0:s0)		iTemp12 [k18 lr37:37 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l64:s38:k37:d0:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
led.c(l64:s39:k38:d0:s0)		iTemp13 [k19 lr39:39 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l65:s40:k39:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l65:s42:k40:d1:s0)	 _forcond_18($16) :
led.c(l65:s43:k169:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l65:s44:k170:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l65:s45:k171:d1:s0)		iTemp14 [k20 lr45:46 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l65:s46:k42:d1:s0)		if iTemp14 [k20 lr45:46 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_18($3)
led.c(l65:s47:k172:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l65:s48:k173:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l65:s49:k174:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l65:s50:k49:d1:s0)		 goto _forcond_18($16)
led.c(l65:s51:k50:d0:s0)	 _forbreak_18($3) :
led.c(l66:s52:k51:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l66:s53:k52:d0:s0)		iTemp17 [k23 lr53:53 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l67:s54:k53:d0:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
led.c(l67:s55:k54:d0:s0)		iTemp18 [k24 lr55:55 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l68:s56:k55:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l68:s58:k56:d1:s0)	 _forcond_19($19) :
led.c(l68:s59:k175:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l68:s60:k176:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l68:s61:k177:d1:s0)		iTemp19 [k25 lr61:62 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l68:s62:k58:d1:s0)		if iTemp19 [k25 lr61:62 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_19($4)
led.c(l68:s63:k178:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l68:s64:k179:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l68:s65:k180:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l68:s66:k65:d1:s0)		 goto _forcond_19($19)
led.c(l68:s67:k66:d0:s0)	 _forbreak_19($4) :
led.c(l69:s68:k67:d0:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
led.c(l69:s69:k68:d0:s0)		iTemp22 [k30 lr69:69 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l70:s70:k69:d0:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
led.c(l70:s71:k70:d0:s0)		iTemp23 [k31 lr71:71 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l71:s72:k71:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l71:s74:k72:d1:s0)	 _forcond_20($22) :
led.c(l71:s75:k181:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l71:s76:k182:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l71:s77:k183:d1:s0)		iTemp24 [k32 lr77:78 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l71:s78:k74:d1:s0)		if iTemp24 [k32 lr77:78 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_20($5)
led.c(l71:s79:k184:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l71:s80:k185:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l71:s81:k186:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l71:s82:k81:d1:s0)		 goto _forcond_20($22)
led.c(l71:s83:k82:d0:s0)	 _forbreak_20($5) :
led.c(l72:s84:k83:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l72:s85:k84:d0:s0)		iTemp27 [k35 lr85:85 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l73:s86:k85:d0:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
led.c(l73:s87:k86:d0:s0)		iTemp28 [k36 lr87:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l74:s88:k87:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l74:s90:k88:d1:s0)	 _forcond_21($25) :
led.c(l74:s91:k187:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l74:s92:k188:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l74:s93:k189:d1:s0)		iTemp29 [k37 lr93:94 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l74:s94:k90:d1:s0)		if iTemp29 [k37 lr93:94 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_21($6)
led.c(l74:s95:k190:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l74:s96:k191:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l74:s97:k192:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l74:s98:k97:d1:s0)		 goto _forcond_21($25)
led.c(l74:s99:k98:d0:s0)	 _forbreak_21($6) :
led.c(l75:s100:k99:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l75:s101:k100:d0:s0)		iTemp32 [k40 lr101:101 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l76:s102:k101:d0:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
led.c(l76:s103:k102:d0:s0)		iTemp33 [k41 lr103:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l77:s104:k103:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l77:s106:k104:d1:s0)	 _forcond_22($28) :
led.c(l77:s107:k193:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l77:s108:k194:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l77:s109:k195:d1:s0)		iTemp34 [k42 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l77:s110:k106:d1:s0)		if iTemp34 [k42 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_22($7)
led.c(l77:s111:k196:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l77:s112:k197:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l77:s113:k198:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l77:s114:k113:d1:s0)		 goto _forcond_22($28)
led.c(l77:s115:k114:d0:s0)	 _forbreak_22($7) :
led.c(l78:s116:k115:d0:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
led.c(l78:s117:k116:d0:s0)		iTemp37 [k45 lr117:117 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l79:s118:k117:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l79:s119:k118:d0:s0)		iTemp38 [k46 lr119:119 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l80:s120:k119:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l80:s122:k120:d1:s0)	 _forcond_23($31) :
led.c(l80:s123:k199:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l80:s124:k200:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l80:s125:k201:d1:s0)		iTemp39 [k47 lr125:126 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l80:s126:k122:d1:s0)		if iTemp39 [k47 lr125:126 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _return($33)
led.c(l80:s127:k202:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l80:s128:k203:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l80:s129:k204:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l80:s130:k129:d1:s0)		 goto _forcond_23($31)
led.c(l80:s131:k131:d0:s0)	 _return($33) :
led.c(l80:s132:k132:d0:s0)		eproc _atoa [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}

----------------------------------------------------------------
Basic Block preHeaderLbl16 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 2 : bbnum = 1 1st iCode = 9 , last iCode = 9
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 157 bSize = 20
Bits on { }

local defines bitVector :
pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (7) }

outDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (7) }

usesDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { }

----------------------------------------------------------------
led.c(l59:s9:k149:d0:s0)	 preHeaderLbl16($68) :
led.c(l59:s10:k8:d1:s0)	 _forcond_16($10) :
led.c(l59:s11:k157:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l59:s12:k158:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l59:s13:k159:d1:s0)		iTemp4 [k10 lr13:14 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l59:s14:k10:d1:s0)		if iTemp4 [k10 lr13:14 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_16($1)
led.c(l59:s15:k160:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l59:s16:k161:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l59:s17:k162:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l59:s18:k17:d1:s0)		 goto _forcond_16($10)
led.c(l59:s19:k18:d0:s0)	 _forbreak_16($1) :
led.c(l60:s20:k19:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l60:s21:k20:d0:s0)		iTemp7 [k13 lr21:21 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l61:s22:k21:d0:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
led.c(l61:s23:k22:d0:s0)		iTemp8 [k14 lr23:23 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l62:s24:k23:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l62:s26:k24:d1:s0)	 _forcond_17($13) :
led.c(l62:s27:k163:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l62:s28:k164:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l62:s29:k165:d1:s0)		iTemp9 [k15 lr29:30 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l62:s30:k26:d1:s0)		if iTemp9 [k15 lr29:30 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_17($2)
led.c(l62:s31:k166:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l62:s32:k167:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l62:s33:k168:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l62:s34:k33:d1:s0)		 goto _forcond_17($13)
led.c(l62:s35:k34:d0:s0)	 _forbreak_17($2) :
led.c(l63:s36:k35:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l63:s37:k36:d0:s0)		iTemp12 [k18 lr37:37 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l64:s38:k37:d0:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
led.c(l64:s39:k38:d0:s0)		iTemp13 [k19 lr39:39 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l65:s40:k39:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l65:s42:k40:d1:s0)	 _forcond_18($16) :
led.c(l65:s43:k169:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l65:s44:k170:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l65:s45:k171:d1:s0)		iTemp14 [k20 lr45:46 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l65:s46:k42:d1:s0)		if iTemp14 [k20 lr45:46 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_18($3)
led.c(l65:s47:k172:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l65:s48:k173:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l65:s49:k174:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l65:s50:k49:d1:s0)		 goto _forcond_18($16)
led.c(l65:s51:k50:d0:s0)	 _forbreak_18($3) :
led.c(l66:s52:k51:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l66:s53:k52:d0:s0)		iTemp17 [k23 lr53:53 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l67:s54:k53:d0:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
led.c(l67:s55:k54:d0:s0)		iTemp18 [k24 lr55:55 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l68:s56:k55:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l68:s58:k56:d1:s0)	 _forcond_19($19) :
led.c(l68:s59:k175:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l68:s60:k176:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l68:s61:k177:d1:s0)		iTemp19 [k25 lr61:62 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l68:s62:k58:d1:s0)		if iTemp19 [k25 lr61:62 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_19($4)
led.c(l68:s63:k178:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l68:s64:k179:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l68:s65:k180:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l68:s66:k65:d1:s0)		 goto _forcond_19($19)
led.c(l68:s67:k66:d0:s0)	 _forbreak_19($4) :
led.c(l69:s68:k67:d0:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
led.c(l69:s69:k68:d0:s0)		iTemp22 [k30 lr69:69 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l70:s70:k69:d0:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
led.c(l70:s71:k70:d0:s0)		iTemp23 [k31 lr71:71 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l71:s72:k71:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l71:s74:k72:d1:s0)	 _forcond_20($22) :
led.c(l71:s75:k181:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l71:s76:k182:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l71:s77:k183:d1:s0)		iTemp24 [k32 lr77:78 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l71:s78:k74:d1:s0)		if iTemp24 [k32 lr77:78 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_20($5)
led.c(l71:s79:k184:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l71:s80:k185:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l71:s81:k186:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l71:s82:k81:d1:s0)		 goto _forcond_20($22)
led.c(l71:s83:k82:d0:s0)	 _forbreak_20($5) :
led.c(l72:s84:k83:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l72:s85:k84:d0:s0)		iTemp27 [k35 lr85:85 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l73:s86:k85:d0:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
led.c(l73:s87:k86:d0:s0)		iTemp28 [k36 lr87:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l74:s88:k87:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l74:s90:k88:d1:s0)	 _forcond_21($25) :
led.c(l74:s91:k187:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l74:s92:k188:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l74:s93:k189:d1:s0)		iTemp29 [k37 lr93:94 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l74:s94:k90:d1:s0)		if iTemp29 [k37 lr93:94 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_21($6)
led.c(l74:s95:k190:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l74:s96:k191:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l74:s97:k192:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l74:s98:k97:d1:s0)		 goto _forcond_21($25)
led.c(l74:s99:k98:d0:s0)	 _forbreak_21($6) :
led.c(l75:s100:k99:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l75:s101:k100:d0:s0)		iTemp32 [k40 lr101:101 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l76:s102:k101:d0:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
led.c(l76:s103:k102:d0:s0)		iTemp33 [k41 lr103:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l77:s104:k103:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l77:s106:k104:d1:s0)	 _forcond_22($28) :
led.c(l77:s107:k193:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l77:s108:k194:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l77:s109:k195:d1:s0)		iTemp34 [k42 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l77:s110:k106:d1:s0)		if iTemp34 [k42 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_22($7)
led.c(l77:s111:k196:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l77:s112:k197:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l77:s113:k198:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l77:s114:k113:d1:s0)		 goto _forcond_22($28)
led.c(l77:s115:k114:d0:s0)	 _forbreak_22($7) :
led.c(l78:s116:k115:d0:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
led.c(l78:s117:k116:d0:s0)		iTemp37 [k45 lr117:117 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l79:s118:k117:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l79:s119:k118:d0:s0)		iTemp38 [k46 lr119:119 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l80:s120:k119:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l80:s122:k120:d1:s0)	 _forcond_23($31) :
led.c(l80:s123:k199:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l80:s124:k200:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l80:s125:k201:d1:s0)		iTemp39 [k47 lr125:126 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l80:s126:k122:d1:s0)		if iTemp39 [k47 lr125:126 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _return($33)
led.c(l80:s127:k202:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l80:s128:k203:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l80:s129:k204:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l80:s130:k129:d1:s0)		 goto _forcond_23($31)
led.c(l80:s131:k131:d0:s0)	 _return($33) :
led.c(l80:s132:k132:d0:s0)		eproc _atoa [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}

----------------------------------------------------------------
Basic Block _forcond_16 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 3 : bbnum = 2 1st iCode = 10 , last iCode = 14
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 157 bSize = 20
Bits on { (9) }

local defines bitVector :bitvector Size = 157 bSize = 20
Bits on { (9) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (7) (9) (15) (16) }

outDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (7) (9) (15) (16) }

usesDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (7) (9) (16) }

----------------------------------------------------------------
led.c(l59:s10:k8:d1:s0)	 _forcond_16($10) :
led.c(l59:s11:k157:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l59:s12:k158:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l59:s13:k159:d1:s0)		iTemp4 [k10 lr13:14 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l59:s14:k10:d1:s0)		if iTemp4 [k10 lr13:14 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_16($1)
led.c(l59:s15:k160:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l59:s16:k161:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l59:s17:k162:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l59:s18:k17:d1:s0)		 goto _forcond_16($10)
led.c(l59:s19:k18:d0:s0)	 _forbreak_16($1) :
led.c(l60:s20:k19:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l60:s21:k20:d0:s0)		iTemp7 [k13 lr21:21 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l61:s22:k21:d0:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
led.c(l61:s23:k22:d0:s0)		iTemp8 [k14 lr23:23 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l62:s24:k23:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l62:s26:k24:d1:s0)	 _forcond_17($13) :
led.c(l62:s27:k163:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l62:s28:k164:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l62:s29:k165:d1:s0)		iTemp9 [k15 lr29:30 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l62:s30:k26:d1:s0)		if iTemp9 [k15 lr29:30 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_17($2)
led.c(l62:s31:k166:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l62:s32:k167:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l62:s33:k168:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l62:s34:k33:d1:s0)		 goto _forcond_17($13)
led.c(l62:s35:k34:d0:s0)	 _forbreak_17($2) :
led.c(l63:s36:k35:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l63:s37:k36:d0:s0)		iTemp12 [k18 lr37:37 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l64:s38:k37:d0:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
led.c(l64:s39:k38:d0:s0)		iTemp13 [k19 lr39:39 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l65:s40:k39:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l65:s42:k40:d1:s0)	 _forcond_18($16) :
led.c(l65:s43:k169:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l65:s44:k170:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l65:s45:k171:d1:s0)		iTemp14 [k20 lr45:46 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l65:s46:k42:d1:s0)		if iTemp14 [k20 lr45:46 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_18($3)
led.c(l65:s47:k172:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l65:s48:k173:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l65:s49:k174:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l65:s50:k49:d1:s0)		 goto _forcond_18($16)
led.c(l65:s51:k50:d0:s0)	 _forbreak_18($3) :
led.c(l66:s52:k51:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l66:s53:k52:d0:s0)		iTemp17 [k23 lr53:53 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l67:s54:k53:d0:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
led.c(l67:s55:k54:d0:s0)		iTemp18 [k24 lr55:55 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l68:s56:k55:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l68:s58:k56:d1:s0)	 _forcond_19($19) :
led.c(l68:s59:k175:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l68:s60:k176:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l68:s61:k177:d1:s0)		iTemp19 [k25 lr61:62 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l68:s62:k58:d1:s0)		if iTemp19 [k25 lr61:62 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_19($4)
led.c(l68:s63:k178:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l68:s64:k179:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l68:s65:k180:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l68:s66:k65:d1:s0)		 goto _forcond_19($19)
led.c(l68:s67:k66:d0:s0)	 _forbreak_19($4) :
led.c(l69:s68:k67:d0:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
led.c(l69:s69:k68:d0:s0)		iTemp22 [k30 lr69:69 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l70:s70:k69:d0:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
led.c(l70:s71:k70:d0:s0)		iTemp23 [k31 lr71:71 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l71:s72:k71:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l71:s74:k72:d1:s0)	 _forcond_20($22) :
led.c(l71:s75:k181:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l71:s76:k182:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l71:s77:k183:d1:s0)		iTemp24 [k32 lr77:78 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l71:s78:k74:d1:s0)		if iTemp24 [k32 lr77:78 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_20($5)
led.c(l71:s79:k184:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l71:s80:k185:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l71:s81:k186:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l71:s82:k81:d1:s0)		 goto _forcond_20($22)
led.c(l71:s83:k82:d0:s0)	 _forbreak_20($5) :
led.c(l72:s84:k83:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l72:s85:k84:d0:s0)		iTemp27 [k35 lr85:85 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l73:s86:k85:d0:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
led.c(l73:s87:k86:d0:s0)		iTemp28 [k36 lr87:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l74:s88:k87:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l74:s90:k88:d1:s0)	 _forcond_21($25) :
led.c(l74:s91:k187:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l74:s92:k188:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l74:s93:k189:d1:s0)		iTemp29 [k37 lr93:94 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l74:s94:k90:d1:s0)		if iTemp29 [k37 lr93:94 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_21($6)
led.c(l74:s95:k190:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l74:s96:k191:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l74:s97:k192:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l74:s98:k97:d1:s0)		 goto _forcond_21($25)
led.c(l74:s99:k98:d0:s0)	 _forbreak_21($6) :
led.c(l75:s100:k99:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l75:s101:k100:d0:s0)		iTemp32 [k40 lr101:101 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l76:s102:k101:d0:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
led.c(l76:s103:k102:d0:s0)		iTemp33 [k41 lr103:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l77:s104:k103:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l77:s106:k104:d1:s0)	 _forcond_22($28) :
led.c(l77:s107:k193:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l77:s108:k194:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l77:s109:k195:d1:s0)		iTemp34 [k42 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l77:s110:k106:d1:s0)		if iTemp34 [k42 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_22($7)
led.c(l77:s111:k196:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l77:s112:k197:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l77:s113:k198:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l77:s114:k113:d1:s0)		 goto _forcond_22($28)
led.c(l77:s115:k114:d0:s0)	 _forbreak_22($7) :
led.c(l78:s116:k115:d0:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
led.c(l78:s117:k116:d0:s0)		iTemp37 [k45 lr117:117 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l79:s118:k117:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l79:s119:k118:d0:s0)		iTemp38 [k46 lr119:119 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l80:s120:k119:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l80:s122:k120:d1:s0)	 _forcond_23($31) :
led.c(l80:s123:k199:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l80:s124:k200:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l80:s125:k201:d1:s0)		iTemp39 [k47 lr125:126 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l80:s126:k122:d1:s0)		if iTemp39 [k47 lr125:126 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _return($33)
led.c(l80:s127:k202:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l80:s128:k203:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l80:s129:k204:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l80:s130:k129:d1:s0)		 goto _forcond_23($31)
led.c(l80:s131:k131:d0:s0)	 _return($33) :
led.c(l80:s132:k132:d0:s0)		eproc _atoa [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}

----------------------------------------------------------------
Basic Block _eBBlock16 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 4 : bbnum = 3 1st iCode = 15 , last iCode = 18
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 157 bSize = 20
Bits on { (15) (16) }

local defines bitVector :bitvector Size = 157 bSize = 20
Bits on { (15) (16) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (7) (9) (15) (16) }

outDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (16) }

usesDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (7) (15) (16) }

----------------------------------------------------------------
led.c(l59:s15:k160:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l59:s16:k161:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l59:s17:k162:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l59:s18:k17:d1:s0)		 goto _forcond_16($10)
led.c(l59:s19:k18:d0:s0)	 _forbreak_16($1) :
led.c(l60:s20:k19:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l60:s21:k20:d0:s0)		iTemp7 [k13 lr21:21 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l61:s22:k21:d0:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
led.c(l61:s23:k22:d0:s0)		iTemp8 [k14 lr23:23 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l62:s24:k23:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l62:s26:k24:d1:s0)	 _forcond_17($13) :
led.c(l62:s27:k163:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l62:s28:k164:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l62:s29:k165:d1:s0)		iTemp9 [k15 lr29:30 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l62:s30:k26:d1:s0)		if iTemp9 [k15 lr29:30 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_17($2)
led.c(l62:s31:k166:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l62:s32:k167:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l62:s33:k168:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l62:s34:k33:d1:s0)		 goto _forcond_17($13)
led.c(l62:s35:k34:d0:s0)	 _forbreak_17($2) :
led.c(l63:s36:k35:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l63:s37:k36:d0:s0)		iTemp12 [k18 lr37:37 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l64:s38:k37:d0:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
led.c(l64:s39:k38:d0:s0)		iTemp13 [k19 lr39:39 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l65:s40:k39:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l65:s42:k40:d1:s0)	 _forcond_18($16) :
led.c(l65:s43:k169:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l65:s44:k170:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l65:s45:k171:d1:s0)		iTemp14 [k20 lr45:46 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l65:s46:k42:d1:s0)		if iTemp14 [k20 lr45:46 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_18($3)
led.c(l65:s47:k172:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l65:s48:k173:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l65:s49:k174:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l65:s50:k49:d1:s0)		 goto _forcond_18($16)
led.c(l65:s51:k50:d0:s0)	 _forbreak_18($3) :
led.c(l66:s52:k51:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l66:s53:k52:d0:s0)		iTemp17 [k23 lr53:53 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l67:s54:k53:d0:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
led.c(l67:s55:k54:d0:s0)		iTemp18 [k24 lr55:55 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l68:s56:k55:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l68:s58:k56:d1:s0)	 _forcond_19($19) :
led.c(l68:s59:k175:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l68:s60:k176:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l68:s61:k177:d1:s0)		iTemp19 [k25 lr61:62 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l68:s62:k58:d1:s0)		if iTemp19 [k25 lr61:62 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_19($4)
led.c(l68:s63:k178:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l68:s64:k179:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l68:s65:k180:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l68:s66:k65:d1:s0)		 goto _forcond_19($19)
led.c(l68:s67:k66:d0:s0)	 _forbreak_19($4) :
led.c(l69:s68:k67:d0:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
led.c(l69:s69:k68:d0:s0)		iTemp22 [k30 lr69:69 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l70:s70:k69:d0:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
led.c(l70:s71:k70:d0:s0)		iTemp23 [k31 lr71:71 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l71:s72:k71:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l71:s74:k72:d1:s0)	 _forcond_20($22) :
led.c(l71:s75:k181:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l71:s76:k182:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l71:s77:k183:d1:s0)		iTemp24 [k32 lr77:78 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l71:s78:k74:d1:s0)		if iTemp24 [k32 lr77:78 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_20($5)
led.c(l71:s79:k184:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l71:s80:k185:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l71:s81:k186:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l71:s82:k81:d1:s0)		 goto _forcond_20($22)
led.c(l71:s83:k82:d0:s0)	 _forbreak_20($5) :
led.c(l72:s84:k83:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l72:s85:k84:d0:s0)		iTemp27 [k35 lr85:85 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l73:s86:k85:d0:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
led.c(l73:s87:k86:d0:s0)		iTemp28 [k36 lr87:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l74:s88:k87:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l74:s90:k88:d1:s0)	 _forcond_21($25) :
led.c(l74:s91:k187:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l74:s92:k188:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l74:s93:k189:d1:s0)		iTemp29 [k37 lr93:94 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l74:s94:k90:d1:s0)		if iTemp29 [k37 lr93:94 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_21($6)
led.c(l74:s95:k190:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l74:s96:k191:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l74:s97:k192:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l74:s98:k97:d1:s0)		 goto _forcond_21($25)
led.c(l74:s99:k98:d0:s0)	 _forbreak_21($6) :
led.c(l75:s100:k99:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l75:s101:k100:d0:s0)		iTemp32 [k40 lr101:101 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l76:s102:k101:d0:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
led.c(l76:s103:k102:d0:s0)		iTemp33 [k41 lr103:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l77:s104:k103:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l77:s106:k104:d1:s0)	 _forcond_22($28) :
led.c(l77:s107:k193:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l77:s108:k194:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l77:s109:k195:d1:s0)		iTemp34 [k42 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l77:s110:k106:d1:s0)		if iTemp34 [k42 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_22($7)
led.c(l77:s111:k196:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l77:s112:k197:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l77:s113:k198:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l77:s114:k113:d1:s0)		 goto _forcond_22($28)
led.c(l77:s115:k114:d0:s0)	 _forbreak_22($7) :
led.c(l78:s116:k115:d0:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
led.c(l78:s117:k116:d0:s0)		iTemp37 [k45 lr117:117 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l79:s118:k117:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l79:s119:k118:d0:s0)		iTemp38 [k46 lr119:119 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l80:s120:k119:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l80:s122:k120:d1:s0)	 _forcond_23($31) :
led.c(l80:s123:k199:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l80:s124:k200:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l80:s125:k201:d1:s0)		iTemp39 [k47 lr125:126 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l80:s126:k122:d1:s0)		if iTemp39 [k47 lr125:126 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _return($33)
led.c(l80:s127:k202:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l80:s128:k203:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l80:s129:k204:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l80:s130:k129:d1:s0)		 goto _forcond_23($31)
led.c(l80:s131:k131:d0:s0)	 _return($33) :
led.c(l80:s132:k132:d0:s0)		eproc _atoa [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}

----------------------------------------------------------------
Basic Block _forbreak_16 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 5 : bbnum = 4 1st iCode = 19 , last iCode = 24
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 157 bSize = 20
Bits on { (23) }

local defines bitVector :bitvector Size = 157 bSize = 20
Bits on { (20) (22) (23) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (7) (9) (15) (16) }

outDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (23) }

usesDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (20) (22) }

----------------------------------------------------------------
led.c(l59:s19:k18:d0:s0)	 _forbreak_16($1) :
led.c(l60:s20:k19:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l60:s21:k20:d0:s0)		iTemp7 [k13 lr21:21 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l61:s22:k21:d0:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
led.c(l61:s23:k22:d0:s0)		iTemp8 [k14 lr23:23 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l62:s24:k23:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l62:s26:k24:d1:s0)	 _forcond_17($13) :
led.c(l62:s27:k163:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l62:s28:k164:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l62:s29:k165:d1:s0)		iTemp9 [k15 lr29:30 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l62:s30:k26:d1:s0)		if iTemp9 [k15 lr29:30 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_17($2)
led.c(l62:s31:k166:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l62:s32:k167:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l62:s33:k168:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l62:s34:k33:d1:s0)		 goto _forcond_17($13)
led.c(l62:s35:k34:d0:s0)	 _forbreak_17($2) :
led.c(l63:s36:k35:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l63:s37:k36:d0:s0)		iTemp12 [k18 lr37:37 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l64:s38:k37:d0:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
led.c(l64:s39:k38:d0:s0)		iTemp13 [k19 lr39:39 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l65:s40:k39:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l65:s42:k40:d1:s0)	 _forcond_18($16) :
led.c(l65:s43:k169:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l65:s44:k170:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l65:s45:k171:d1:s0)		iTemp14 [k20 lr45:46 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l65:s46:k42:d1:s0)		if iTemp14 [k20 lr45:46 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_18($3)
led.c(l65:s47:k172:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l65:s48:k173:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l65:s49:k174:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l65:s50:k49:d1:s0)		 goto _forcond_18($16)
led.c(l65:s51:k50:d0:s0)	 _forbreak_18($3) :
led.c(l66:s52:k51:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l66:s53:k52:d0:s0)		iTemp17 [k23 lr53:53 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l67:s54:k53:d0:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
led.c(l67:s55:k54:d0:s0)		iTemp18 [k24 lr55:55 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l68:s56:k55:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l68:s58:k56:d1:s0)	 _forcond_19($19) :
led.c(l68:s59:k175:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l68:s60:k176:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l68:s61:k177:d1:s0)		iTemp19 [k25 lr61:62 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l68:s62:k58:d1:s0)		if iTemp19 [k25 lr61:62 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_19($4)
led.c(l68:s63:k178:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l68:s64:k179:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l68:s65:k180:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l68:s66:k65:d1:s0)		 goto _forcond_19($19)
led.c(l68:s67:k66:d0:s0)	 _forbreak_19($4) :
led.c(l69:s68:k67:d0:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
led.c(l69:s69:k68:d0:s0)		iTemp22 [k30 lr69:69 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l70:s70:k69:d0:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
led.c(l70:s71:k70:d0:s0)		iTemp23 [k31 lr71:71 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l71:s72:k71:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l71:s74:k72:d1:s0)	 _forcond_20($22) :
led.c(l71:s75:k181:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l71:s76:k182:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l71:s77:k183:d1:s0)		iTemp24 [k32 lr77:78 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l71:s78:k74:d1:s0)		if iTemp24 [k32 lr77:78 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_20($5)
led.c(l71:s79:k184:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l71:s80:k185:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l71:s81:k186:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l71:s82:k81:d1:s0)		 goto _forcond_20($22)
led.c(l71:s83:k82:d0:s0)	 _forbreak_20($5) :
led.c(l72:s84:k83:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l72:s85:k84:d0:s0)		iTemp27 [k35 lr85:85 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l73:s86:k85:d0:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
led.c(l73:s87:k86:d0:s0)		iTemp28 [k36 lr87:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l74:s88:k87:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l74:s90:k88:d1:s0)	 _forcond_21($25) :
led.c(l74:s91:k187:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l74:s92:k188:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l74:s93:k189:d1:s0)		iTemp29 [k37 lr93:94 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l74:s94:k90:d1:s0)		if iTemp29 [k37 lr93:94 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_21($6)
led.c(l74:s95:k190:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l74:s96:k191:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l74:s97:k192:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l74:s98:k97:d1:s0)		 goto _forcond_21($25)
led.c(l74:s99:k98:d0:s0)	 _forbreak_21($6) :
led.c(l75:s100:k99:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l75:s101:k100:d0:s0)		iTemp32 [k40 lr101:101 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l76:s102:k101:d0:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
led.c(l76:s103:k102:d0:s0)		iTemp33 [k41 lr103:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l77:s104:k103:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l77:s106:k104:d1:s0)	 _forcond_22($28) :
led.c(l77:s107:k193:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l77:s108:k194:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l77:s109:k195:d1:s0)		iTemp34 [k42 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l77:s110:k106:d1:s0)		if iTemp34 [k42 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_22($7)
led.c(l77:s111:k196:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l77:s112:k197:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l77:s113:k198:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l77:s114:k113:d1:s0)		 goto _forcond_22($28)
led.c(l77:s115:k114:d0:s0)	 _forbreak_22($7) :
led.c(l78:s116:k115:d0:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
led.c(l78:s117:k116:d0:s0)		iTemp37 [k45 lr117:117 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l79:s118:k117:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l79:s119:k118:d0:s0)		iTemp38 [k46 lr119:119 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l80:s120:k119:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l80:s122:k120:d1:s0)	 _forcond_23($31) :
led.c(l80:s123:k199:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l80:s124:k200:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l80:s125:k201:d1:s0)		iTemp39 [k47 lr125:126 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l80:s126:k122:d1:s0)		if iTemp39 [k47 lr125:126 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _return($33)
led.c(l80:s127:k202:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l80:s128:k203:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l80:s129:k204:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l80:s130:k129:d1:s0)		 goto _forcond_23($31)
led.c(l80:s131:k131:d0:s0)	 _return($33) :
led.c(l80:s132:k132:d0:s0)		eproc _atoa [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}

----------------------------------------------------------------
Basic Block preHeaderLbl17 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 6 : bbnum = 5 1st iCode = 25 , last iCode = 25
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 157 bSize = 20
Bits on { }

local defines bitVector :
pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (23) }

outDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (23) }

usesDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { }

----------------------------------------------------------------
led.c(l62:s25:k150:d0:s0)	 preHeaderLbl17($70) :
led.c(l62:s26:k24:d1:s0)	 _forcond_17($13) :
led.c(l62:s27:k163:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l62:s28:k164:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l62:s29:k165:d1:s0)		iTemp9 [k15 lr29:30 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l62:s30:k26:d1:s0)		if iTemp9 [k15 lr29:30 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_17($2)
led.c(l62:s31:k166:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l62:s32:k167:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l62:s33:k168:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l62:s34:k33:d1:s0)		 goto _forcond_17($13)
led.c(l62:s35:k34:d0:s0)	 _forbreak_17($2) :
led.c(l63:s36:k35:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l63:s37:k36:d0:s0)		iTemp12 [k18 lr37:37 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l64:s38:k37:d0:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
led.c(l64:s39:k38:d0:s0)		iTemp13 [k19 lr39:39 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l65:s40:k39:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l65:s42:k40:d1:s0)	 _forcond_18($16) :
led.c(l65:s43:k169:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l65:s44:k170:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l65:s45:k171:d1:s0)		iTemp14 [k20 lr45:46 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l65:s46:k42:d1:s0)		if iTemp14 [k20 lr45:46 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_18($3)
led.c(l65:s47:k172:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l65:s48:k173:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l65:s49:k174:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l65:s50:k49:d1:s0)		 goto _forcond_18($16)
led.c(l65:s51:k50:d0:s0)	 _forbreak_18($3) :
led.c(l66:s52:k51:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l66:s53:k52:d0:s0)		iTemp17 [k23 lr53:53 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l67:s54:k53:d0:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
led.c(l67:s55:k54:d0:s0)		iTemp18 [k24 lr55:55 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l68:s56:k55:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l68:s58:k56:d1:s0)	 _forcond_19($19) :
led.c(l68:s59:k175:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l68:s60:k176:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l68:s61:k177:d1:s0)		iTemp19 [k25 lr61:62 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l68:s62:k58:d1:s0)		if iTemp19 [k25 lr61:62 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_19($4)
led.c(l68:s63:k178:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l68:s64:k179:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l68:s65:k180:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l68:s66:k65:d1:s0)		 goto _forcond_19($19)
led.c(l68:s67:k66:d0:s0)	 _forbreak_19($4) :
led.c(l69:s68:k67:d0:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
led.c(l69:s69:k68:d0:s0)		iTemp22 [k30 lr69:69 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l70:s70:k69:d0:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
led.c(l70:s71:k70:d0:s0)		iTemp23 [k31 lr71:71 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l71:s72:k71:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l71:s74:k72:d1:s0)	 _forcond_20($22) :
led.c(l71:s75:k181:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l71:s76:k182:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l71:s77:k183:d1:s0)		iTemp24 [k32 lr77:78 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l71:s78:k74:d1:s0)		if iTemp24 [k32 lr77:78 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_20($5)
led.c(l71:s79:k184:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l71:s80:k185:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l71:s81:k186:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l71:s82:k81:d1:s0)		 goto _forcond_20($22)
led.c(l71:s83:k82:d0:s0)	 _forbreak_20($5) :
led.c(l72:s84:k83:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l72:s85:k84:d0:s0)		iTemp27 [k35 lr85:85 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l73:s86:k85:d0:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
led.c(l73:s87:k86:d0:s0)		iTemp28 [k36 lr87:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l74:s88:k87:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l74:s90:k88:d1:s0)	 _forcond_21($25) :
led.c(l74:s91:k187:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l74:s92:k188:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l74:s93:k189:d1:s0)		iTemp29 [k37 lr93:94 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l74:s94:k90:d1:s0)		if iTemp29 [k37 lr93:94 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_21($6)
led.c(l74:s95:k190:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l74:s96:k191:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l74:s97:k192:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l74:s98:k97:d1:s0)		 goto _forcond_21($25)
led.c(l74:s99:k98:d0:s0)	 _forbreak_21($6) :
led.c(l75:s100:k99:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l75:s101:k100:d0:s0)		iTemp32 [k40 lr101:101 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l76:s102:k101:d0:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
led.c(l76:s103:k102:d0:s0)		iTemp33 [k41 lr103:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l77:s104:k103:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l77:s106:k104:d1:s0)	 _forcond_22($28) :
led.c(l77:s107:k193:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l77:s108:k194:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l77:s109:k195:d1:s0)		iTemp34 [k42 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l77:s110:k106:d1:s0)		if iTemp34 [k42 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_22($7)
led.c(l77:s111:k196:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l77:s112:k197:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l77:s113:k198:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l77:s114:k113:d1:s0)		 goto _forcond_22($28)
led.c(l77:s115:k114:d0:s0)	 _forbreak_22($7) :
led.c(l78:s116:k115:d0:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
led.c(l78:s117:k116:d0:s0)		iTemp37 [k45 lr117:117 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l79:s118:k117:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l79:s119:k118:d0:s0)		iTemp38 [k46 lr119:119 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l80:s120:k119:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l80:s122:k120:d1:s0)	 _forcond_23($31) :
led.c(l80:s123:k199:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l80:s124:k200:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l80:s125:k201:d1:s0)		iTemp39 [k47 lr125:126 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l80:s126:k122:d1:s0)		if iTemp39 [k47 lr125:126 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _return($33)
led.c(l80:s127:k202:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l80:s128:k203:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l80:s129:k204:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l80:s130:k129:d1:s0)		 goto _forcond_23($31)
led.c(l80:s131:k131:d0:s0)	 _return($33) :
led.c(l80:s132:k132:d0:s0)		eproc _atoa [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}

----------------------------------------------------------------
Basic Block _forcond_17 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 7 : bbnum = 6 1st iCode = 26 , last iCode = 30
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 157 bSize = 20
Bits on { (25) }

local defines bitVector :bitvector Size = 157 bSize = 20
Bits on { (25) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (23) (25) (31) (32) }

outDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (23) (25) (31) (32) }

usesDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (23) (25) (32) }

----------------------------------------------------------------
led.c(l62:s26:k24:d1:s0)	 _forcond_17($13) :
led.c(l62:s27:k163:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l62:s28:k164:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l62:s29:k165:d1:s0)		iTemp9 [k15 lr29:30 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l62:s30:k26:d1:s0)		if iTemp9 [k15 lr29:30 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_17($2)
led.c(l62:s31:k166:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l62:s32:k167:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l62:s33:k168:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l62:s34:k33:d1:s0)		 goto _forcond_17($13)
led.c(l62:s35:k34:d0:s0)	 _forbreak_17($2) :
led.c(l63:s36:k35:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l63:s37:k36:d0:s0)		iTemp12 [k18 lr37:37 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l64:s38:k37:d0:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
led.c(l64:s39:k38:d0:s0)		iTemp13 [k19 lr39:39 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l65:s40:k39:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l65:s42:k40:d1:s0)	 _forcond_18($16) :
led.c(l65:s43:k169:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l65:s44:k170:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l65:s45:k171:d1:s0)		iTemp14 [k20 lr45:46 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l65:s46:k42:d1:s0)		if iTemp14 [k20 lr45:46 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_18($3)
led.c(l65:s47:k172:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l65:s48:k173:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l65:s49:k174:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l65:s50:k49:d1:s0)		 goto _forcond_18($16)
led.c(l65:s51:k50:d0:s0)	 _forbreak_18($3) :
led.c(l66:s52:k51:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l66:s53:k52:d0:s0)		iTemp17 [k23 lr53:53 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l67:s54:k53:d0:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
led.c(l67:s55:k54:d0:s0)		iTemp18 [k24 lr55:55 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l68:s56:k55:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l68:s58:k56:d1:s0)	 _forcond_19($19) :
led.c(l68:s59:k175:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l68:s60:k176:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l68:s61:k177:d1:s0)		iTemp19 [k25 lr61:62 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l68:s62:k58:d1:s0)		if iTemp19 [k25 lr61:62 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_19($4)
led.c(l68:s63:k178:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l68:s64:k179:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l68:s65:k180:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l68:s66:k65:d1:s0)		 goto _forcond_19($19)
led.c(l68:s67:k66:d0:s0)	 _forbreak_19($4) :
led.c(l69:s68:k67:d0:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
led.c(l69:s69:k68:d0:s0)		iTemp22 [k30 lr69:69 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l70:s70:k69:d0:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
led.c(l70:s71:k70:d0:s0)		iTemp23 [k31 lr71:71 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l71:s72:k71:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l71:s74:k72:d1:s0)	 _forcond_20($22) :
led.c(l71:s75:k181:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l71:s76:k182:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l71:s77:k183:d1:s0)		iTemp24 [k32 lr77:78 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l71:s78:k74:d1:s0)		if iTemp24 [k32 lr77:78 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_20($5)
led.c(l71:s79:k184:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l71:s80:k185:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l71:s81:k186:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l71:s82:k81:d1:s0)		 goto _forcond_20($22)
led.c(l71:s83:k82:d0:s0)	 _forbreak_20($5) :
led.c(l72:s84:k83:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l72:s85:k84:d0:s0)		iTemp27 [k35 lr85:85 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l73:s86:k85:d0:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
led.c(l73:s87:k86:d0:s0)		iTemp28 [k36 lr87:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l74:s88:k87:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l74:s90:k88:d1:s0)	 _forcond_21($25) :
led.c(l74:s91:k187:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l74:s92:k188:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l74:s93:k189:d1:s0)		iTemp29 [k37 lr93:94 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l74:s94:k90:d1:s0)		if iTemp29 [k37 lr93:94 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_21($6)
led.c(l74:s95:k190:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l74:s96:k191:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l74:s97:k192:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l74:s98:k97:d1:s0)		 goto _forcond_21($25)
led.c(l74:s99:k98:d0:s0)	 _forbreak_21($6) :
led.c(l75:s100:k99:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l75:s101:k100:d0:s0)		iTemp32 [k40 lr101:101 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l76:s102:k101:d0:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
led.c(l76:s103:k102:d0:s0)		iTemp33 [k41 lr103:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l77:s104:k103:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l77:s106:k104:d1:s0)	 _forcond_22($28) :
led.c(l77:s107:k193:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l77:s108:k194:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l77:s109:k195:d1:s0)		iTemp34 [k42 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l77:s110:k106:d1:s0)		if iTemp34 [k42 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_22($7)
led.c(l77:s111:k196:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l77:s112:k197:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l77:s113:k198:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l77:s114:k113:d1:s0)		 goto _forcond_22($28)
led.c(l77:s115:k114:d0:s0)	 _forbreak_22($7) :
led.c(l78:s116:k115:d0:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
led.c(l78:s117:k116:d0:s0)		iTemp37 [k45 lr117:117 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l79:s118:k117:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l79:s119:k118:d0:s0)		iTemp38 [k46 lr119:119 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l80:s120:k119:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l80:s122:k120:d1:s0)	 _forcond_23($31) :
led.c(l80:s123:k199:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l80:s124:k200:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l80:s125:k201:d1:s0)		iTemp39 [k47 lr125:126 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l80:s126:k122:d1:s0)		if iTemp39 [k47 lr125:126 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _return($33)
led.c(l80:s127:k202:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l80:s128:k203:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l80:s129:k204:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l80:s130:k129:d1:s0)		 goto _forcond_23($31)
led.c(l80:s131:k131:d0:s0)	 _return($33) :
led.c(l80:s132:k132:d0:s0)		eproc _atoa [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}

----------------------------------------------------------------
Basic Block _eBBlock17 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 8 : bbnum = 7 1st iCode = 31 , last iCode = 34
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 157 bSize = 20
Bits on { (31) (32) }

local defines bitVector :bitvector Size = 157 bSize = 20
Bits on { (31) (32) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (23) (25) (31) (32) }

outDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (25) (31) (32) }

usesDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (23) (31) (32) }

----------------------------------------------------------------
led.c(l62:s31:k166:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l62:s32:k167:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l62:s33:k168:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l62:s34:k33:d1:s0)		 goto _forcond_17($13)
led.c(l62:s35:k34:d0:s0)	 _forbreak_17($2) :
led.c(l63:s36:k35:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l63:s37:k36:d0:s0)		iTemp12 [k18 lr37:37 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l64:s38:k37:d0:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
led.c(l64:s39:k38:d0:s0)		iTemp13 [k19 lr39:39 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l65:s40:k39:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l65:s42:k40:d1:s0)	 _forcond_18($16) :
led.c(l65:s43:k169:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l65:s44:k170:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l65:s45:k171:d1:s0)		iTemp14 [k20 lr45:46 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l65:s46:k42:d1:s0)		if iTemp14 [k20 lr45:46 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_18($3)
led.c(l65:s47:k172:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l65:s48:k173:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l65:s49:k174:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l65:s50:k49:d1:s0)		 goto _forcond_18($16)
led.c(l65:s51:k50:d0:s0)	 _forbreak_18($3) :
led.c(l66:s52:k51:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l66:s53:k52:d0:s0)		iTemp17 [k23 lr53:53 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l67:s54:k53:d0:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
led.c(l67:s55:k54:d0:s0)		iTemp18 [k24 lr55:55 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l68:s56:k55:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l68:s58:k56:d1:s0)	 _forcond_19($19) :
led.c(l68:s59:k175:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l68:s60:k176:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l68:s61:k177:d1:s0)		iTemp19 [k25 lr61:62 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l68:s62:k58:d1:s0)		if iTemp19 [k25 lr61:62 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_19($4)
led.c(l68:s63:k178:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l68:s64:k179:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l68:s65:k180:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l68:s66:k65:d1:s0)		 goto _forcond_19($19)
led.c(l68:s67:k66:d0:s0)	 _forbreak_19($4) :
led.c(l69:s68:k67:d0:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
led.c(l69:s69:k68:d0:s0)		iTemp22 [k30 lr69:69 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l70:s70:k69:d0:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
led.c(l70:s71:k70:d0:s0)		iTemp23 [k31 lr71:71 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l71:s72:k71:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l71:s74:k72:d1:s0)	 _forcond_20($22) :
led.c(l71:s75:k181:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l71:s76:k182:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l71:s77:k183:d1:s0)		iTemp24 [k32 lr77:78 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l71:s78:k74:d1:s0)		if iTemp24 [k32 lr77:78 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_20($5)
led.c(l71:s79:k184:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l71:s80:k185:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l71:s81:k186:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l71:s82:k81:d1:s0)		 goto _forcond_20($22)
led.c(l71:s83:k82:d0:s0)	 _forbreak_20($5) :
led.c(l72:s84:k83:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l72:s85:k84:d0:s0)		iTemp27 [k35 lr85:85 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l73:s86:k85:d0:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
led.c(l73:s87:k86:d0:s0)		iTemp28 [k36 lr87:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l74:s88:k87:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l74:s90:k88:d1:s0)	 _forcond_21($25) :
led.c(l74:s91:k187:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l74:s92:k188:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l74:s93:k189:d1:s0)		iTemp29 [k37 lr93:94 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l74:s94:k90:d1:s0)		if iTemp29 [k37 lr93:94 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_21($6)
led.c(l74:s95:k190:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l74:s96:k191:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l74:s97:k192:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l74:s98:k97:d1:s0)		 goto _forcond_21($25)
led.c(l74:s99:k98:d0:s0)	 _forbreak_21($6) :
led.c(l75:s100:k99:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l75:s101:k100:d0:s0)		iTemp32 [k40 lr101:101 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l76:s102:k101:d0:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
led.c(l76:s103:k102:d0:s0)		iTemp33 [k41 lr103:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l77:s104:k103:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l77:s106:k104:d1:s0)	 _forcond_22($28) :
led.c(l77:s107:k193:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l77:s108:k194:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l77:s109:k195:d1:s0)		iTemp34 [k42 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l77:s110:k106:d1:s0)		if iTemp34 [k42 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_22($7)
led.c(l77:s111:k196:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l77:s112:k197:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l77:s113:k198:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l77:s114:k113:d1:s0)		 goto _forcond_22($28)
led.c(l77:s115:k114:d0:s0)	 _forbreak_22($7) :
led.c(l78:s116:k115:d0:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
led.c(l78:s117:k116:d0:s0)		iTemp37 [k45 lr117:117 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l79:s118:k117:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l79:s119:k118:d0:s0)		iTemp38 [k46 lr119:119 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l80:s120:k119:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l80:s122:k120:d1:s0)	 _forcond_23($31) :
led.c(l80:s123:k199:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l80:s124:k200:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l80:s125:k201:d1:s0)		iTemp39 [k47 lr125:126 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l80:s126:k122:d1:s0)		if iTemp39 [k47 lr125:126 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _return($33)
led.c(l80:s127:k202:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l80:s128:k203:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l80:s129:k204:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l80:s130:k129:d1:s0)		 goto _forcond_23($31)
led.c(l80:s131:k131:d0:s0)	 _return($33) :
led.c(l80:s132:k132:d0:s0)		eproc _atoa [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}

----------------------------------------------------------------
Basic Block _forbreak_17 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 9 : bbnum = 8 1st iCode = 35 , last iCode = 40
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 157 bSize = 20
Bits on { (39) }

local defines bitVector :bitvector Size = 157 bSize = 20
Bits on { (36) (38) (39) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (23) (25) (31) (32) }

outDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (25) (31) (36) (38) (39) }

usesDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (36) (38) }

----------------------------------------------------------------
led.c(l62:s35:k34:d0:s0)	 _forbreak_17($2) :
led.c(l63:s36:k35:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l63:s37:k36:d0:s0)		iTemp12 [k18 lr37:37 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l64:s38:k37:d0:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
led.c(l64:s39:k38:d0:s0)		iTemp13 [k19 lr39:39 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l65:s40:k39:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l65:s42:k40:d1:s0)	 _forcond_18($16) :
led.c(l65:s43:k169:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l65:s44:k170:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l65:s45:k171:d1:s0)		iTemp14 [k20 lr45:46 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l65:s46:k42:d1:s0)		if iTemp14 [k20 lr45:46 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_18($3)
led.c(l65:s47:k172:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l65:s48:k173:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l65:s49:k174:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l65:s50:k49:d1:s0)		 goto _forcond_18($16)
led.c(l65:s51:k50:d0:s0)	 _forbreak_18($3) :
led.c(l66:s52:k51:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l66:s53:k52:d0:s0)		iTemp17 [k23 lr53:53 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l67:s54:k53:d0:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
led.c(l67:s55:k54:d0:s0)		iTemp18 [k24 lr55:55 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l68:s56:k55:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l68:s58:k56:d1:s0)	 _forcond_19($19) :
led.c(l68:s59:k175:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l68:s60:k176:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l68:s61:k177:d1:s0)		iTemp19 [k25 lr61:62 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l68:s62:k58:d1:s0)		if iTemp19 [k25 lr61:62 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_19($4)
led.c(l68:s63:k178:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l68:s64:k179:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l68:s65:k180:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l68:s66:k65:d1:s0)		 goto _forcond_19($19)
led.c(l68:s67:k66:d0:s0)	 _forbreak_19($4) :
led.c(l69:s68:k67:d0:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
led.c(l69:s69:k68:d0:s0)		iTemp22 [k30 lr69:69 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l70:s70:k69:d0:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
led.c(l70:s71:k70:d0:s0)		iTemp23 [k31 lr71:71 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l71:s72:k71:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l71:s74:k72:d1:s0)	 _forcond_20($22) :
led.c(l71:s75:k181:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l71:s76:k182:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l71:s77:k183:d1:s0)		iTemp24 [k32 lr77:78 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l71:s78:k74:d1:s0)		if iTemp24 [k32 lr77:78 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_20($5)
led.c(l71:s79:k184:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l71:s80:k185:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l71:s81:k186:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l71:s82:k81:d1:s0)		 goto _forcond_20($22)
led.c(l71:s83:k82:d0:s0)	 _forbreak_20($5) :
led.c(l72:s84:k83:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l72:s85:k84:d0:s0)		iTemp27 [k35 lr85:85 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l73:s86:k85:d0:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
led.c(l73:s87:k86:d0:s0)		iTemp28 [k36 lr87:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l74:s88:k87:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l74:s90:k88:d1:s0)	 _forcond_21($25) :
led.c(l74:s91:k187:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l74:s92:k188:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l74:s93:k189:d1:s0)		iTemp29 [k37 lr93:94 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l74:s94:k90:d1:s0)		if iTemp29 [k37 lr93:94 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_21($6)
led.c(l74:s95:k190:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l74:s96:k191:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l74:s97:k192:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l74:s98:k97:d1:s0)		 goto _forcond_21($25)
led.c(l74:s99:k98:d0:s0)	 _forbreak_21($6) :
led.c(l75:s100:k99:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l75:s101:k100:d0:s0)		iTemp32 [k40 lr101:101 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l76:s102:k101:d0:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
led.c(l76:s103:k102:d0:s0)		iTemp33 [k41 lr103:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l77:s104:k103:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l77:s106:k104:d1:s0)	 _forcond_22($28) :
led.c(l77:s107:k193:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l77:s108:k194:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l77:s109:k195:d1:s0)		iTemp34 [k42 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l77:s110:k106:d1:s0)		if iTemp34 [k42 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_22($7)
led.c(l77:s111:k196:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l77:s112:k197:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l77:s113:k198:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l77:s114:k113:d1:s0)		 goto _forcond_22($28)
led.c(l77:s115:k114:d0:s0)	 _forbreak_22($7) :
led.c(l78:s116:k115:d0:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
led.c(l78:s117:k116:d0:s0)		iTemp37 [k45 lr117:117 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l79:s118:k117:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l79:s119:k118:d0:s0)		iTemp38 [k46 lr119:119 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l80:s120:k119:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l80:s122:k120:d1:s0)	 _forcond_23($31) :
led.c(l80:s123:k199:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l80:s124:k200:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l80:s125:k201:d1:s0)		iTemp39 [k47 lr125:126 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l80:s126:k122:d1:s0)		if iTemp39 [k47 lr125:126 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _return($33)
led.c(l80:s127:k202:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l80:s128:k203:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l80:s129:k204:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l80:s130:k129:d1:s0)		 goto _forcond_23($31)
led.c(l80:s131:k131:d0:s0)	 _return($33) :
led.c(l80:s132:k132:d0:s0)		eproc _atoa [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}

----------------------------------------------------------------
Basic Block preHeaderLbl18 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 10 : bbnum = 9 1st iCode = 41 , last iCode = 41
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 157 bSize = 20
Bits on { }

local defines bitVector :
pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (25) (31) (36) (38) (39) }

outDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (25) (31) (36) (38) (39) }

usesDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { }

----------------------------------------------------------------
led.c(l65:s41:k151:d0:s0)	 preHeaderLbl18($72) :
led.c(l65:s42:k40:d1:s0)	 _forcond_18($16) :
led.c(l65:s43:k169:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l65:s44:k170:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l65:s45:k171:d1:s0)		iTemp14 [k20 lr45:46 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l65:s46:k42:d1:s0)		if iTemp14 [k20 lr45:46 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_18($3)
led.c(l65:s47:k172:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l65:s48:k173:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l65:s49:k174:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l65:s50:k49:d1:s0)		 goto _forcond_18($16)
led.c(l65:s51:k50:d0:s0)	 _forbreak_18($3) :
led.c(l66:s52:k51:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l66:s53:k52:d0:s0)		iTemp17 [k23 lr53:53 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l67:s54:k53:d0:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
led.c(l67:s55:k54:d0:s0)		iTemp18 [k24 lr55:55 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l68:s56:k55:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l68:s58:k56:d1:s0)	 _forcond_19($19) :
led.c(l68:s59:k175:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l68:s60:k176:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l68:s61:k177:d1:s0)		iTemp19 [k25 lr61:62 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l68:s62:k58:d1:s0)		if iTemp19 [k25 lr61:62 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_19($4)
led.c(l68:s63:k178:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l68:s64:k179:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l68:s65:k180:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l68:s66:k65:d1:s0)		 goto _forcond_19($19)
led.c(l68:s67:k66:d0:s0)	 _forbreak_19($4) :
led.c(l69:s68:k67:d0:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
led.c(l69:s69:k68:d0:s0)		iTemp22 [k30 lr69:69 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l70:s70:k69:d0:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
led.c(l70:s71:k70:d0:s0)		iTemp23 [k31 lr71:71 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l71:s72:k71:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l71:s74:k72:d1:s0)	 _forcond_20($22) :
led.c(l71:s75:k181:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l71:s76:k182:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l71:s77:k183:d1:s0)		iTemp24 [k32 lr77:78 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l71:s78:k74:d1:s0)		if iTemp24 [k32 lr77:78 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_20($5)
led.c(l71:s79:k184:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l71:s80:k185:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l71:s81:k186:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l71:s82:k81:d1:s0)		 goto _forcond_20($22)
led.c(l71:s83:k82:d0:s0)	 _forbreak_20($5) :
led.c(l72:s84:k83:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l72:s85:k84:d0:s0)		iTemp27 [k35 lr85:85 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l73:s86:k85:d0:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
led.c(l73:s87:k86:d0:s0)		iTemp28 [k36 lr87:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l74:s88:k87:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l74:s90:k88:d1:s0)	 _forcond_21($25) :
led.c(l74:s91:k187:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l74:s92:k188:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l74:s93:k189:d1:s0)		iTemp29 [k37 lr93:94 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l74:s94:k90:d1:s0)		if iTemp29 [k37 lr93:94 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_21($6)
led.c(l74:s95:k190:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l74:s96:k191:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l74:s97:k192:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l74:s98:k97:d1:s0)		 goto _forcond_21($25)
led.c(l74:s99:k98:d0:s0)	 _forbreak_21($6) :
led.c(l75:s100:k99:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l75:s101:k100:d0:s0)		iTemp32 [k40 lr101:101 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l76:s102:k101:d0:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
led.c(l76:s103:k102:d0:s0)		iTemp33 [k41 lr103:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l77:s104:k103:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l77:s106:k104:d1:s0)	 _forcond_22($28) :
led.c(l77:s107:k193:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l77:s108:k194:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l77:s109:k195:d1:s0)		iTemp34 [k42 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l77:s110:k106:d1:s0)		if iTemp34 [k42 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_22($7)
led.c(l77:s111:k196:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l77:s112:k197:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l77:s113:k198:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l77:s114:k113:d1:s0)		 goto _forcond_22($28)
led.c(l77:s115:k114:d0:s0)	 _forbreak_22($7) :
led.c(l78:s116:k115:d0:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
led.c(l78:s117:k116:d0:s0)		iTemp37 [k45 lr117:117 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l79:s118:k117:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l79:s119:k118:d0:s0)		iTemp38 [k46 lr119:119 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l80:s120:k119:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l80:s122:k120:d1:s0)	 _forcond_23($31) :
led.c(l80:s123:k199:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l80:s124:k200:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l80:s125:k201:d1:s0)		iTemp39 [k47 lr125:126 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l80:s126:k122:d1:s0)		if iTemp39 [k47 lr125:126 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _return($33)
led.c(l80:s127:k202:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l80:s128:k203:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l80:s129:k204:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l80:s130:k129:d1:s0)		 goto _forcond_23($31)
led.c(l80:s131:k131:d0:s0)	 _return($33) :
led.c(l80:s132:k132:d0:s0)		eproc _atoa [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}

----------------------------------------------------------------
Basic Block _forcond_18 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 11 : bbnum = 10 1st iCode = 42 , last iCode = 46
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 157 bSize = 20
Bits on { (41) }

local defines bitVector :bitvector Size = 157 bSize = 20
Bits on { (41) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (25) (31) (36) (38) (39) (41) (47) (48) }

outDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (25) (31) (36) (38) (39) (41) (47) (48) }

usesDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (39) (41) (48) }

----------------------------------------------------------------
led.c(l65:s42:k40:d1:s0)	 _forcond_18($16) :
led.c(l65:s43:k169:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l65:s44:k170:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l65:s45:k171:d1:s0)		iTemp14 [k20 lr45:46 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l65:s46:k42:d1:s0)		if iTemp14 [k20 lr45:46 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_18($3)
led.c(l65:s47:k172:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l65:s48:k173:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l65:s49:k174:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l65:s50:k49:d1:s0)		 goto _forcond_18($16)
led.c(l65:s51:k50:d0:s0)	 _forbreak_18($3) :
led.c(l66:s52:k51:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l66:s53:k52:d0:s0)		iTemp17 [k23 lr53:53 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l67:s54:k53:d0:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
led.c(l67:s55:k54:d0:s0)		iTemp18 [k24 lr55:55 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l68:s56:k55:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l68:s58:k56:d1:s0)	 _forcond_19($19) :
led.c(l68:s59:k175:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l68:s60:k176:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l68:s61:k177:d1:s0)		iTemp19 [k25 lr61:62 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l68:s62:k58:d1:s0)		if iTemp19 [k25 lr61:62 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_19($4)
led.c(l68:s63:k178:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l68:s64:k179:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l68:s65:k180:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l68:s66:k65:d1:s0)		 goto _forcond_19($19)
led.c(l68:s67:k66:d0:s0)	 _forbreak_19($4) :
led.c(l69:s68:k67:d0:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
led.c(l69:s69:k68:d0:s0)		iTemp22 [k30 lr69:69 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l70:s70:k69:d0:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
led.c(l70:s71:k70:d0:s0)		iTemp23 [k31 lr71:71 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l71:s72:k71:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l71:s74:k72:d1:s0)	 _forcond_20($22) :
led.c(l71:s75:k181:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l71:s76:k182:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l71:s77:k183:d1:s0)		iTemp24 [k32 lr77:78 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l71:s78:k74:d1:s0)		if iTemp24 [k32 lr77:78 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_20($5)
led.c(l71:s79:k184:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l71:s80:k185:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l71:s81:k186:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l71:s82:k81:d1:s0)		 goto _forcond_20($22)
led.c(l71:s83:k82:d0:s0)	 _forbreak_20($5) :
led.c(l72:s84:k83:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l72:s85:k84:d0:s0)		iTemp27 [k35 lr85:85 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l73:s86:k85:d0:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
led.c(l73:s87:k86:d0:s0)		iTemp28 [k36 lr87:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l74:s88:k87:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l74:s90:k88:d1:s0)	 _forcond_21($25) :
led.c(l74:s91:k187:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l74:s92:k188:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l74:s93:k189:d1:s0)		iTemp29 [k37 lr93:94 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l74:s94:k90:d1:s0)		if iTemp29 [k37 lr93:94 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_21($6)
led.c(l74:s95:k190:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l74:s96:k191:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l74:s97:k192:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l74:s98:k97:d1:s0)		 goto _forcond_21($25)
led.c(l74:s99:k98:d0:s0)	 _forbreak_21($6) :
led.c(l75:s100:k99:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l75:s101:k100:d0:s0)		iTemp32 [k40 lr101:101 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l76:s102:k101:d0:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
led.c(l76:s103:k102:d0:s0)		iTemp33 [k41 lr103:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l77:s104:k103:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l77:s106:k104:d1:s0)	 _forcond_22($28) :
led.c(l77:s107:k193:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l77:s108:k194:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l77:s109:k195:d1:s0)		iTemp34 [k42 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l77:s110:k106:d1:s0)		if iTemp34 [k42 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_22($7)
led.c(l77:s111:k196:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l77:s112:k197:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l77:s113:k198:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l77:s114:k113:d1:s0)		 goto _forcond_22($28)
led.c(l77:s115:k114:d0:s0)	 _forbreak_22($7) :
led.c(l78:s116:k115:d0:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
led.c(l78:s117:k116:d0:s0)		iTemp37 [k45 lr117:117 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l79:s118:k117:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l79:s119:k118:d0:s0)		iTemp38 [k46 lr119:119 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l80:s120:k119:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l80:s122:k120:d1:s0)	 _forcond_23($31) :
led.c(l80:s123:k199:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l80:s124:k200:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l80:s125:k201:d1:s0)		iTemp39 [k47 lr125:126 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l80:s126:k122:d1:s0)		if iTemp39 [k47 lr125:126 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _return($33)
led.c(l80:s127:k202:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l80:s128:k203:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l80:s129:k204:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l80:s130:k129:d1:s0)		 goto _forcond_23($31)
led.c(l80:s131:k131:d0:s0)	 _return($33) :
led.c(l80:s132:k132:d0:s0)		eproc _atoa [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}

----------------------------------------------------------------
Basic Block _eBBlock18 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 12 : bbnum = 11 1st iCode = 47 , last iCode = 50
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 157 bSize = 20
Bits on { (47) (48) }

local defines bitVector :bitvector Size = 157 bSize = 20
Bits on { (47) (48) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (25) (31) (36) (38) (39) (41) (47) (48) }

outDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (25) (31) (36) (38) (41) (47) (48) }

usesDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (39) (47) (48) }

----------------------------------------------------------------
led.c(l65:s47:k172:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l65:s48:k173:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l65:s49:k174:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l65:s50:k49:d1:s0)		 goto _forcond_18($16)
led.c(l65:s51:k50:d0:s0)	 _forbreak_18($3) :
led.c(l66:s52:k51:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l66:s53:k52:d0:s0)		iTemp17 [k23 lr53:53 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l67:s54:k53:d0:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
led.c(l67:s55:k54:d0:s0)		iTemp18 [k24 lr55:55 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l68:s56:k55:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l68:s58:k56:d1:s0)	 _forcond_19($19) :
led.c(l68:s59:k175:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l68:s60:k176:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l68:s61:k177:d1:s0)		iTemp19 [k25 lr61:62 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l68:s62:k58:d1:s0)		if iTemp19 [k25 lr61:62 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_19($4)
led.c(l68:s63:k178:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l68:s64:k179:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l68:s65:k180:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l68:s66:k65:d1:s0)		 goto _forcond_19($19)
led.c(l68:s67:k66:d0:s0)	 _forbreak_19($4) :
led.c(l69:s68:k67:d0:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
led.c(l69:s69:k68:d0:s0)		iTemp22 [k30 lr69:69 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l70:s70:k69:d0:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
led.c(l70:s71:k70:d0:s0)		iTemp23 [k31 lr71:71 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l71:s72:k71:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l71:s74:k72:d1:s0)	 _forcond_20($22) :
led.c(l71:s75:k181:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l71:s76:k182:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l71:s77:k183:d1:s0)		iTemp24 [k32 lr77:78 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l71:s78:k74:d1:s0)		if iTemp24 [k32 lr77:78 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_20($5)
led.c(l71:s79:k184:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l71:s80:k185:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l71:s81:k186:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l71:s82:k81:d1:s0)		 goto _forcond_20($22)
led.c(l71:s83:k82:d0:s0)	 _forbreak_20($5) :
led.c(l72:s84:k83:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l72:s85:k84:d0:s0)		iTemp27 [k35 lr85:85 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l73:s86:k85:d0:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
led.c(l73:s87:k86:d0:s0)		iTemp28 [k36 lr87:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l74:s88:k87:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l74:s90:k88:d1:s0)	 _forcond_21($25) :
led.c(l74:s91:k187:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l74:s92:k188:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l74:s93:k189:d1:s0)		iTemp29 [k37 lr93:94 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l74:s94:k90:d1:s0)		if iTemp29 [k37 lr93:94 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_21($6)
led.c(l74:s95:k190:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l74:s96:k191:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l74:s97:k192:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l74:s98:k97:d1:s0)		 goto _forcond_21($25)
led.c(l74:s99:k98:d0:s0)	 _forbreak_21($6) :
led.c(l75:s100:k99:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l75:s101:k100:d0:s0)		iTemp32 [k40 lr101:101 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l76:s102:k101:d0:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
led.c(l76:s103:k102:d0:s0)		iTemp33 [k41 lr103:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l77:s104:k103:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l77:s106:k104:d1:s0)	 _forcond_22($28) :
led.c(l77:s107:k193:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l77:s108:k194:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l77:s109:k195:d1:s0)		iTemp34 [k42 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l77:s110:k106:d1:s0)		if iTemp34 [k42 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_22($7)
led.c(l77:s111:k196:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l77:s112:k197:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l77:s113:k198:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l77:s114:k113:d1:s0)		 goto _forcond_22($28)
led.c(l77:s115:k114:d0:s0)	 _forbreak_22($7) :
led.c(l78:s116:k115:d0:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
led.c(l78:s117:k116:d0:s0)		iTemp37 [k45 lr117:117 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l79:s118:k117:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l79:s119:k118:d0:s0)		iTemp38 [k46 lr119:119 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l80:s120:k119:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l80:s122:k120:d1:s0)	 _forcond_23($31) :
led.c(l80:s123:k199:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l80:s124:k200:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l80:s125:k201:d1:s0)		iTemp39 [k47 lr125:126 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l80:s126:k122:d1:s0)		if iTemp39 [k47 lr125:126 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _return($33)
led.c(l80:s127:k202:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l80:s128:k203:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l80:s129:k204:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l80:s130:k129:d1:s0)		 goto _forcond_23($31)
led.c(l80:s131:k131:d0:s0)	 _return($33) :
led.c(l80:s132:k132:d0:s0)		eproc _atoa [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}

----------------------------------------------------------------
Basic Block _forbreak_18 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 13 : bbnum = 12 1st iCode = 51 , last iCode = 56
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 157 bSize = 20
Bits on { (55) }

local defines bitVector :bitvector Size = 157 bSize = 20
Bits on { (52) (54) (55) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (25) (31) (36) (38) (39) (41) (47) (48) }

outDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (25) (31) (36) (38) (41) (47) (52) (54) (55) }

usesDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (52) (54) }

----------------------------------------------------------------
led.c(l65:s51:k50:d0:s0)	 _forbreak_18($3) :
led.c(l66:s52:k51:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l66:s53:k52:d0:s0)		iTemp17 [k23 lr53:53 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l67:s54:k53:d0:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
led.c(l67:s55:k54:d0:s0)		iTemp18 [k24 lr55:55 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _ligaled [k4 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l68:s56:k55:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l68:s58:k56:d1:s0)	 _forcond_19($19) :
led.c(l68:s59:k175:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l68:s60:k176:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l68:s61:k177:d1:s0)		iTemp19 [k25 lr61:62 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l68:s62:k58:d1:s0)		if iTemp19 [k25 lr61:62 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_19($4)
led.c(l68:s63:k178:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l68:s64:k179:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l68:s65:k180:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l68:s66:k65:d1:s0)		 goto _forcond_19($19)
led.c(l68:s67:k66:d0:s0)	 _forbreak_19($4) :
led.c(l69:s68:k67:d0:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
led.c(l69:s69:k68:d0:s0)		iTemp22 [k30 lr69:69 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l70:s70:k69:d0:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
led.c(l70:s71:k70:d0:s0)		iTemp23 [k31 lr71:71 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l71:s72:k71:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l71:s74:k72:d1:s0)	 _forcond_20($22) :
led.c(l71:s75:k181:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l71:s76:k182:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l71:s77:k183:d1:s0)		iTemp24 [k32 lr77:78 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l71:s78:k74:d1:s0)		if iTemp24 [k32 lr77:78 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_20($5)
led.c(l71:s79:k184:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l71:s80:k185:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l71:s81:k186:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l71:s82:k81:d1:s0)		 goto _forcond_20($22)
led.c(l71:s83:k82:d0:s0)	 _forbreak_20($5) :
led.c(l72:s84:k83:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l72:s85:k84:d0:s0)		iTemp27 [k35 lr85:85 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l73:s86:k85:d0:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
led.c(l73:s87:k86:d0:s0)		iTemp28 [k36 lr87:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l74:s88:k87:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l74:s90:k88:d1:s0)	 _forcond_21($25) :
led.c(l74:s91:k187:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l74:s92:k188:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l74:s93:k189:d1:s0)		iTemp29 [k37 lr93:94 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l74:s94:k90:d1:s0)		if iTemp29 [k37 lr93:94 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_21($6)
led.c(l74:s95:k190:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l74:s96:k191:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l74:s97:k192:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l74:s98:k97:d1:s0)		 goto _forcond_21($25)
led.c(l74:s99:k98:d0:s0)	 _forbreak_21($6) :
led.c(l75:s100:k99:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l75:s101:k100:d0:s0)		iTemp32 [k40 lr101:101 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l76:s102:k101:d0:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
led.c(l76:s103:k102:d0:s0)		iTemp33 [k41 lr103:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l77:s104:k103:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l77:s106:k104:d1:s0)	 _forcond_22($28) :
led.c(l77:s107:k193:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l77:s108:k194:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l77:s109:k195:d1:s0)		iTemp34 [k42 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l77:s110:k106:d1:s0)		if iTemp34 [k42 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_22($7)
led.c(l77:s111:k196:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l77:s112:k197:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l77:s113:k198:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l77:s114:k113:d1:s0)		 goto _forcond_22($28)
led.c(l77:s115:k114:d0:s0)	 _forbreak_22($7) :
led.c(l78:s116:k115:d0:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
led.c(l78:s117:k116:d0:s0)		iTemp37 [k45 lr117:117 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l79:s118:k117:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l79:s119:k118:d0:s0)		iTemp38 [k46 lr119:119 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l80:s120:k119:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l80:s122:k120:d1:s0)	 _forcond_23($31) :
led.c(l80:s123:k199:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l80:s124:k200:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l80:s125:k201:d1:s0)		iTemp39 [k47 lr125:126 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l80:s126:k122:d1:s0)		if iTemp39 [k47 lr125:126 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _return($33)
led.c(l80:s127:k202:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l80:s128:k203:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l80:s129:k204:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l80:s130:k129:d1:s0)		 goto _forcond_23($31)
led.c(l80:s131:k131:d0:s0)	 _return($33) :
led.c(l80:s132:k132:d0:s0)		eproc _atoa [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}

----------------------------------------------------------------
Basic Block preHeaderLbl19 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 14 : bbnum = 13 1st iCode = 57 , last iCode = 57
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 157 bSize = 20
Bits on { }

local defines bitVector :
pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (25) (31) (36) (38) (41) (47) (52) (54) (55) }

outDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (25) (31) (36) (38) (41) (47) (52) (54) (55) }

usesDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { }

----------------------------------------------------------------
led.c(l68:s57:k152:d0:s0)	 preHeaderLbl19($74) :
led.c(l68:s58:k56:d1:s0)	 _forcond_19($19) :
led.c(l68:s59:k175:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l68:s60:k176:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l68:s61:k177:d1:s0)		iTemp19 [k25 lr61:62 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l68:s62:k58:d1:s0)		if iTemp19 [k25 lr61:62 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_19($4)
led.c(l68:s63:k178:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l68:s64:k179:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l68:s65:k180:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l68:s66:k65:d1:s0)		 goto _forcond_19($19)
led.c(l68:s67:k66:d0:s0)	 _forbreak_19($4) :
led.c(l69:s68:k67:d0:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
led.c(l69:s69:k68:d0:s0)		iTemp22 [k30 lr69:69 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l70:s70:k69:d0:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
led.c(l70:s71:k70:d0:s0)		iTemp23 [k31 lr71:71 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l71:s72:k71:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l71:s74:k72:d1:s0)	 _forcond_20($22) :
led.c(l71:s75:k181:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l71:s76:k182:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l71:s77:k183:d1:s0)		iTemp24 [k32 lr77:78 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l71:s78:k74:d1:s0)		if iTemp24 [k32 lr77:78 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_20($5)
led.c(l71:s79:k184:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l71:s80:k185:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l71:s81:k186:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l71:s82:k81:d1:s0)		 goto _forcond_20($22)
led.c(l71:s83:k82:d0:s0)	 _forbreak_20($5) :
led.c(l72:s84:k83:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l72:s85:k84:d0:s0)		iTemp27 [k35 lr85:85 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l73:s86:k85:d0:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
led.c(l73:s87:k86:d0:s0)		iTemp28 [k36 lr87:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l74:s88:k87:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l74:s90:k88:d1:s0)	 _forcond_21($25) :
led.c(l74:s91:k187:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l74:s92:k188:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l74:s93:k189:d1:s0)		iTemp29 [k37 lr93:94 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l74:s94:k90:d1:s0)		if iTemp29 [k37 lr93:94 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_21($6)
led.c(l74:s95:k190:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l74:s96:k191:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l74:s97:k192:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l74:s98:k97:d1:s0)		 goto _forcond_21($25)
led.c(l74:s99:k98:d0:s0)	 _forbreak_21($6) :
led.c(l75:s100:k99:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l75:s101:k100:d0:s0)		iTemp32 [k40 lr101:101 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l76:s102:k101:d0:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
led.c(l76:s103:k102:d0:s0)		iTemp33 [k41 lr103:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l77:s104:k103:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l77:s106:k104:d1:s0)	 _forcond_22($28) :
led.c(l77:s107:k193:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l77:s108:k194:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l77:s109:k195:d1:s0)		iTemp34 [k42 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l77:s110:k106:d1:s0)		if iTemp34 [k42 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_22($7)
led.c(l77:s111:k196:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l77:s112:k197:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l77:s113:k198:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l77:s114:k113:d1:s0)		 goto _forcond_22($28)
led.c(l77:s115:k114:d0:s0)	 _forbreak_22($7) :
led.c(l78:s116:k115:d0:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
led.c(l78:s117:k116:d0:s0)		iTemp37 [k45 lr117:117 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l79:s118:k117:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l79:s119:k118:d0:s0)		iTemp38 [k46 lr119:119 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l80:s120:k119:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l80:s122:k120:d1:s0)	 _forcond_23($31) :
led.c(l80:s123:k199:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l80:s124:k200:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l80:s125:k201:d1:s0)		iTemp39 [k47 lr125:126 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l80:s126:k122:d1:s0)		if iTemp39 [k47 lr125:126 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _return($33)
led.c(l80:s127:k202:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l80:s128:k203:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l80:s129:k204:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l80:s130:k129:d1:s0)		 goto _forcond_23($31)
led.c(l80:s131:k131:d0:s0)	 _return($33) :
led.c(l80:s132:k132:d0:s0)		eproc _atoa [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}

----------------------------------------------------------------
Basic Block _forcond_19 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 15 : bbnum = 14 1st iCode = 58 , last iCode = 62
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 157 bSize = 20
Bits on { (57) }

local defines bitVector :bitvector Size = 157 bSize = 20
Bits on { (57) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (25) (31) (36) (38) (41) (47) (52) (54) (55) (57) (63) (64) }

outDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (25) (31) (36) (38) (41) (47) (52) (54) (55) (57) (63) (64) }

usesDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (55) (57) (64) }

----------------------------------------------------------------
led.c(l68:s58:k56:d1:s0)	 _forcond_19($19) :
led.c(l68:s59:k175:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l68:s60:k176:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l68:s61:k177:d1:s0)		iTemp19 [k25 lr61:62 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l68:s62:k58:d1:s0)		if iTemp19 [k25 lr61:62 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_19($4)
led.c(l68:s63:k178:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l68:s64:k179:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l68:s65:k180:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l68:s66:k65:d1:s0)		 goto _forcond_19($19)
led.c(l68:s67:k66:d0:s0)	 _forbreak_19($4) :
led.c(l69:s68:k67:d0:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
led.c(l69:s69:k68:d0:s0)		iTemp22 [k30 lr69:69 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l70:s70:k69:d0:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
led.c(l70:s71:k70:d0:s0)		iTemp23 [k31 lr71:71 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l71:s72:k71:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l71:s74:k72:d1:s0)	 _forcond_20($22) :
led.c(l71:s75:k181:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l71:s76:k182:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l71:s77:k183:d1:s0)		iTemp24 [k32 lr77:78 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l71:s78:k74:d1:s0)		if iTemp24 [k32 lr77:78 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_20($5)
led.c(l71:s79:k184:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l71:s80:k185:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l71:s81:k186:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l71:s82:k81:d1:s0)		 goto _forcond_20($22)
led.c(l71:s83:k82:d0:s0)	 _forbreak_20($5) :
led.c(l72:s84:k83:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l72:s85:k84:d0:s0)		iTemp27 [k35 lr85:85 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l73:s86:k85:d0:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
led.c(l73:s87:k86:d0:s0)		iTemp28 [k36 lr87:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l74:s88:k87:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l74:s90:k88:d1:s0)	 _forcond_21($25) :
led.c(l74:s91:k187:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l74:s92:k188:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l74:s93:k189:d1:s0)		iTemp29 [k37 lr93:94 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l74:s94:k90:d1:s0)		if iTemp29 [k37 lr93:94 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_21($6)
led.c(l74:s95:k190:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l74:s96:k191:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l74:s97:k192:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l74:s98:k97:d1:s0)		 goto _forcond_21($25)
led.c(l74:s99:k98:d0:s0)	 _forbreak_21($6) :
led.c(l75:s100:k99:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l75:s101:k100:d0:s0)		iTemp32 [k40 lr101:101 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l76:s102:k101:d0:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
led.c(l76:s103:k102:d0:s0)		iTemp33 [k41 lr103:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l77:s104:k103:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l77:s106:k104:d1:s0)	 _forcond_22($28) :
led.c(l77:s107:k193:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l77:s108:k194:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l77:s109:k195:d1:s0)		iTemp34 [k42 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l77:s110:k106:d1:s0)		if iTemp34 [k42 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_22($7)
led.c(l77:s111:k196:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l77:s112:k197:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l77:s113:k198:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l77:s114:k113:d1:s0)		 goto _forcond_22($28)
led.c(l77:s115:k114:d0:s0)	 _forbreak_22($7) :
led.c(l78:s116:k115:d0:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
led.c(l78:s117:k116:d0:s0)		iTemp37 [k45 lr117:117 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l79:s118:k117:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l79:s119:k118:d0:s0)		iTemp38 [k46 lr119:119 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l80:s120:k119:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l80:s122:k120:d1:s0)	 _forcond_23($31) :
led.c(l80:s123:k199:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l80:s124:k200:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l80:s125:k201:d1:s0)		iTemp39 [k47 lr125:126 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l80:s126:k122:d1:s0)		if iTemp39 [k47 lr125:126 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _return($33)
led.c(l80:s127:k202:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l80:s128:k203:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l80:s129:k204:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l80:s130:k129:d1:s0)		 goto _forcond_23($31)
led.c(l80:s131:k131:d0:s0)	 _return($33) :
led.c(l80:s132:k132:d0:s0)		eproc _atoa [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}

----------------------------------------------------------------
Basic Block _eBBlock19 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 16 : bbnum = 15 1st iCode = 63 , last iCode = 66
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 157 bSize = 20
Bits on { (63) (64) }

local defines bitVector :bitvector Size = 157 bSize = 20
Bits on { (63) (64) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (25) (31) (36) (38) (41) (47) (52) (54) (55) (57) (63) (64) }

outDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (25) (31) (36) (38) (41) (47) (52) (54) (57) (63) (64) }

usesDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (55) (63) (64) }

----------------------------------------------------------------
led.c(l68:s63:k178:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l68:s64:k179:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l68:s65:k180:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l68:s66:k65:d1:s0)		 goto _forcond_19($19)
led.c(l68:s67:k66:d0:s0)	 _forbreak_19($4) :
led.c(l69:s68:k67:d0:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
led.c(l69:s69:k68:d0:s0)		iTemp22 [k30 lr69:69 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l70:s70:k69:d0:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
led.c(l70:s71:k70:d0:s0)		iTemp23 [k31 lr71:71 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l71:s72:k71:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l71:s74:k72:d1:s0)	 _forcond_20($22) :
led.c(l71:s75:k181:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l71:s76:k182:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l71:s77:k183:d1:s0)		iTemp24 [k32 lr77:78 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l71:s78:k74:d1:s0)		if iTemp24 [k32 lr77:78 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_20($5)
led.c(l71:s79:k184:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l71:s80:k185:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l71:s81:k186:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l71:s82:k81:d1:s0)		 goto _forcond_20($22)
led.c(l71:s83:k82:d0:s0)	 _forbreak_20($5) :
led.c(l72:s84:k83:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l72:s85:k84:d0:s0)		iTemp27 [k35 lr85:85 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l73:s86:k85:d0:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
led.c(l73:s87:k86:d0:s0)		iTemp28 [k36 lr87:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l74:s88:k87:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l74:s90:k88:d1:s0)	 _forcond_21($25) :
led.c(l74:s91:k187:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l74:s92:k188:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l74:s93:k189:d1:s0)		iTemp29 [k37 lr93:94 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l74:s94:k90:d1:s0)		if iTemp29 [k37 lr93:94 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_21($6)
led.c(l74:s95:k190:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l74:s96:k191:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l74:s97:k192:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l74:s98:k97:d1:s0)		 goto _forcond_21($25)
led.c(l74:s99:k98:d0:s0)	 _forbreak_21($6) :
led.c(l75:s100:k99:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l75:s101:k100:d0:s0)		iTemp32 [k40 lr101:101 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l76:s102:k101:d0:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
led.c(l76:s103:k102:d0:s0)		iTemp33 [k41 lr103:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l77:s104:k103:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l77:s106:k104:d1:s0)	 _forcond_22($28) :
led.c(l77:s107:k193:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l77:s108:k194:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l77:s109:k195:d1:s0)		iTemp34 [k42 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l77:s110:k106:d1:s0)		if iTemp34 [k42 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_22($7)
led.c(l77:s111:k196:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l77:s112:k197:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l77:s113:k198:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l77:s114:k113:d1:s0)		 goto _forcond_22($28)
led.c(l77:s115:k114:d0:s0)	 _forbreak_22($7) :
led.c(l78:s116:k115:d0:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
led.c(l78:s117:k116:d0:s0)		iTemp37 [k45 lr117:117 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l79:s118:k117:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l79:s119:k118:d0:s0)		iTemp38 [k46 lr119:119 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l80:s120:k119:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l80:s122:k120:d1:s0)	 _forcond_23($31) :
led.c(l80:s123:k199:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l80:s124:k200:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l80:s125:k201:d1:s0)		iTemp39 [k47 lr125:126 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l80:s126:k122:d1:s0)		if iTemp39 [k47 lr125:126 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _return($33)
led.c(l80:s127:k202:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l80:s128:k203:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l80:s129:k204:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l80:s130:k129:d1:s0)		 goto _forcond_23($31)
led.c(l80:s131:k131:d0:s0)	 _return($33) :
led.c(l80:s132:k132:d0:s0)		eproc _atoa [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}

----------------------------------------------------------------
Basic Block _forbreak_19 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 17 : bbnum = 16 1st iCode = 67 , last iCode = 72
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 157 bSize = 20
Bits on { (71) }

local defines bitVector :bitvector Size = 157 bSize = 20
Bits on { (68) (70) (71) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (25) (31) (36) (38) (41) (47) (52) (54) (55) (57) (63) (64) }

outDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (25) (31) (36) (38) (41) (47) (52) (54) (57) (63) (68) (70) (71) }

usesDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (68) (70) }

----------------------------------------------------------------
led.c(l68:s67:k66:d0:s0)	 _forbreak_19($4) :
led.c(l69:s68:k67:d0:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
led.c(l69:s69:k68:d0:s0)		iTemp22 [k30 lr69:69 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l70:s70:k69:d0:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
led.c(l70:s71:k70:d0:s0)		iTemp23 [k31 lr71:71 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l71:s72:k71:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l71:s74:k72:d1:s0)	 _forcond_20($22) :
led.c(l71:s75:k181:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l71:s76:k182:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l71:s77:k183:d1:s0)		iTemp24 [k32 lr77:78 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l71:s78:k74:d1:s0)		if iTemp24 [k32 lr77:78 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_20($5)
led.c(l71:s79:k184:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l71:s80:k185:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l71:s81:k186:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l71:s82:k81:d1:s0)		 goto _forcond_20($22)
led.c(l71:s83:k82:d0:s0)	 _forbreak_20($5) :
led.c(l72:s84:k83:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l72:s85:k84:d0:s0)		iTemp27 [k35 lr85:85 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l73:s86:k85:d0:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
led.c(l73:s87:k86:d0:s0)		iTemp28 [k36 lr87:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l74:s88:k87:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l74:s90:k88:d1:s0)	 _forcond_21($25) :
led.c(l74:s91:k187:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l74:s92:k188:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l74:s93:k189:d1:s0)		iTemp29 [k37 lr93:94 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l74:s94:k90:d1:s0)		if iTemp29 [k37 lr93:94 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_21($6)
led.c(l74:s95:k190:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l74:s96:k191:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l74:s97:k192:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l74:s98:k97:d1:s0)		 goto _forcond_21($25)
led.c(l74:s99:k98:d0:s0)	 _forbreak_21($6) :
led.c(l75:s100:k99:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l75:s101:k100:d0:s0)		iTemp32 [k40 lr101:101 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l76:s102:k101:d0:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
led.c(l76:s103:k102:d0:s0)		iTemp33 [k41 lr103:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l77:s104:k103:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l77:s106:k104:d1:s0)	 _forcond_22($28) :
led.c(l77:s107:k193:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l77:s108:k194:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l77:s109:k195:d1:s0)		iTemp34 [k42 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l77:s110:k106:d1:s0)		if iTemp34 [k42 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_22($7)
led.c(l77:s111:k196:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l77:s112:k197:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l77:s113:k198:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l77:s114:k113:d1:s0)		 goto _forcond_22($28)
led.c(l77:s115:k114:d0:s0)	 _forbreak_22($7) :
led.c(l78:s116:k115:d0:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
led.c(l78:s117:k116:d0:s0)		iTemp37 [k45 lr117:117 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l79:s118:k117:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l79:s119:k118:d0:s0)		iTemp38 [k46 lr119:119 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l80:s120:k119:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l80:s122:k120:d1:s0)	 _forcond_23($31) :
led.c(l80:s123:k199:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l80:s124:k200:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l80:s125:k201:d1:s0)		iTemp39 [k47 lr125:126 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l80:s126:k122:d1:s0)		if iTemp39 [k47 lr125:126 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _return($33)
led.c(l80:s127:k202:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l80:s128:k203:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l80:s129:k204:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l80:s130:k129:d1:s0)		 goto _forcond_23($31)
led.c(l80:s131:k131:d0:s0)	 _return($33) :
led.c(l80:s132:k132:d0:s0)		eproc _atoa [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}

----------------------------------------------------------------
Basic Block preHeaderLbl20 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 18 : bbnum = 17 1st iCode = 73 , last iCode = 73
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 157 bSize = 20
Bits on { }

local defines bitVector :
pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (25) (31) (36) (38) (41) (47) (52) (54) (57) (63) (68) (70) (71) }

outDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (25) (31) (36) (38) (41) (47) (52) (54) (57) (63) (68) (70) (71) }

usesDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { }

----------------------------------------------------------------
led.c(l71:s73:k153:d0:s0)	 preHeaderLbl20($76) :
led.c(l71:s74:k72:d1:s0)	 _forcond_20($22) :
led.c(l71:s75:k181:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l71:s76:k182:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l71:s77:k183:d1:s0)		iTemp24 [k32 lr77:78 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l71:s78:k74:d1:s0)		if iTemp24 [k32 lr77:78 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_20($5)
led.c(l71:s79:k184:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l71:s80:k185:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l71:s81:k186:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l71:s82:k81:d1:s0)		 goto _forcond_20($22)
led.c(l71:s83:k82:d0:s0)	 _forbreak_20($5) :
led.c(l72:s84:k83:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l72:s85:k84:d0:s0)		iTemp27 [k35 lr85:85 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l73:s86:k85:d0:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
led.c(l73:s87:k86:d0:s0)		iTemp28 [k36 lr87:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l74:s88:k87:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l74:s90:k88:d1:s0)	 _forcond_21($25) :
led.c(l74:s91:k187:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l74:s92:k188:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l74:s93:k189:d1:s0)		iTemp29 [k37 lr93:94 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l74:s94:k90:d1:s0)		if iTemp29 [k37 lr93:94 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_21($6)
led.c(l74:s95:k190:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l74:s96:k191:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l74:s97:k192:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l74:s98:k97:d1:s0)		 goto _forcond_21($25)
led.c(l74:s99:k98:d0:s0)	 _forbreak_21($6) :
led.c(l75:s100:k99:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l75:s101:k100:d0:s0)		iTemp32 [k40 lr101:101 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l76:s102:k101:d0:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
led.c(l76:s103:k102:d0:s0)		iTemp33 [k41 lr103:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l77:s104:k103:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l77:s106:k104:d1:s0)	 _forcond_22($28) :
led.c(l77:s107:k193:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l77:s108:k194:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l77:s109:k195:d1:s0)		iTemp34 [k42 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l77:s110:k106:d1:s0)		if iTemp34 [k42 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_22($7)
led.c(l77:s111:k196:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l77:s112:k197:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l77:s113:k198:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l77:s114:k113:d1:s0)		 goto _forcond_22($28)
led.c(l77:s115:k114:d0:s0)	 _forbreak_22($7) :
led.c(l78:s116:k115:d0:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
led.c(l78:s117:k116:d0:s0)		iTemp37 [k45 lr117:117 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l79:s118:k117:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l79:s119:k118:d0:s0)		iTemp38 [k46 lr119:119 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l80:s120:k119:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l80:s122:k120:d1:s0)	 _forcond_23($31) :
led.c(l80:s123:k199:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l80:s124:k200:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l80:s125:k201:d1:s0)		iTemp39 [k47 lr125:126 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l80:s126:k122:d1:s0)		if iTemp39 [k47 lr125:126 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _return($33)
led.c(l80:s127:k202:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l80:s128:k203:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l80:s129:k204:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l80:s130:k129:d1:s0)		 goto _forcond_23($31)
led.c(l80:s131:k131:d0:s0)	 _return($33) :
led.c(l80:s132:k132:d0:s0)		eproc _atoa [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}

----------------------------------------------------------------
Basic Block _forcond_20 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 19 : bbnum = 18 1st iCode = 74 , last iCode = 78
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 157 bSize = 20
Bits on { (73) }

local defines bitVector :bitvector Size = 157 bSize = 20
Bits on { (73) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (25) (31) (36) (38) (41) (47) (52) (54) (57) (63) (68) (70) (71) (73) (79) (80) }

outDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (25) (31) (36) (38) (41) (47) (52) (54) (57) (63) (68) (70) (71) (73) (79) (80) }

usesDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (71) (73) (80) }

----------------------------------------------------------------
led.c(l71:s74:k72:d1:s0)	 _forcond_20($22) :
led.c(l71:s75:k181:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l71:s76:k182:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l71:s77:k183:d1:s0)		iTemp24 [k32 lr77:78 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l71:s78:k74:d1:s0)		if iTemp24 [k32 lr77:78 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_20($5)
led.c(l71:s79:k184:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l71:s80:k185:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l71:s81:k186:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l71:s82:k81:d1:s0)		 goto _forcond_20($22)
led.c(l71:s83:k82:d0:s0)	 _forbreak_20($5) :
led.c(l72:s84:k83:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l72:s85:k84:d0:s0)		iTemp27 [k35 lr85:85 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l73:s86:k85:d0:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
led.c(l73:s87:k86:d0:s0)		iTemp28 [k36 lr87:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l74:s88:k87:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l74:s90:k88:d1:s0)	 _forcond_21($25) :
led.c(l74:s91:k187:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l74:s92:k188:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l74:s93:k189:d1:s0)		iTemp29 [k37 lr93:94 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l74:s94:k90:d1:s0)		if iTemp29 [k37 lr93:94 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_21($6)
led.c(l74:s95:k190:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l74:s96:k191:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l74:s97:k192:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l74:s98:k97:d1:s0)		 goto _forcond_21($25)
led.c(l74:s99:k98:d0:s0)	 _forbreak_21($6) :
led.c(l75:s100:k99:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l75:s101:k100:d0:s0)		iTemp32 [k40 lr101:101 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l76:s102:k101:d0:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
led.c(l76:s103:k102:d0:s0)		iTemp33 [k41 lr103:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l77:s104:k103:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l77:s106:k104:d1:s0)	 _forcond_22($28) :
led.c(l77:s107:k193:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l77:s108:k194:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l77:s109:k195:d1:s0)		iTemp34 [k42 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l77:s110:k106:d1:s0)		if iTemp34 [k42 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_22($7)
led.c(l77:s111:k196:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l77:s112:k197:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l77:s113:k198:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l77:s114:k113:d1:s0)		 goto _forcond_22($28)
led.c(l77:s115:k114:d0:s0)	 _forbreak_22($7) :
led.c(l78:s116:k115:d0:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
led.c(l78:s117:k116:d0:s0)		iTemp37 [k45 lr117:117 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l79:s118:k117:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l79:s119:k118:d0:s0)		iTemp38 [k46 lr119:119 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l80:s120:k119:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l80:s122:k120:d1:s0)	 _forcond_23($31) :
led.c(l80:s123:k199:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l80:s124:k200:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l80:s125:k201:d1:s0)		iTemp39 [k47 lr125:126 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l80:s126:k122:d1:s0)		if iTemp39 [k47 lr125:126 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _return($33)
led.c(l80:s127:k202:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l80:s128:k203:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l80:s129:k204:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l80:s130:k129:d1:s0)		 goto _forcond_23($31)
led.c(l80:s131:k131:d0:s0)	 _return($33) :
led.c(l80:s132:k132:d0:s0)		eproc _atoa [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}

----------------------------------------------------------------
Basic Block _eBBlock20 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 20 : bbnum = 19 1st iCode = 79 , last iCode = 82
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 157 bSize = 20
Bits on { (79) (80) }

local defines bitVector :bitvector Size = 157 bSize = 20
Bits on { (79) (80) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (25) (31) (36) (38) (41) (47) (52) (54) (57) (63) (68) (70) (71) (73) (79) (80) }

outDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (25) (31) (36) (38) (41) (47) (52) (54) (57) (63) (68) (70) (73) (79) (80) }

usesDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (71) (79) (80) }

----------------------------------------------------------------
led.c(l71:s79:k184:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l71:s80:k185:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l71:s81:k186:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l71:s82:k81:d1:s0)		 goto _forcond_20($22)
led.c(l71:s83:k82:d0:s0)	 _forbreak_20($5) :
led.c(l72:s84:k83:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l72:s85:k84:d0:s0)		iTemp27 [k35 lr85:85 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l73:s86:k85:d0:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
led.c(l73:s87:k86:d0:s0)		iTemp28 [k36 lr87:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l74:s88:k87:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l74:s90:k88:d1:s0)	 _forcond_21($25) :
led.c(l74:s91:k187:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l74:s92:k188:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l74:s93:k189:d1:s0)		iTemp29 [k37 lr93:94 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l74:s94:k90:d1:s0)		if iTemp29 [k37 lr93:94 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_21($6)
led.c(l74:s95:k190:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l74:s96:k191:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l74:s97:k192:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l74:s98:k97:d1:s0)		 goto _forcond_21($25)
led.c(l74:s99:k98:d0:s0)	 _forbreak_21($6) :
led.c(l75:s100:k99:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l75:s101:k100:d0:s0)		iTemp32 [k40 lr101:101 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l76:s102:k101:d0:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
led.c(l76:s103:k102:d0:s0)		iTemp33 [k41 lr103:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l77:s104:k103:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l77:s106:k104:d1:s0)	 _forcond_22($28) :
led.c(l77:s107:k193:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l77:s108:k194:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l77:s109:k195:d1:s0)		iTemp34 [k42 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l77:s110:k106:d1:s0)		if iTemp34 [k42 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_22($7)
led.c(l77:s111:k196:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l77:s112:k197:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l77:s113:k198:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l77:s114:k113:d1:s0)		 goto _forcond_22($28)
led.c(l77:s115:k114:d0:s0)	 _forbreak_22($7) :
led.c(l78:s116:k115:d0:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
led.c(l78:s117:k116:d0:s0)		iTemp37 [k45 lr117:117 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l79:s118:k117:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l79:s119:k118:d0:s0)		iTemp38 [k46 lr119:119 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l80:s120:k119:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l80:s122:k120:d1:s0)	 _forcond_23($31) :
led.c(l80:s123:k199:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l80:s124:k200:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l80:s125:k201:d1:s0)		iTemp39 [k47 lr125:126 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l80:s126:k122:d1:s0)		if iTemp39 [k47 lr125:126 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _return($33)
led.c(l80:s127:k202:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l80:s128:k203:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l80:s129:k204:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l80:s130:k129:d1:s0)		 goto _forcond_23($31)
led.c(l80:s131:k131:d0:s0)	 _return($33) :
led.c(l80:s132:k132:d0:s0)		eproc _atoa [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}

----------------------------------------------------------------
Basic Block _forbreak_20 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 21 : bbnum = 20 1st iCode = 83 , last iCode = 88
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 157 bSize = 20
Bits on { (87) }

local defines bitVector :bitvector Size = 157 bSize = 20
Bits on { (84) (86) (87) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (25) (31) (36) (38) (41) (47) (52) (54) (57) (63) (68) (70) (71) (73) (79) (80) }

outDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (25) (31) (36) (38) (41) (47) (52) (54) (57) (63) (68) (70) (73) (79) (84) (86) (87) }

usesDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (84) (86) }

----------------------------------------------------------------
led.c(l71:s83:k82:d0:s0)	 _forbreak_20($5) :
led.c(l72:s84:k83:d0:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
led.c(l72:s85:k84:d0:s0)		iTemp27 [k35 lr85:85 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l73:s86:k85:d0:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
led.c(l73:s87:k86:d0:s0)		iTemp28 [k36 lr87:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l74:s88:k87:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l74:s90:k88:d1:s0)	 _forcond_21($25) :
led.c(l74:s91:k187:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l74:s92:k188:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l74:s93:k189:d1:s0)		iTemp29 [k37 lr93:94 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l74:s94:k90:d1:s0)		if iTemp29 [k37 lr93:94 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_21($6)
led.c(l74:s95:k190:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l74:s96:k191:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l74:s97:k192:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l74:s98:k97:d1:s0)		 goto _forcond_21($25)
led.c(l74:s99:k98:d0:s0)	 _forbreak_21($6) :
led.c(l75:s100:k99:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l75:s101:k100:d0:s0)		iTemp32 [k40 lr101:101 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l76:s102:k101:d0:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
led.c(l76:s103:k102:d0:s0)		iTemp33 [k41 lr103:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l77:s104:k103:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l77:s106:k104:d1:s0)	 _forcond_22($28) :
led.c(l77:s107:k193:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l77:s108:k194:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l77:s109:k195:d1:s0)		iTemp34 [k42 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l77:s110:k106:d1:s0)		if iTemp34 [k42 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_22($7)
led.c(l77:s111:k196:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l77:s112:k197:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l77:s113:k198:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l77:s114:k113:d1:s0)		 goto _forcond_22($28)
led.c(l77:s115:k114:d0:s0)	 _forbreak_22($7) :
led.c(l78:s116:k115:d0:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
led.c(l78:s117:k116:d0:s0)		iTemp37 [k45 lr117:117 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l79:s118:k117:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l79:s119:k118:d0:s0)		iTemp38 [k46 lr119:119 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l80:s120:k119:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l80:s122:k120:d1:s0)	 _forcond_23($31) :
led.c(l80:s123:k199:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l80:s124:k200:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l80:s125:k201:d1:s0)		iTemp39 [k47 lr125:126 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l80:s126:k122:d1:s0)		if iTemp39 [k47 lr125:126 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _return($33)
led.c(l80:s127:k202:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l80:s128:k203:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l80:s129:k204:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l80:s130:k129:d1:s0)		 goto _forcond_23($31)
led.c(l80:s131:k131:d0:s0)	 _return($33) :
led.c(l80:s132:k132:d0:s0)		eproc _atoa [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}

----------------------------------------------------------------
Basic Block preHeaderLbl21 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 22 : bbnum = 21 1st iCode = 89 , last iCode = 89
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 157 bSize = 20
Bits on { }

local defines bitVector :
pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (25) (31) (36) (38) (41) (47) (52) (54) (57) (63) (68) (70) (73) (79) (84) (86) (87) }

outDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (25) (31) (36) (38) (41) (47) (52) (54) (57) (63) (68) (70) (73) (79) (84) (86) (87) }

usesDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { }

----------------------------------------------------------------
led.c(l74:s89:k154:d0:s0)	 preHeaderLbl21($78) :
led.c(l74:s90:k88:d1:s0)	 _forcond_21($25) :
led.c(l74:s91:k187:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l74:s92:k188:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l74:s93:k189:d1:s0)		iTemp29 [k37 lr93:94 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l74:s94:k90:d1:s0)		if iTemp29 [k37 lr93:94 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_21($6)
led.c(l74:s95:k190:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l74:s96:k191:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l74:s97:k192:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l74:s98:k97:d1:s0)		 goto _forcond_21($25)
led.c(l74:s99:k98:d0:s0)	 _forbreak_21($6) :
led.c(l75:s100:k99:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l75:s101:k100:d0:s0)		iTemp32 [k40 lr101:101 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l76:s102:k101:d0:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
led.c(l76:s103:k102:d0:s0)		iTemp33 [k41 lr103:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l77:s104:k103:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l77:s106:k104:d1:s0)	 _forcond_22($28) :
led.c(l77:s107:k193:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l77:s108:k194:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l77:s109:k195:d1:s0)		iTemp34 [k42 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l77:s110:k106:d1:s0)		if iTemp34 [k42 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_22($7)
led.c(l77:s111:k196:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l77:s112:k197:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l77:s113:k198:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l77:s114:k113:d1:s0)		 goto _forcond_22($28)
led.c(l77:s115:k114:d0:s0)	 _forbreak_22($7) :
led.c(l78:s116:k115:d0:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
led.c(l78:s117:k116:d0:s0)		iTemp37 [k45 lr117:117 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l79:s118:k117:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l79:s119:k118:d0:s0)		iTemp38 [k46 lr119:119 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l80:s120:k119:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l80:s122:k120:d1:s0)	 _forcond_23($31) :
led.c(l80:s123:k199:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l80:s124:k200:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l80:s125:k201:d1:s0)		iTemp39 [k47 lr125:126 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l80:s126:k122:d1:s0)		if iTemp39 [k47 lr125:126 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _return($33)
led.c(l80:s127:k202:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l80:s128:k203:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l80:s129:k204:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l80:s130:k129:d1:s0)		 goto _forcond_23($31)
led.c(l80:s131:k131:d0:s0)	 _return($33) :
led.c(l80:s132:k132:d0:s0)		eproc _atoa [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}

----------------------------------------------------------------
Basic Block _forcond_21 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 23 : bbnum = 22 1st iCode = 90 , last iCode = 94
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 157 bSize = 20
Bits on { (89) }

local defines bitVector :bitvector Size = 157 bSize = 20
Bits on { (89) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (25) (31) (36) (38) (41) (47) (52) (54) (57) (63) (68) (70) (73) (79) (84) (86) (87) (89) (95) (96) }

outDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (25) (31) (36) (38) (41) (47) (52) (54) (57) (63) (68) (70) (73) (79) (84) (86) (87) (89) (95) (96) }

usesDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (87) (89) (96) }

----------------------------------------------------------------
led.c(l74:s90:k88:d1:s0)	 _forcond_21($25) :
led.c(l74:s91:k187:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l74:s92:k188:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l74:s93:k189:d1:s0)		iTemp29 [k37 lr93:94 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l74:s94:k90:d1:s0)		if iTemp29 [k37 lr93:94 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_21($6)
led.c(l74:s95:k190:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l74:s96:k191:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l74:s97:k192:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l74:s98:k97:d1:s0)		 goto _forcond_21($25)
led.c(l74:s99:k98:d0:s0)	 _forbreak_21($6) :
led.c(l75:s100:k99:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l75:s101:k100:d0:s0)		iTemp32 [k40 lr101:101 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l76:s102:k101:d0:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
led.c(l76:s103:k102:d0:s0)		iTemp33 [k41 lr103:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l77:s104:k103:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l77:s106:k104:d1:s0)	 _forcond_22($28) :
led.c(l77:s107:k193:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l77:s108:k194:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l77:s109:k195:d1:s0)		iTemp34 [k42 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l77:s110:k106:d1:s0)		if iTemp34 [k42 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_22($7)
led.c(l77:s111:k196:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l77:s112:k197:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l77:s113:k198:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l77:s114:k113:d1:s0)		 goto _forcond_22($28)
led.c(l77:s115:k114:d0:s0)	 _forbreak_22($7) :
led.c(l78:s116:k115:d0:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
led.c(l78:s117:k116:d0:s0)		iTemp37 [k45 lr117:117 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l79:s118:k117:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l79:s119:k118:d0:s0)		iTemp38 [k46 lr119:119 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l80:s120:k119:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l80:s122:k120:d1:s0)	 _forcond_23($31) :
led.c(l80:s123:k199:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l80:s124:k200:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l80:s125:k201:d1:s0)		iTemp39 [k47 lr125:126 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l80:s126:k122:d1:s0)		if iTemp39 [k47 lr125:126 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _return($33)
led.c(l80:s127:k202:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l80:s128:k203:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l80:s129:k204:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l80:s130:k129:d1:s0)		 goto _forcond_23($31)
led.c(l80:s131:k131:d0:s0)	 _return($33) :
led.c(l80:s132:k132:d0:s0)		eproc _atoa [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}

----------------------------------------------------------------
Basic Block _eBBlock21 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 24 : bbnum = 23 1st iCode = 95 , last iCode = 98
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 157 bSize = 20
Bits on { (95) (96) }

local defines bitVector :bitvector Size = 157 bSize = 20
Bits on { (95) (96) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (25) (31) (36) (38) (41) (47) (52) (54) (57) (63) (68) (70) (73) (79) (84) (86) (87) (89) (95) (96) }

outDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (25) (31) (36) (38) (41) (47) (52) (54) (57) (63) (68) (70) (73) (79) (84) (86) (89) (95) (96) }

usesDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (87) (95) (96) }

----------------------------------------------------------------
led.c(l74:s95:k190:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l74:s96:k191:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l74:s97:k192:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l74:s98:k97:d1:s0)		 goto _forcond_21($25)
led.c(l74:s99:k98:d0:s0)	 _forbreak_21($6) :
led.c(l75:s100:k99:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l75:s101:k100:d0:s0)		iTemp32 [k40 lr101:101 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l76:s102:k101:d0:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
led.c(l76:s103:k102:d0:s0)		iTemp33 [k41 lr103:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l77:s104:k103:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l77:s106:k104:d1:s0)	 _forcond_22($28) :
led.c(l77:s107:k193:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l77:s108:k194:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l77:s109:k195:d1:s0)		iTemp34 [k42 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l77:s110:k106:d1:s0)		if iTemp34 [k42 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_22($7)
led.c(l77:s111:k196:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l77:s112:k197:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l77:s113:k198:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l77:s114:k113:d1:s0)		 goto _forcond_22($28)
led.c(l77:s115:k114:d0:s0)	 _forbreak_22($7) :
led.c(l78:s116:k115:d0:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
led.c(l78:s117:k116:d0:s0)		iTemp37 [k45 lr117:117 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l79:s118:k117:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l79:s119:k118:d0:s0)		iTemp38 [k46 lr119:119 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l80:s120:k119:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l80:s122:k120:d1:s0)	 _forcond_23($31) :
led.c(l80:s123:k199:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l80:s124:k200:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l80:s125:k201:d1:s0)		iTemp39 [k47 lr125:126 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l80:s126:k122:d1:s0)		if iTemp39 [k47 lr125:126 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _return($33)
led.c(l80:s127:k202:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l80:s128:k203:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l80:s129:k204:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l80:s130:k129:d1:s0)		 goto _forcond_23($31)
led.c(l80:s131:k131:d0:s0)	 _return($33) :
led.c(l80:s132:k132:d0:s0)		eproc _atoa [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}

----------------------------------------------------------------
Basic Block _forbreak_21 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 25 : bbnum = 24 1st iCode = 99 , last iCode = 104
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 157 bSize = 20
Bits on { (103) }

local defines bitVector :bitvector Size = 157 bSize = 20
Bits on { (100) (102) (103) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (25) (31) (36) (38) (41) (47) (52) (54) (57) (63) (68) (70) (73) (79) (84) (86) (87) (89) (95) (96) }

outDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (25) (31) (36) (38) (41) (47) (52) (54) (57) (63) (68) (70) (73) (79) (84) (86) (89) (95) (100) (102) (103) }

usesDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (100) (102) }

----------------------------------------------------------------
led.c(l74:s99:k98:d0:s0)	 _forbreak_21($6) :
led.c(l75:s100:k99:d0:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
led.c(l75:s101:k100:d0:s0)		iTemp32 [k40 lr101:101 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l76:s102:k101:d0:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
led.c(l76:s103:k102:d0:s0)		iTemp33 [k41 lr103:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l77:s104:k103:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l77:s106:k104:d1:s0)	 _forcond_22($28) :
led.c(l77:s107:k193:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l77:s108:k194:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l77:s109:k195:d1:s0)		iTemp34 [k42 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l77:s110:k106:d1:s0)		if iTemp34 [k42 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_22($7)
led.c(l77:s111:k196:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l77:s112:k197:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l77:s113:k198:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l77:s114:k113:d1:s0)		 goto _forcond_22($28)
led.c(l77:s115:k114:d0:s0)	 _forbreak_22($7) :
led.c(l78:s116:k115:d0:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
led.c(l78:s117:k116:d0:s0)		iTemp37 [k45 lr117:117 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l79:s118:k117:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l79:s119:k118:d0:s0)		iTemp38 [k46 lr119:119 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l80:s120:k119:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l80:s122:k120:d1:s0)	 _forcond_23($31) :
led.c(l80:s123:k199:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l80:s124:k200:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l80:s125:k201:d1:s0)		iTemp39 [k47 lr125:126 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l80:s126:k122:d1:s0)		if iTemp39 [k47 lr125:126 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _return($33)
led.c(l80:s127:k202:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l80:s128:k203:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l80:s129:k204:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l80:s130:k129:d1:s0)		 goto _forcond_23($31)
led.c(l80:s131:k131:d0:s0)	 _return($33) :
led.c(l80:s132:k132:d0:s0)		eproc _atoa [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}

----------------------------------------------------------------
Basic Block preHeaderLbl22 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 26 : bbnum = 25 1st iCode = 105 , last iCode = 105
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 157 bSize = 20
Bits on { }

local defines bitVector :
pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (25) (31) (36) (38) (41) (47) (52) (54) (57) (63) (68) (70) (73) (79) (84) (86) (89) (95) (100) (102) (103) }

outDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (25) (31) (36) (38) (41) (47) (52) (54) (57) (63) (68) (70) (73) (79) (84) (86) (89) (95) (100) (102) (103) }

usesDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { }

----------------------------------------------------------------
led.c(l77:s105:k155:d0:s0)	 preHeaderLbl22($80) :
led.c(l77:s106:k104:d1:s0)	 _forcond_22($28) :
led.c(l77:s107:k193:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l77:s108:k194:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l77:s109:k195:d1:s0)		iTemp34 [k42 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l77:s110:k106:d1:s0)		if iTemp34 [k42 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_22($7)
led.c(l77:s111:k196:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l77:s112:k197:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l77:s113:k198:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l77:s114:k113:d1:s0)		 goto _forcond_22($28)
led.c(l77:s115:k114:d0:s0)	 _forbreak_22($7) :
led.c(l78:s116:k115:d0:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
led.c(l78:s117:k116:d0:s0)		iTemp37 [k45 lr117:117 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l79:s118:k117:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l79:s119:k118:d0:s0)		iTemp38 [k46 lr119:119 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l80:s120:k119:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l80:s122:k120:d1:s0)	 _forcond_23($31) :
led.c(l80:s123:k199:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l80:s124:k200:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l80:s125:k201:d1:s0)		iTemp39 [k47 lr125:126 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l80:s126:k122:d1:s0)		if iTemp39 [k47 lr125:126 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _return($33)
led.c(l80:s127:k202:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l80:s128:k203:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l80:s129:k204:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l80:s130:k129:d1:s0)		 goto _forcond_23($31)
led.c(l80:s131:k131:d0:s0)	 _return($33) :
led.c(l80:s132:k132:d0:s0)		eproc _atoa [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}

----------------------------------------------------------------
Basic Block _forcond_22 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 27 : bbnum = 26 1st iCode = 106 , last iCode = 110
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 157 bSize = 20
Bits on { (105) }

local defines bitVector :bitvector Size = 157 bSize = 20
Bits on { (105) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (25) (31) (36) (38) (41) (47) (52) (54) (57) (63) (68) (70) (73) (79) (84) (86) (89) (95) (100) (102) (103) (105) (111) (112) }

outDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (25) (31) (36) (38) (41) (47) (52) (54) (57) (63) (68) (70) (73) (79) (84) (86) (89) (95) (100) (102) (103) (105) (111) (112) }

usesDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (103) (105) (112) }

----------------------------------------------------------------
led.c(l77:s106:k104:d1:s0)	 _forcond_22($28) :
led.c(l77:s107:k193:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l77:s108:k194:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l77:s109:k195:d1:s0)		iTemp34 [k42 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l77:s110:k106:d1:s0)		if iTemp34 [k42 lr109:110 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _forbreak_22($7)
led.c(l77:s111:k196:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l77:s112:k197:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l77:s113:k198:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l77:s114:k113:d1:s0)		 goto _forcond_22($28)
led.c(l77:s115:k114:d0:s0)	 _forbreak_22($7) :
led.c(l78:s116:k115:d0:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
led.c(l78:s117:k116:d0:s0)		iTemp37 [k45 lr117:117 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l79:s118:k117:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l79:s119:k118:d0:s0)		iTemp38 [k46 lr119:119 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l80:s120:k119:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l80:s122:k120:d1:s0)	 _forcond_23($31) :
led.c(l80:s123:k199:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l80:s124:k200:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l80:s125:k201:d1:s0)		iTemp39 [k47 lr125:126 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l80:s126:k122:d1:s0)		if iTemp39 [k47 lr125:126 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _return($33)
led.c(l80:s127:k202:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l80:s128:k203:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l80:s129:k204:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l80:s130:k129:d1:s0)		 goto _forcond_23($31)
led.c(l80:s131:k131:d0:s0)	 _return($33) :
led.c(l80:s132:k132:d0:s0)		eproc _atoa [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}

----------------------------------------------------------------
Basic Block _eBBlock22 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 28 : bbnum = 27 1st iCode = 111 , last iCode = 114
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 157 bSize = 20
Bits on { (111) (112) }

local defines bitVector :bitvector Size = 157 bSize = 20
Bits on { (111) (112) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (25) (31) (36) (38) (41) (47) (52) (54) (57) (63) (68) (70) (73) (79) (84) (86) (89) (95) (100) (102) (103) (105) (111) (112) }

outDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (25) (31) (36) (38) (41) (47) (52) (54) (57) (63) (68) (70) (73) (79) (84) (86) (89) (95) (100) (102) (105) (111) (112) }

usesDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (103) (111) (112) }

----------------------------------------------------------------
led.c(l77:s111:k196:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l77:s112:k197:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l77:s113:k198:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l77:s114:k113:d1:s0)		 goto _forcond_22($28)
led.c(l77:s115:k114:d0:s0)	 _forbreak_22($7) :
led.c(l78:s116:k115:d0:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
led.c(l78:s117:k116:d0:s0)		iTemp37 [k45 lr117:117 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l79:s118:k117:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l79:s119:k118:d0:s0)		iTemp38 [k46 lr119:119 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l80:s120:k119:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l80:s122:k120:d1:s0)	 _forcond_23($31) :
led.c(l80:s123:k199:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l80:s124:k200:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l80:s125:k201:d1:s0)		iTemp39 [k47 lr125:126 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l80:s126:k122:d1:s0)		if iTemp39 [k47 lr125:126 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _return($33)
led.c(l80:s127:k202:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l80:s128:k203:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l80:s129:k204:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l80:s130:k129:d1:s0)		 goto _forcond_23($31)
led.c(l80:s131:k131:d0:s0)	 _return($33) :
led.c(l80:s132:k132:d0:s0)		eproc _atoa [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}

----------------------------------------------------------------
Basic Block _forbreak_22 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 29 : bbnum = 28 1st iCode = 115 , last iCode = 120
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 157 bSize = 20
Bits on { (119) }

local defines bitVector :bitvector Size = 157 bSize = 20
Bits on { (116) (118) (119) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (25) (31) (36) (38) (41) (47) (52) (54) (57) (63) (68) (70) (73) (79) (84) (86) (89) (95) (100) (102) (103) (105) (111) (112) }

outDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (25) (31) (36) (38) (41) (47) (52) (54) (57) (63) (68) (70) (73) (79) (84) (86) (89) (95) (100) (102) (105) (111) (116) (118) (119) }

usesDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (116) (118) }

----------------------------------------------------------------
led.c(l77:s115:k114:d0:s0)	 _forbreak_22($7) :
led.c(l78:s116:k115:d0:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
led.c(l78:s117:k116:d0:s0)		iTemp37 [k45 lr117:117 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l79:s118:k117:d0:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
led.c(l79:s119:k118:d0:s0)		iTemp38 [k46 lr119:119 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _desligaled [k28 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char fixed) fixed}
led.c(l80:s120:k119:d0:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] := 0 {float literal}
led.c(l80:s122:k120:d1:s0)	 _forcond_23($31) :
led.c(l80:s123:k199:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l80:s124:k200:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l80:s125:k201:d1:s0)		iTemp39 [k47 lr125:126 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l80:s126:k122:d1:s0)		if iTemp39 [k47 lr125:126 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _return($33)
led.c(l80:s127:k202:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l80:s128:k203:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l80:s129:k204:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l80:s130:k129:d1:s0)		 goto _forcond_23($31)
led.c(l80:s131:k131:d0:s0)	 _return($33) :
led.c(l80:s132:k132:d0:s0)		eproc _atoa [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}

----------------------------------------------------------------
Basic Block preHeaderLbl23 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 30 : bbnum = 29 1st iCode = 121 , last iCode = 121
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 157 bSize = 20
Bits on { }

local defines bitVector :
pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (25) (31) (36) (38) (41) (47) (52) (54) (57) (63) (68) (70) (73) (79) (84) (86) (89) (95) (100) (102) (105) (111) (116) (118) (119) }

outDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (25) (31) (36) (38) (41) (47) (52) (54) (57) (63) (68) (70) (73) (79) (84) (86) (89) (95) (100) (102) (105) (111) (116) (118) (119) }

usesDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { }

----------------------------------------------------------------
led.c(l80:s121:k156:d0:s0)	 preHeaderLbl23($82) :
led.c(l80:s122:k120:d1:s0)	 _forcond_23($31) :
led.c(l80:s123:k199:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l80:s124:k200:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l80:s125:k201:d1:s0)		iTemp39 [k47 lr125:126 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l80:s126:k122:d1:s0)		if iTemp39 [k47 lr125:126 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _return($33)
led.c(l80:s127:k202:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l80:s128:k203:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l80:s129:k204:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l80:s130:k129:d1:s0)		 goto _forcond_23($31)
led.c(l80:s131:k131:d0:s0)	 _return($33) :
led.c(l80:s132:k132:d0:s0)		eproc _atoa [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}

----------------------------------------------------------------
Basic Block _forcond_23 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 31 : bbnum = 30 1st iCode = 122 , last iCode = 126
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 157 bSize = 20
Bits on { (121) }

local defines bitVector :bitvector Size = 157 bSize = 20
Bits on { (121) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (25) (31) (36) (38) (41) (47) (52) (54) (57) (63) (68) (70) (73) (79) (84) (86) (89) (95) (100) (102) (105) (111) (116) (118) (119) (121) (127) (128) }

outDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (25) (31) (36) (38) (41) (47) (52) (54) (57) (63) (68) (70) (73) (79) (84) (86) (89) (95) (100) (102) (105) (111) (116) (118) (119) (121) (127) (128) }

usesDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (119) (121) (128) }

----------------------------------------------------------------
led.c(l80:s122:k120:d1:s0)	 _forcond_23($31) :
led.c(l80:s123:k199:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l80:s124:k200:d1:s0)		send iTemp0 [k2 lr3:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_tempo_1_9}[r0x00 r0x01 r0x02 r0x03 ]{argreg = 2}
led.c(l80:s125:k201:d1:s0)		iTemp39 [k47 lr125:126 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] = call ___fslt [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
led.c(l80:s126:k122:d1:s0)		if iTemp39 [k47 lr125:126 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x08 ] == 0 goto _return($33)
led.c(l80:s127:k202:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l80:s128:k203:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l80:s129:k204:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l80:s130:k129:d1:s0)		 goto _forcond_23($31)
led.c(l80:s131:k131:d0:s0)	 _return($33) :
led.c(l80:s132:k132:d0:s0)		eproc _atoa [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}

----------------------------------------------------------------
Basic Block _eBBlock23 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 32 : bbnum = 31 1st iCode = 127 , last iCode = 130
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 157 bSize = 20
Bits on { (127) (128) }

local defines bitVector :bitvector Size = 157 bSize = 20
Bits on { (127) (128) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (25) (31) (36) (38) (41) (47) (52) (54) (57) (63) (68) (70) (73) (79) (84) (86) (89) (95) (100) (102) (105) (111) (116) (118) (119) (121) (127) (128) }

outDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (25) (31) (36) (38) (41) (47) (52) (54) (57) (63) (68) (70) (73) (79) (84) (86) (89) (95) (100) (102) (105) (111) (116) (118) (121) (127) (128) }

usesDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (119) (127) (128) }

----------------------------------------------------------------
led.c(l80:s127:k202:d1:s0)		send iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ]{argreg = 1}
led.c(l80:s128:k203:d1:s0)		send 1 {const-float literal}{argreg = 2}
led.c(l80:s129:k204:d1:s0)		iTemp3 [k8 lr8:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ _atoa_j_1_10}[r0x04 r0x05 r0x06 r0x07 ] = call ___fsadd [k51 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
led.c(l80:s130:k129:d1:s0)		 goto _forcond_23($31)
led.c(l80:s131:k131:d0:s0)	 _return($33) :
led.c(l80:s132:k132:d0:s0)		eproc _atoa [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}

----------------------------------------------------------------
Basic Block _return : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 33 : bbnum = 32 1st iCode = 131 , last iCode = 132
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 157 bSize = 20
Bits on { }

local defines bitVector :
pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (25) (31) (36) (38) (41) (47) (52) (54) (57) (63) (68) (70) (73) (79) (84) (86) (89) (95) (100) (102) (105) (111) (116) (118) (119) (121) (127) (128) }

outDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { (2) (4) (6) (9) (15) (20) (22) (25) (31) (36) (38) (41) (47) (52) (54) (57) (63) (68) (70) (73) (79) (84) (86) (89) (95) (100) (102) (105) (111) (116) (118) (119) (121) (127) (128) }

usesDefs Set bitvector :bitvector Size = 157 bSize = 20
Bits on { }

----------------------------------------------------------------
led.c(l80:s131:k131:d0:s0)	 _return($33) :
led.c(l80:s132:k132:d0:s0)		eproc _atoa [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( float fixed) fixed}
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x3
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x3
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x0
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x1
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x2
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x3
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x3
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x2
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x1
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x0
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x8
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x8
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x3
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x2
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x1
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x0
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x8
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x8
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x3
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x2
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x1
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x0
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x8
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x8
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x3
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x2
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x1
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x0
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x8
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x8
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x3
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x2
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x1
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x0
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x8
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x8
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x3
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x2
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x1
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x0
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x8
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x8
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x3
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x2
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x1
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x0
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x8
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x8
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x3
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x2
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x1
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x0
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x8
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x8
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x3
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_freeAllRegs
leaving
<><><><><><><><><><><><><><><><><>
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x3
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x3
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x3
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x3
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x3
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x3
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x3
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x3
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x3
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x3
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x3
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x3
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x3
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x3
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x3
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x3
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x3
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x3
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x3
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x3
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x3
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x3
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x3
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x3
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x3
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x3
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x3
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x3
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x3
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x3
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
